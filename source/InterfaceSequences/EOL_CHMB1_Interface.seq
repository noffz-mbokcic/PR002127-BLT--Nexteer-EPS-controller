[__Header__]
ProductName = "TestStand"
ProductVersion = 23.0.0.49152
CompatibleProdVersion = 23.0.0.0
Version = 1022
Type = "SequenceFile"
Path = ""
ProductVersionString = "2023 Q4 (23.0.0.49152)"
CharEncoding = "SBCS"

[DEF, %OBJROOT]
SF = SequenceFileData
Path = PathValue
StepTypeSubstepsArray = Objs
Expression = ExprValue
StepTypeMenu = Obj
NI_ArrayDimensions = ArrayDimensions
NI_PropertyObjectType = PropertyObjectType
NI_CustomResult = CustomResult
TEInf = Obj
SeqCallStepAdditions = SeqCallModule
StepTypeNIData = Obj
Error = Obj
CommonResults = Obj
NI_SequenceParameterResult = SequenceParameterResult
SequenceArgument = Argument
NoffzUTP_TEF_UI_TestSocket_SetCaption = StepType
NoffzUTP_TEF_UI_TestSocket_SetIcon = StepType
NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue = StepType
NoffzUTP_TEF_UI_TestSocket_ShowMessage = StepType
NoffzUTP_TEF_UI_Station_Statistic_Update = StepType
NoffzUTP_VariantManager_ApplyVariantData = StepType
EditSubstep = StepType
NI_CommonCParameterResult = CommonCParameterResult
FCParameter = FCParameter
FlexCStepAdditions = FCModule
NoneStepAdditions = NoneModule
Label = StepType
NoffzUTP_TEF_Model_TestSocket_GetTestSocketName = StepType
NoffzUTP_TEF_Model_TestSocket_SetSerialNumber = StepType
Statement = StepType
NoffzUTP_TEF_UI_TestSocket_Statistic_Update = StepType
SequenceCall = StepType
NoffzUTP_TEF_Model_Station_GetOperationMode = StepType
Substep = StepType
NI_Flow_If = StepType
NI_Flow_End = StepType
Action = StepType
NI_LabVIEWParameterResult = LabVIEWParameterResult
VIParameter = VIParameter
NI_NodeProperty = LVNodeProperty
FlexGStepAdditions = FGModule
VIParameterElement = VIParameterElement
NI_Flow_While = StepType
NI_Flow_ElseIf = StepType
PostSubstep = StepType
NI_Wait = StepType
NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant = StepType
NI_Flow_Else = StepType
NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog = StepType
NoffzUTP_IOPLCVariableBooleanRead = StepType
Goto = StepType
NoffzUTP_TEF_Model_TestSocket_SkipProductSequence = StepType
NoffzUTP_IO_Code = Obj
NI_Lock = StepType
NI_Rendezvous = StepType
NI_Flow_Select = StepType
NI_Flow_Case = StepType
NI_Flow_ForEach = StepType
NI_Flow_For = StepType
NoffzUTP_TEF_Model_TestSocket_GetSerialNumber = StepType
NoffzUTP_TEF_UI_TestSocket_StepList_Clear = StepType
NoffzUTP_TEF_UI_Station_ShowMessage = StepType
NoffzUTP_IOPLCVariableStringRead = StepType
AquireTesting = Obj
NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant = StepType
CAN_Response = Obj
NoffzUTP_IOPLCVariableI16Read = StepType
NoffzUTP_IOSwitchSPSTSet = StepType
NoffzUTP_IOPLCVariableBooleanWrite = StepType

[DEF, SF]
Seq = Objs
FileGlobalDefaults = Obj
ModelFile = "TYPE, Path"
LoadOpt = Str
UnloadOpt = Str
Version = Str
BatchSync = Num
SFGlobalsScope = Num
Type = Num
ModelOption = Num
Requirements = Obj
%NAME = "Data"

[SF]
%HI: Seq = [16]
%FLG: Seq = 4194304
%FLG: FileGlobalDefaults = 4194304
%FLG: ModelFile = 4194312
LoadOpt = "UseStepLoadOpt"
%FLG: LoadOpt = 4194312
UnloadOpt = "UseStepUnloadOpt"
%FLG: UnloadOpt = 4194312
Version = "0.0.0.0"
%FLG: Version = 4194312
BatchSync = 1
%FLG: BatchSync = 4194312
%FLG: SFGlobalsScope = 4194312
Type = 1
%FLG: Type = 4194312
ModelOption = 1
%FLG: ModelOption = 4194312
%FLG: Requirements = 4194305
%FLG = 4194304

[DEF, SF.Seq]
%[0] = Sequence
%[1] = Sequence
%[2] = Sequence
%[3] = Sequence
%[4] = Sequence
%[5] = Sequence
%[6] = Sequence
%[7] = Sequence
%[8] = Sequence
%[9] = Sequence
%[10] = Sequence
%[11] = Sequence
%[12] = Sequence
%[13] = Sequence
%[14] = Sequence
%[15] = Sequence
%[16] = Sequence

[DEF, SF.Seq[0]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Begin"

[DEF, SF.Seq[0].Parameters]
ErrorText = Str

[SF.Seq[0].Parameters]
%FLG: ErrorText = 4

[SF.Seq[0]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [12]
%FLG: Main = 4194304
%HI: Setup = [3]
%FLG: Setup = 4194304
%FLG: Cleanup = 4194304
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312
%COMMENT Line0001 = "This entry point is executed only once, when the Test Socket is started. Put here the code for socket specific initializ"
%COMMENT Line0002 = "ation."

[DEF, SF.Seq[0].Locals]
ResultList = Objs
TestSocketName = Str
NewSettings = Str
Port = Str
Found = Bool
CHMB = Str
PEAK_Channel = Num
Channels = Nums

[DEF, SF.Seq[0].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[0].Locals]
%HI: Channels = [4]

[DEF, SF.Seq[0].Main]
%[0] = Step
%TYPE: %[0] = "NoffzUTP_TEF_Model_TestSocket_GetTestSocketName"
%[1] = Step
%TYPE: %[1] = "NoffzUTP_TEF_UI_TestSocket_SetCaption"
%[2] = Step
%TYPE: %[2] = "NoffzUTP_TEF_UI_TestSocket_SetIcon"
%[3] = Step
%TYPE: %[3] = "NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue"
%[4] = Step
%TYPE: %[4] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[5] = Step
%TYPE: %[5] = "Statement"
%[6] = Step
%TYPE: %[6] = "Label"
%[7] = Step
%TYPE: %[7] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[8] = Step
%TYPE: %[8] = "Statement"
%[9] = Step
%TYPE: %[9] = "NI_Flow_While"
%[10] = Step
%TYPE: %[10] = "NI_Wait"
%[11] = Step
%TYPE: %[11] = "NI_Flow_End"
%[12] = Step
%TYPE: %[12] = "Label"

[SF.Seq[0].Main[0].TS]
Id = "ID#:PL7oXiqP3ECiDYEgVyakmD"

[DEF, SF.Seq[0].Main[0].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[0].Main[0].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetTestSocketName"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[0].Main[0].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[0].Main[0].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
TestSocketName = "TYPE, SequenceArgument"

[SF.Seq[0].Main[0].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[0].Main[0].TS.SData.ActualArgs.TestSocketName]
UseDef = False
Expr = "Locals.TestSocketName"
ParamType = 2

[DEF, SF.Seq[0].Main[0].TS.SData.Prototype]
TestSocket = Num
TestSocketName = Str

[SF.Seq[0].Main[0].TS.SData.Prototype]
TestSocket = Nan
%FLG: TestSocketName = 4

[DEF, SF.Seq[0].Main[0]]
%NAME = "Model.TestSocket.GetTestSocketName"

[SF.Seq[0].Main[1].TS]
Id = "ID#:ivqprj+Bck+h+CtYlKvefC"

[DEF, SF.Seq[0].Main[1].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[0].Main[1].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.SetCaption"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[0].Main[1].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[0].Main[1].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Caption = "TYPE, SequenceArgument"

[SF.Seq[0].Main[1].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[0].Main[1].TS.SData.ActualArgs.Caption]
UseDef = False
Expr = "Locals.TestSocketName"
ParamType = 2
Flags = 0

[DEF, SF.Seq[0].Main[1].TS.SData.Prototype]
TestSocket = Num
Caption = Str

[SF.Seq[0].Main[1].TS.SData.Prototype]
TestSocket = Nan

[DEF, SF.Seq[0].Main[1]]
%NAME = "UI.TestSocket.SetCaption: TestSocketName"

[SF.Seq[0].Main[2].TS]
Id = "ID#:4k/QvfIos0qLvlh+NxeDRC"

[DEF, SF.Seq[0].Main[2].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[0].Main[2].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.SetIcon"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[0].Main[2].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[0].Main[2].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
IconPath = "TYPE, SequenceArgument"

[SF.Seq[0].Main[2].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[0].Main[2].TS.SData.ActualArgs.IconPath]
UseDef = False
Expr = "\"Inactive.ico\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[0].Main[2].TS.SData.Prototype]
TestSocket = Num
Caption = Str

[SF.Seq[0].Main[2].TS.SData.Prototype]
TestSocket = Nan

[DEF, SF.Seq[0].Main[2]]
%NAME = "UI.TestSocket.SetIcon: Socket Inactive"

[SF.Seq[0].Main[3].TS]
Id = "ID#:zAcR3kWsnEyS5m4Nuqj01B"

[DEF, SF.Seq[0].Main[3].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[0].Main[3].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.TestStatus.SetValue"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[0].Main[3].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[0].Main[3].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Text = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[0].Main[3].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[0].Main[3].TS.SData.ActualArgs.Text]
UseDef = False
Expr = "\"\""
ParamType = 2
Flags = 0

[SF.Seq[0].Main[3].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[0].Main[3].TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[0].Main[3].TS.SData.Prototype]
TestSocket = Num
Text = Str
Color = Num
FontSize = Num

[SF.Seq[0].Main[3].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[0].Main[3].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[0].Main[3]]
%NAME = "UI.TestSocket.TestStatus.SetValue: \"\""

[SF.Seq[0].Main[4].TS]
Id = "ID#:Vt6gd7KickuqICmzjKXjQC"

[DEF, SF.Seq[0].Main[4].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[0].Main[4].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[0].Main[4].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[0].Main[4].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[0].Main[4].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[0].Main[4].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "\"\""
ParamType = 2
Flags = 0

[SF.Seq[0].Main[4].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[0].Main[4].TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[0].Main[4].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[0].Main[4].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[0].Main[4].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[0].Main[4]]
%NAME = "UI.TestSocket.ShowMessage: \"\""

[SF.Seq[0].Main[5].TS]
Id = "ID#:7ZWg0R4V8BG4iVB7nf4f8B"
PostExpr = "Locals.CHMB = Left(Locals.TestSocketName,5)"

[DEF, SF.Seq[0].Main[5]]
%NAME = "get current chaimber"

[SF.Seq[0].Main[6].TS]
Id = "ID#:TJWfiBwV8BG4iVB7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[0].Main]
%FLG: %[6] = 67108864
%FLG: %[12] = 67108864

[SF.Seq[0].Main[7].TS]
Id = "ID#:bL0JAUhA8BG4sVB7nf4f8B"
PreCond = "StationGlobals.System.TestCHMB1"
PreExpr = "StationGlobals.Automation.NumberOfDUTsCHMB1 = 0"

[DEF, SF.Seq[0].Main[7].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[0].Main[7].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[0].Main[7].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[0].Main[7].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[0].Main[7].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[0].Main[7].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "\"There will be no testing on \" + Locals.TestSocketName"
ParamType = 2
Flags = 0

[SF.Seq[0].Main[7].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[0].Main[7].TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[0].Main[7].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[0].Main[7].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[0].Main[7].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[0].Main[7].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[0].Main[7].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[0].Main[7].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[0].Main[7]]
%NAME = "No testing in CHMB"

[SF.Seq[0].Main[8].TS]
Id = "ID#:QkPTsHur8BGKAcyCf5KpWB"
PreCond = "!StationGlobals.System.TestCHMB1"
PostExpr Line0001 = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] = Enums.SEQUENCE_STATE.Ready,\nStationGlobals.Automation.Err"
PostExpr Line0002 = "orInCHMB1 = False\n"

[DEF, SF.Seq[0].Main[8]]
%NAME = "Set that TS is ready"

[SF.Seq[0].Main[9].TS]
Id = "ID#:bb0JAUhA8BG4sVB7nf4f8B"

[SF.Seq[0].Main[9]]
ConditionExpr = "!StationGlobals.System.TestCHMB1"
%COMMENT = "There will be no testing in this chaimber run inf"

[DEF, SF.Seq[0].Main[9]]
%NAME = "While"

[SF.Seq[0].Main[10].TS]
Id = "ID#:br0JAUhA8BG4sVB7nf4f8B"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[0].Main[10].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[0].Main[10].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[0].Main[10]]
TimeExpr = "0.1"

[DEF, SF.Seq[0].Main[10]]
%NAME = "Wait"

[SF.Seq[0].Main[11].TS]
Id = "ID#:b70JAUhA8BG4sVB7nf4f8B"

[DEF, SF.Seq[0].Main[11]]
%NAME = "End"

[SF.Seq[0].Main[12].TS]
Id = "ID#:vMXlN73j7xG4VlB7nf4f8B"
Icon = "ni_blank.ico"
Mode = "Skip"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[DEF, SF.Seq[0].Setup]
%[0] = Step
%TYPE: %[0] = "NI_Flow_If"
%[1] = Step
%TYPE: %[1] = "Statement"
%[2] = Step
%TYPE: %[2] = "Goto"
%[3] = Step
%TYPE: %[3] = "NI_Flow_End"

[SF.Seq[0].Setup[0].TS]
Id = "ID#:MoJmgt9G8BGtpMyCf35SiD"

[SF.Seq[0].Setup[0]]
ConditionExpr = "StationGlobals.RestartRequested[RunState.TestSockets.MyIndex] == True"

[DEF, SF.Seq[0].Setup[0]]
%NAME = "If"

[SF.Seq[0].Setup[1].TS]
Id = "ID#:M4Jmgt9G8BGtpMyCf35SiD"
PostExpr = "StationGlobals.RestartRequested[RunState.TestSockets.MyIndex] = False"

[DEF, SF.Seq[0].Setup[1]]
%NAME = "Reset Restart Variable"

[SF.Seq[0].Setup[2].TS]
Id = "ID#:NIJmgt9G8BGtpMyCf35SiD"
CustTrueActTarget = "\"<Cleanup>\""

[DEF, SF.Seq[0].Setup[2]]
%NAME = "Goto Cleanup"

[SF.Seq[0].Setup[3].TS]
Id = "ID#:NYJmgt9G8BGtpMyCf35SiD"

[DEF, SF.Seq[0].Setup[3]]
%NAME = "End"

[DEF, SF.Seq[0].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[0].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[0].Requirements]
Links = Strs

[SF.Seq[0].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[1]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Pre Batch - ADDED"

[DEF, SF.Seq[1].Parameters]
CHMB = Str
DUT = Str

[SF.Seq[1].Parameters]
%FLG: CHMB = 4
%FLG: DUT = 4

[SF.Seq[1]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [115]
%FLG: Main = 4194304
%HI: Setup = [3]
%FLG: Setup = 4194304
%HI: Cleanup = [1]
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[1].Locals]
TestSocketName = Str
ResultList = Objs
ERROR_SOLVED = Bool
PreviousAlarm = Str
CurrentAlarm = Str
CHMBHP = Bool
CHMBError = Bool
CHMB = Str
MES = Obj
SkipMessage = Bool
DUT = Str
Robot = Obj

[DEF, SF.Seq[1].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[1].Locals]
%FLG: ResultList = 4194304

[DEF, SF.Seq[1].Locals.MES]
ErrorText = Str

[DEF, SF.Seq[1].Locals.Robot]
Reset = Bool
NOK2 = Bool

[DEF, SF.Seq[1].Main]
%[0] = Step
%TYPE: %[0] = "NI_Flow_If"
%[1] = Step
%TYPE: %[1] = "Statement"
%[2] = Step
%TYPE: %[2] = "Statement"
%[3] = Step
%TYPE: %[3] = "Label"
%[4] = Step
%TYPE: %[4] = "NoffzUTP_TEF_Model_Station_GetOperationMode"
%[5] = Step
%TYPE: %[5] = "Statement"
%[6] = Step
%TYPE: %[6] = "Label"
%[7] = Step
%TYPE: %[7] = "Label"
%[8] = Step
%TYPE: %[8] = "Statement"
%[9] = Step
%TYPE: %[9] = "NI_Flow_While"
%[10] = Step
%TYPE: %[10] = "NI_Wait"
%[11] = Step
%TYPE: %[11] = "NI_Flow_If"
%[12] = Step
%TYPE: %[12] = "Label"
%[13] = Step
%TYPE: %[13] = "Label"
%[14] = Step
%TYPE: %[14] = "Label"
%[15] = Step
%TYPE: %[15] = "NoffzUTP_IOPLCVariableBooleanRead"
%[16] = Step
%TYPE: %[16] = "Label"
%[17] = Step
%TYPE: %[17] = "NI_Flow_If"
%[18] = Step
%TYPE: %[18] = "Label"
%[19] = Step
%TYPE: %[19] = "NoffzUTP_IOPLCVariableBooleanRead"
%[20] = Step
%TYPE: %[20] = "NoffzUTP_TEF_UI_Station_ShowMessage"
%[21] = Step
%TYPE: %[21] = "Label"
%[22] = Step
%TYPE: %[22] = "NI_Flow_ElseIf"
%[23] = Step
%TYPE: %[23] = "Label"
%[24] = Step
%TYPE: %[24] = "NoffzUTP_TEF_UI_Station_ShowMessage"
%[25] = Step
%TYPE: %[25] = "NoffzUTP_TEF_UI_Station_ShowMessage"
%[26] = Step
%TYPE: %[26] = "Label"
%[27] = Step
%TYPE: %[27] = "Statement"
%[28] = Step
%TYPE: %[28] = "Label"
%[29] = Step
%TYPE: %[29] = "Statement"
%[30] = Step
%TYPE: %[30] = "Label"
%[31] = Step
%TYPE: %[31] = "Statement"
%[32] = Step
%TYPE: %[32] = "Label"
%[33] = Step
%TYPE: %[33] = "Label"
%[34] = Step
%TYPE: %[34] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[35] = Step
%TYPE: %[35] = "Label"
%[36] = Step
%TYPE: %[36] = "NI_Flow_ElseIf"
%[37] = Step
%TYPE: %[37] = "Label"
%[38] = Step
%TYPE: %[38] = "NoffzUTP_TEF_UI_Station_ShowMessage"
%[39] = Step
%TYPE: %[39] = "Label"
%[40] = Step
%TYPE: %[40] = "Statement"
%[41] = Step
%TYPE: %[41] = "Label"
%[42] = Step
%TYPE: %[42] = "Statement"
%[43] = Step
%TYPE: %[43] = "Label"
%[44] = Step
%TYPE: %[44] = "NI_Flow_Else"
%[45] = Step
%TYPE: %[45] = "Label"
%[46] = Step
%TYPE: %[46] = "NoffzUTP_TEF_UI_Station_ShowMessage"
%[47] = Step
%TYPE: %[47] = "Label"
%[48] = Step
%TYPE: %[48] = "Statement"
%[49] = Step
%TYPE: %[49] = "Label"
%[50] = Step
%TYPE: %[50] = "Statement"
%[51] = Step
%TYPE: %[51] = "Label"
%[52] = Step
%TYPE: %[52] = "Label"
%[53] = Step
%TYPE: %[53] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[54] = Step
%TYPE: %[54] = "NI_Flow_End"
%[55] = Step
%TYPE: %[55] = "Label"
%[56] = Step
%TYPE: %[56] = "NI_Flow_ElseIf"
%[57] = Step
%TYPE: %[57] = "Label"
%[58] = Step
%TYPE: %[58] = "Label"
%[59] = Step
%TYPE: %[59] = "Label"
%[60] = Step
%TYPE: %[60] = "NoffzUTP_TEF_UI_Station_ShowMessage"
%[61] = Step
%TYPE: %[61] = "Label"
%[62] = Step
%TYPE: %[62] = "Label"
%[63] = Step
%TYPE: %[63] = "NI_Flow_ElseIf"
%[64] = Step
%TYPE: %[64] = "Label"
%[65] = Step
%TYPE: %[65] = "Label"
%[66] = Step
%TYPE: %[66] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[67] = Step
%TYPE: %[67] = "NoffzUTP_TEF_UI_Station_ShowMessage"
%[68] = Step
%TYPE: %[68] = "Label"
%[69] = Step
%TYPE: %[69] = "Label"
%[70] = Step
%TYPE: %[70] = "NI_Flow_ElseIf"
%[71] = Step
%TYPE: %[71] = "Label"
%[72] = Step
%TYPE: %[72] = "Label"
%[73] = Step
%TYPE: %[73] = "Label"
%[74] = Step
%TYPE: %[74] = "NoffzUTP_TEF_UI_Station_ShowMessage"
%[75] = Step
%TYPE: %[75] = "Label"
%[76] = Step
%TYPE: %[76] = "NoffzUTP_IOPLCVariableBooleanRead"
%[77] = Step
%TYPE: %[77] = "NoffzUTP_IOPLCVariableBooleanRead"
%[78] = Step
%TYPE: %[78] = "NoffzUTP_IOPLCVariableBooleanRead"
%[79] = Step
%TYPE: %[79] = "NI_Flow_If"
%[80] = Step
%TYPE: %[80] = "Statement"
%[81] = Step
%TYPE: %[81] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[82] = Step
%TYPE: %[82] = "NI_Flow_End"
%[83] = Step
%TYPE: %[83] = "Label"
%[84] = Step
%TYPE: %[84] = "NI_Flow_If"
%[85] = Step
%TYPE: %[85] = "Label"
%[86] = Step
%TYPE: %[86] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[87] = Step
%TYPE: %[87] = "NI_Flow_End"
%[88] = Step
%TYPE: %[88] = "NI_Wait"
%[89] = Step
%TYPE: %[89] = "Label"
%[90] = Step
%TYPE: %[90] = "Label"
%[91] = Step
%TYPE: %[91] = "NI_Flow_ElseIf"
%[92] = Step
%TYPE: %[92] = "Label"
%[93] = Step
%TYPE: %[93] = "Label"
%[94] = Step
%TYPE: %[94] = "Label"
%[95] = Step
%TYPE: %[95] = "NoffzUTP_IOPLCVariableStringRead"
%[96] = Step
%TYPE: %[96] = "NoffzUTP_TEF_UI_Station_ShowMessage"
%[97] = Step
%TYPE: %[97] = "Label"
%[98] = Step
%TYPE: %[98] = "NI_Flow_If"
%[99] = Step
%TYPE: %[99] = "Action"
%[100] = Step
%TYPE: %[100] = "Statement"
%[101] = Step
%TYPE: %[101] = "Label"
%[102] = Step
%TYPE: %[102] = "Label"
%[103] = Step
%TYPE: %[103] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[104] = Step
%TYPE: %[104] = "Label"
%[105] = Step
%TYPE: %[105] = "NI_Flow_End"
%[106] = Step
%TYPE: %[106] = "Label"
%[107] = Step
%TYPE: %[107] = "Label"
%[108] = Step
%TYPE: %[108] = "NI_Flow_ElseIf"
%[109] = Step
%TYPE: %[109] = "Label"
%[110] = Step
%TYPE: %[110] = "NoffzUTP_TEF_UI_Station_ShowMessage"
%[111] = Step
%TYPE: %[111] = "NI_Flow_End"
%[112] = Step
%TYPE: %[112] = "NI_Flow_End"
%[113] = Step
%TYPE: %[113] = "Statement"
%[114] = Step
%TYPE: %[114] = "Label"
%[115] = Step
%TYPE: %[115] = "NI_Flow_End"

[SF.Seq[1].Main[0].TS]
Id = "ID#:HHxqz1n77xG53tQli0T1uC"

[SF.Seq[1].Main[0]]
ConditionExpr = "Locals.DUT == \"DUT1\"//RunState.TestSockets.MyIndex == 0"
%COMMENT = "Let's say that Test Soscket 0 is Master, and Test Socket 1 will wait for him to finish this task"

[DEF, SF.Seq[1].Main[0]]
%NAME = "If"

[SF.Seq[1].Main[1].TS]
Id = "ID#:hGzFSAn57xG52tQli0T1uC"
PostExpr Line0001 = "StationGlobals.Automation.TerminationInCHMB1 = 0,\n\nStationGlobals.Automation.DUT_DMC_CHMB1_DUT1.Code = \"\",\nStationG"
PostExpr Line0002 = "lobals.Automation.DUT_DMC_CHMB1_DUT1.CodeValid = False,\nStationGlobals.Automation.DUT_DMC_CHMB1_DUT1.RawResponse = \"\""
PostExpr Line0003 = ",\nStationGlobals.Automation.DUTpresent_CHMB1_DUT1 = False,\n\nStationGlobals.Automation.DUT_DMC_CHMB1_DUT2.Code = \"\","
PostExpr Line0004 = "\nStationGlobals.Automation.DUT_DMC_CHMB1_DUT2.CodeValid = False,\nStationGlobals.Automation.DUT_DMC_CHMB1_DUT2.RawRespo"
PostExpr Line0005 = "nse = \"\",\nStationGlobals.Automation.DUTpresent_CHMB1_DUT2= False\n"

[SF.Seq[1].Main[1]]
%COMMENT = "We are reseting it here because only one thread will do it"

[DEF, SF.Seq[1].Main[1]]
%NAME = "Reset All Shared Variables in PRE UUT"

[SF.Seq[1].Main[2].TS]
Id = "ID#:3ItiElj77xG53tQli0T1uC"
PostExpr = "StationGlobals.Automation.UUTStatus_CHMB1_DUT1 = \"\",\nStationGlobals.Automation.UUTStatus_CHMB1_DUT2 = \"\""

[DEF, SF.Seq[1].Main[2]]
%NAME = "Reset All Shared Variables in POST UUT"

[SF.Seq[1].Main[3].TS]
Id = "ID#:lYyHsF777xG53tQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main]
%FLG: %[3] = 67108864
%FLG: %[6] = 67108864
%FLG: %[13] = 67108864
%FLG: %[14] = 67108864
%FLG: %[16] = 67108864
%FLG: %[18] = 67108864
%FLG: %[21] = 67108864
%FLG: %[23] = 67108864
%FLG: %[26] = 67108864
%FLG: %[28] = 67108864
%FLG: %[30] = 67108864
%FLG: %[32] = 67108864
%FLG: %[35] = 67108864
%FLG: %[37] = 67108864
%FLG: %[39] = 67108864
%FLG: %[41] = 67108864
%FLG: %[43] = 67108864
%FLG: %[45] = 67108864
%FLG: %[47] = 67108864
%FLG: %[49] = 67108864
%FLG: %[51] = 67108864
%FLG: %[58] = 67108864
%FLG: %[59] = 67108864
%FLG: %[61] = 67108864
%FLG: %[65] = 67108864
%FLG: %[68] = 67108864
%FLG: %[72] = 67108864
%FLG: %[73] = 67108864
%FLG: %[75] = 67108864
%FLG: %[83] = 67108864
%FLG: %[89] = 67108864
%FLG: %[93] = 67108864
%FLG: %[94] = 67108864
%FLG: %[97] = 67108864
%FLG: %[101] = 67108864
%FLG: %[104] = 67108864
%FLG: %[106] = 67108864
%FLG: %[109] = 67108864
%FLG: %[114] = 67108864

[SF.Seq[1].Main[4].TS]
Id = "ID#:XJfD7nX67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[4].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[4].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.Station.GetOperationMode"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Main[4].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[4].TS.SData.ActualArgs]
OperationMode = "TYPE, SequenceArgument"

[SF.Seq[1].Main[4].TS.SData.ActualArgs.OperationMode]
UseDef = False
Expr = "FileGlobals.OperationMode"
ParamType = 2

[DEF, SF.Seq[1].Main[4].TS.SData.Prototype]
OperationMode = Str

[SF.Seq[1].Main[4].TS.SData.Prototype]
%FLG: OperationMode = 4

[DEF, SF.Seq[1].Main[4]]
%NAME = "Model.Station.GetOperationMode"

[SF.Seq[1].Main[5].TS]
Id = "ID#:/e+K+3X67xG53dQli0T1uC"
PostExpr = "Locals.PreviousAlarm = \"\""

[DEF, SF.Seq[1].Main[5]]
%NAME = "Set previous alarm to empty string"

[SF.Seq[1].Main[6].TS]
Id = "ID#:panKXVr77xG53tQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[7].TS]
Id = "ID#:EMAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[7]]
%NAME = "MACHINE STATE FOR OPERATING MODE OF THE SYSTEM"

[SF.Seq[1].Main[8].TS]
Id = "ID#:EcAsAnb67xG53dQli0T1uC"
PostExpr = "FileGlobals.StateMachineLoop = True"

[DEF, SF.Seq[1].Main[8]]
%NAME = "Set value for StateMachineLoop to TRUE"

[SF.Seq[1].Main[9].TS]
Id = "ID#:EsAsAnb67xG53dQli0T1uC"

[SF.Seq[1].Main[9]]
ConditionExpr = "FileGlobals.StateMachineLoop"

[DEF, SF.Seq[1].Main[9]]
%NAME = "While"

[SF.Seq[1].Main[10].TS]
Id = "ID#:dtrDlhip8BGJ/cyCf5KpWB"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[1].Main[10].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[1].Main[10].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[1].Main[10]]
SeqCallName = "Reset CHMB error signal"
TimeExpr = "0.05"
%COMMENT = "Wait to avoid overload of the system wtth 2 chambers"

[DEF, SF.Seq[1].Main[10]]
%NAME = "Wait"

[SF.Seq[1].Main[11].TS]
Id = "ID#:E8AsAnb67xG53dQli0T1uC"

[SF.Seq[1].Main[11]]
ConditionExpr Line0001 = "StationGlobals.CurrentOperatingMode == 1 && StationGlobals.Automation.ErrorInCHMB1 == False // AUTOMATIC MODE AND NO ERR"
ConditionExpr Line0002 = "OR"
%COMMENT Line0001 = "- This is Noraml mode\n- In the same time before every test we want to be sure that system is in HP\n- Only in this stat"
%COMMENT Line0002 = "e we are stopping the State Machine Loop and\n- Continue with production"

[DEF, SF.Seq[1].Main[11]]
%NAME = "If"

[SF.Seq[1].Main[12].TS]
Id = "ID#:FMAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[12]]
%NAME = "START OF THE AUTOMATIC - NO ERROR STATE"

[SF.Seq[1].Main[13].TS]
Id = "ID#:JE1j8UAR8BG4hlB7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[14].TS]
Id = "ID#:FcAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[15].TS]
Id = "ID#:FsAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[15].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[15].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[1].Main[15].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[15].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[1].Main[15].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.CHMBHP"
ParamType = 16

[SF.Seq[1].Main[15].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"SYSTEM_MISO.\"+ Locals.CHMB +\"Hp\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[1].Main[15].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[1].Main[15].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[1].Main[15]]
%NAME = "Check if CHMB1 is in Home Position"

[SF.Seq[1].Main[16].TS]
Id = "ID#:GcAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[17].TS]
Id = "ID#:GsAsAnb67xG53dQli0T1uC"

[SF.Seq[1].Main[17]]
ConditionExpr = "Locals.CHMBHP== False"
%COMMENT = "If CHMB1 is not in HP before evry test operator needs to send it to HP"

[DEF, SF.Seq[1].Main[17]]
%NAME = "If"

[SF.Seq[1].Main[18].TS]
Id = "ID#:G8AsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[19].TS]
Id = "ID#:HMAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[19].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[19].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[1].Main[19].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[19].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[1].Main[19].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.CHMBHP"
ParamType = 16

[SF.Seq[1].Main[19].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"SYSTEM_MISO.\"+ Locals.CHMB + \"Hp\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[1].Main[19].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[1].Main[19].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[1].Main[19]]
%NAME = "Check if CHMB1 is in Home Position"

[SF.Seq[1].Main[20].TS]
Id = "ID#:HcAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[20].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[20].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Main[20].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[20].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[1].Main[20].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"TO_HOME_SHORT\")"
ParamType = 2
Flags = 0

[SF.Seq[1].Main[20].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Main[20].TS.SData.ActualArgs.FontSize]
Expr = "30"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[1].Main[20].TS.SData.Prototype]
Message = Str
Color = Num
FontSize = Num

[SF.Seq[1].Main[20].TS.SData.Prototype]
Color = Nan
FontSize = Nan

[SF.Seq[1].Main[20].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[1].Main[20]]
%NAME = "Tell operator to send CHMB1 to home position"

[SF.Seq[1].Main[21].TS]
Id = "ID#:HsAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[22].TS]
Id = "ID#:SsAsAnb67xG53dQli0T1uC"

[SF.Seq[1].Main[22]]
ConditionExpr = "Locals.ERROR_SOLVED == True"
%COMMENT Line0001 = "If Error_Solved variable is true that means that operator succeed to solve\nit from Manual mode; In that case sockets th"
%COMMENT Line0002 = "at were terminated because of that\nerror needs to be retested"

[DEF, SF.Seq[1].Main[22]]
%NAME = "Else If"

[SF.Seq[1].Main[23].TS]
Id = "ID#:S8AsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[24].TS]
Id = "ID#:A3saCV+r8BGKAcyCf5KpWB"

[DEF, SF.Seq[1].Main[24].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[24].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Main[24].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[24].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[1].Main[24].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"TESTING_STARTING\")"
ParamType = 2
Flags = 0

[SF.Seq[1].Main[24].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Main[24].TS.SData.ActualArgs.FontSize]
Expr = "30"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[1].Main[24].TS.SData.Prototype]
Message = Str
Color = Num
FontSize = Num

[SF.Seq[1].Main[24].TS.SData.Prototype]
Color = Nan
FontSize = Nan

[SF.Seq[1].Main[24].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[1].Main[24]]
%NAME = "Tell operator that TESTING is starting"

[SF.Seq[1].Main[25].TS]
Id = "ID#:TMAsAnb67xG53dQli0T1uC"
Mode = "Skip"

[DEF, SF.Seq[1].Main[25].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[25].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Main[25].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[25].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[1].Main[25].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"RETEST_AFTER_ERROR\")"
ParamType = 2
Flags = 0

[SF.Seq[1].Main[25].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Main[25].TS.SData.ActualArgs.FontSize]
Expr = "30"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[1].Main[25].TS.SData.Prototype]
Message = Str
Color = Num
FontSize = Num

[SF.Seq[1].Main[25].TS.SData.Prototype]
Color = Nan
FontSize = Nan

[SF.Seq[1].Main[25].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[1].Main[25]]
%NAME = "Tell operator that RETEST after error is starting"

[SF.Seq[1].Main[26].TS]
Id = "ID#:XMAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[27].TS]
Id = "ID#:au0PDnj67xG53dQli0T1uC"
PostExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] = Enums.SEQUENCE_STATE.Ready"

[DEF, SF.Seq[1].Main[27]]
%NAME = "Set that TS is ready"

[SF.Seq[1].Main[28].TS]
Id = "ID#:a+0PDnj67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[29].TS]
Id = "ID#:XcAsAnb67xG53dQli0T1uC"
PostExpr = "Locals.ERROR_SOLVED = False"

[DEF, SF.Seq[1].Main[29]]
%NAME = "Set variable ERROR SOLVED to False"

[SF.Seq[1].Main[30].TS]
Id = "ID#:XsAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[31].TS]
Id = "ID#:X8AsAnb67xG53dQli0T1uC"
PostExpr = "FileGlobals.StateMachineLoop = False"

[DEF, SF.Seq[1].Main[31]]
%NAME = "Set value for StateMachineLoop to FALSE so we can continue with production"

[SF.Seq[1].Main[32].TS]
Id = "ID#:XucCXTyV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[33].TS]
Id = "ID#:WOcCXTyV8BGJ68yCf5KpWB"
Mode = "Skip"

[DEF, SF.Seq[1].Main[33]]
%NAME = "Reset Error signal"

[SF.Seq[1].Main[34].TS]
Id = "ID#:WecCXTyV8BGJ68yCf5KpWB"
Mode = "Skip"

[DEF, SF.Seq[1].Main[34].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[34].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[1].Main[34].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[34].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[1].Main[34].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[1].Main[34].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Error\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[1].Main[34].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[1].Main[34]]
%NAME = "Reset Error Signal"

[SF.Seq[1].Main[35].TS]
Id = "ID#:YMAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[36].TS]
Id = "ID#:YcAsAnb67xG53dQli0T1uC"

[SF.Seq[1].Main[36]]
ConditionExpr = "StationGlobals.Automation.TerminationInCHMB1 == True"
%COMMENT Line0001 = "If Termination in Sequence happend (Switched mode to Manual/Operator press Termination Button)\nwe need to retest socket"
%COMMENT Line0002 = "s which were terminated"

[DEF, SF.Seq[1].Main[36]]
%NAME = "Else If"

[SF.Seq[1].Main[37].TS]
Id = "ID#:YsAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[38].TS]
Id = "ID#:Y8AsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[38].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[38].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Main[38].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[38].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[1].Main[38].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"RETEST_AFTER_TERMINATION\")"
ParamType = 2
Flags = 0

[SF.Seq[1].Main[38].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Main[38].TS.SData.ActualArgs.FontSize]
Expr = "30"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[1].Main[38].TS.SData.Prototype]
Message = Str
Color = Num
FontSize = Num

[SF.Seq[1].Main[38].TS.SData.Prototype]
Color = Nan
FontSize = Nan

[SF.Seq[1].Main[38].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[1].Main[38]]
%NAME = "Tell operator that RETEST after Termination is starting"

[SF.Seq[1].Main[39].TS]
Id = "ID#:ZMAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[40].TS]
Id = "ID#:AdywI3j67xG53dQli0T1uC"
PostExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] = Enums.SEQUENCE_STATE.Ready"

[DEF, SF.Seq[1].Main[40]]
%NAME = "Set that TS is ready"

[SF.Seq[1].Main[41].TS]
Id = "ID#:c8AsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[42].TS]
Id = "ID#:dMAsAnb67xG53dQli0T1uC"
PostExpr = "FileGlobals.StateMachineLoop = False"

[DEF, SF.Seq[1].Main[42]]
%NAME = "Set value for StateMachineLoop to FALSE so we can continue with production"

[SF.Seq[1].Main[43].TS]
Id = "ID#:dcAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[44].TS]
Id = "ID#:dsAsAnb67xG53dQli0T1uC"

[SF.Seq[1].Main[44]]
%COMMENT = "If nothing from above is True, we will normally continue with production"

[DEF, SF.Seq[1].Main[44]]
%NAME = "Else"

[SF.Seq[1].Main[45].TS]
Id = "ID#:d8AsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[46].TS]
Id = "ID#:eMAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[46].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[46].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Main[46].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[46].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[1].Main[46].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"TESTING_STARTING\")"
ParamType = 2
Flags = 0

[SF.Seq[1].Main[46].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Main[46].TS.SData.ActualArgs.FontSize]
Expr = "30"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[1].Main[46].TS.SData.Prototype]
Message = Str
Color = Num
FontSize = Num

[SF.Seq[1].Main[46].TS.SData.Prototype]
Color = Nan
FontSize = Nan

[SF.Seq[1].Main[46].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[1].Main[46]]
%NAME = "Tell operator that TESTING is starting"

[SF.Seq[1].Main[47].TS]
Id = "ID#:ecAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[48].TS]
Id = "ID#:fcAsAnb67xG53dQli0T1uC"
PostExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] = Enums.SEQUENCE_STATE.Ready"

[DEF, SF.Seq[1].Main[48]]
%NAME = "Set that TS is ready"

[SF.Seq[1].Main[49].TS]
Id = "ID#:gsAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[50].TS]
Id = "ID#:g8AsAnb67xG53dQli0T1uC"
PostExpr = "FileGlobals.StateMachineLoop = False"

[DEF, SF.Seq[1].Main[50]]
%NAME = "Set value for StateMachineLoop to FALSE so we can continue with production"

[SF.Seq[1].Main[51].TS]
Id = "ID#:hMAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[52].TS]
Id = "ID#:WfedNT2V8BGJ68yCf5KpWB"
Mode = "Skip"

[DEF, SF.Seq[1].Main[52]]
%NAME = "Reset Error signal"

[SF.Seq[1].Main[53].TS]
Id = "ID#:WvedNT2V8BGJ68yCf5KpWB"
Mode = "Skip"

[DEF, SF.Seq[1].Main[53].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[53].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[1].Main[53].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[53].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[1].Main[53].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[1].Main[53].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Error\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[1].Main[53].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[1].Main[53]]
%NAME = "Reset Error Signal"

[SF.Seq[1].Main[54].TS]
Id = "ID#:hcAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[54]]
%NAME = "End"

[SF.Seq[1].Main[55].TS]
Id = "ID#:hsAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[55]]
%NAME = "END OF THE AUTOMATIC - NO ERROR STATE"

[SF.Seq[1].Main[56].TS]
Id = "ID#:h8AsAnb67xG53dQli0T1uC"

[SF.Seq[1].Main[56]]
ConditionExpr = "StationGlobals.CurrentOperatingMode == 0 && StationGlobals.Automation.ErrorInCHMB1 == False // MANUAL MODE AND NO ERROR"
%COMMENT = "- In this state we are waiting until Operator ends with Manual mode\n"

[DEF, SF.Seq[1].Main[56]]
%NAME = "Else If"

[SF.Seq[1].Main[57].TS]
Id = "ID#:iMAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[57]]
%NAME = "START OF THE MANUAL - NO ERROR STATE"

[SF.Seq[1].Main[58].TS]
Id = "ID#:T/t83EAR8BG4hlB7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[59].TS]
Id = "ID#:icAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[60].TS]
Id = "ID#:isAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[60].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[60].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Main[60].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[60].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[1].Main[60].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"IN_MANUAL\")"
ParamType = 2
Flags = 0

[SF.Seq[1].Main[60].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Main[60].TS.SData.ActualArgs.FontSize]
Expr = "30"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[1].Main[60].TS.SData.Prototype]
Message = Str
Color = Num
FontSize = Num

[SF.Seq[1].Main[60].TS.SData.Prototype]
Color = Nan
FontSize = Nan

[SF.Seq[1].Main[60].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[1].Main[60]]
%NAME = "Write that Operator entered MANUAL MODE"

[SF.Seq[1].Main[61].TS]
Id = "ID#:i8AsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[62].TS]
Id = "ID#:lcAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[62]]
%NAME = "END OF THE MANUAL - NO ERROR STATE"

[SF.Seq[1].Main[63].TS]
Id = "ID#:lsAsAnb67xG53dQli0T1uC"

[SF.Seq[1].Main[63]]
ConditionExpr = "StationGlobals.CurrentOperatingMode == 1 && StationGlobals.Automation.ErrorInCHMB1 == True // AUTOMATIC MODE AND ERROR"
%COMMENT Line0001 = "- We need to finish all tests that can be finished and pause the ones on\nwhich error happaned so in case that is solved"
%COMMENT Line0002 = " in manual mode to be retested after\n- We must wait for operator to enter Manual mode and try to solve the error"

[DEF, SF.Seq[1].Main[63]]
%NAME = "Else If"

[SF.Seq[1].Main[64].TS]
Id = "ID#:l8AsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[64]]
%NAME = "START OF THE AUTOMATIC - ERROR STATE"

[SF.Seq[1].Main[65].TS]
Id = "ID#:YJfp1UAR8BG4hlB7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[66].TS]
Id = "ID#:yxw5Wnz67xG53dQli0T1uC"
PreCond = "!Locals.SkipMessage"

[DEF, SF.Seq[1].Main[66].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[66].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Main[66].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[66].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[1].Main[66].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Main[66].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"ERROR_GO_TO_MANUAL\")"
ParamType = 2
Flags = 0

[SF.Seq[1].Main[66].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Main[66].TS.SData.ActualArgs.FontSize]
Expr = "40"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[1].Main[66].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[1].Main[66].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[1].Main[66].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[1].Main[66].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[1].Main[66].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[1].Main[66].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[1].Main[66]]
%NAME = "TELL operator to enter Manual mode and solve the error"

[SF.Seq[1].Main[67].TS]
Id = "ID#:NlGDFV+r8BGKAcyCf5KpWB"

[DEF, SF.Seq[1].Main[67].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[67].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Main[67].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[67].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[1].Main[67].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"ERROR_GO_TO_MANUAL\")"
ParamType = 2
Flags = 0

[SF.Seq[1].Main[67].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Main[67].TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[1].Main[67].TS.SData.Prototype]
Message = Str
Color = Num
FontSize = Num

[SF.Seq[1].Main[67].TS.SData.Prototype]
Color = Nan
FontSize = Nan

[SF.Seq[1].Main[67].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[1].Main[67]]
%NAME = "TELL operator to enter Manual mode and solve the error"

[SF.Seq[1].Main[68].TS]
Id = "ID#:msAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[69].TS]
Id = "ID#:m8AsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[69]]
%NAME = "END OF THE AUTOMATIC - ERROR STATE"

[SF.Seq[1].Main[70].TS]
Id = "ID#:nMAsAnb67xG53dQli0T1uC"

[SF.Seq[1].Main[70]]
ConditionExpr = "StationGlobals.CurrentOperatingMode == 0 && StationGlobals.Automation.ErrorInCHMB1 == True // MANUAL MODE AND ERROR"
%COMMENT Line0001 = "- In this state we are waiting for Opeartor to try to solve the ERROR that happend\n- In the same time we are checiking "
%COMMENT Line0002 = "the System Error Signal; While that signal\nis True we are holding our ERROR flag on True also; When it get back to\nFal"
%COMMENT Line0003 = "se we are changing our ERROR flag to False\n- At the end Set a flag that error is solved from Manual mode and go back to"
%COMMENT Line0004 = "\nAUTO - NO ERROR and unpause the sequences that had problem"

[DEF, SF.Seq[1].Main[70]]
%NAME = "Else If"

[SF.Seq[1].Main[71].TS]
Id = "ID#:ncAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[71]]
%NAME = "START OF THE MANUAL - ERROR STATE"

[SF.Seq[1].Main[72].TS]
Id = "ID#:X5fp1UAR8BG4hlB7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[73].TS]
Id = "ID#:nsAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[74].TS]
Id = "ID#:n8AsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[74].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[74].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Main[74].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[74].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[1].Main[74].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"IN_MANUAL\")"
ParamType = 2
Flags = 0

[SF.Seq[1].Main[74].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Main[74].TS.SData.ActualArgs.FontSize]
Expr = "30"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[1].Main[74].TS.SData.Prototype]
Message = Str
Color = Num
FontSize = Num

[SF.Seq[1].Main[74].TS.SData.Prototype]
Color = Nan
FontSize = Nan

[SF.Seq[1].Main[74].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[1].Main[74]]
%NAME = "Write that Operator entered MANUAL MODE"

[SF.Seq[1].Main[75].TS]
Id = "ID#:oMAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[76].TS]
Id = "ID#:QxOajSad8BGJ9syCf5KpWB"

[DEF, SF.Seq[1].Main[76].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[76].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[1].Main[76].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[76].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[1].Main[76].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Robot.Reset"
ParamType = 16

[SF.Seq[1].Main[76].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_SIGNALS_FROM_MASTER_PLC_\"+Locals.CHMB+\"_Reset\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[1].Main[76].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[1].Main[76].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[1].Main[76]]
%NAME = "Read Robot reset"

[SF.Seq[1].Main[77].TS]
Id = "ID#:z5nxx1ur8BGKAcyCf5KpWB"

[DEF, SF.Seq[1].Main[77].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[77].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[1].Main[77].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[77].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[1].Main[77].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Robot.NOK2"
ParamType = 16

[SF.Seq[1].Main[77].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_CHMB2_NOK_PART_ButtonPressed\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[1].Main[77].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[1].Main[77].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[1].Main[77]]
%NAME = "Read Robot reset manual"

[SF.Seq[1].Main[78].TS]
Id = "ID#:ocAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[78].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[78].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[1].Main[78].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[78].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[1].Main[78].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.CHMBError"
ParamType = 16

[SF.Seq[1].Main[78].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"SYSTEM_MISO.\"+Locals.CHMB+\"Error\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[1].Main[78].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[1].Main[78].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[1].Main[78]]
%NAME = "Check if Operator solved Error by keeping track of Syste Error variable"

[SF.Seq[1].Main[79].TS]
Id = "ID#:osAsAnb67xG53dQli0T1uC"

[SF.Seq[1].Main[79]]
ConditionExpr = "(Locals.CHMBError == False) &&( (Locals.Robot.Reset == True) || (Locals.Robot.NOK2 == True))"

[DEF, SF.Seq[1].Main[79]]
%NAME = "If"

[SF.Seq[1].Main[80].TS]
Id = "ID#:o8AsAnb67xG53dQli0T1uC"
PostExpr = "Locals.ERROR_SOLVED = True, \nStationGlobals.Automation.ErrorInCHMB1 = False"

[DEF, SF.Seq[1].Main[80]]
%NAME = "Set variable ERROR SOLVED to true and ErrorInSequence to False"

[SF.Seq[1].Main[81].TS]
Id = "ID#:1aBHvNmp8BGJ/cyCf5KpWB"

[DEF, SF.Seq[1].Main[81].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[81].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[1].Main[81].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[81].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[1].Main[81].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[1].Main[81].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Error\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[1].Main[81].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[1].Main[81]]
%NAME = "Reset CHMB error signal"

[SF.Seq[1].Main[82].TS]
Id = "ID#:pMAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[82]]
%NAME = "End"

[SF.Seq[1].Main[83].TS]
Id = "ID#:pcAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[84].TS]
Id = "ID#:/Mo3vDuV8BGJ68yCf5KpWB"

[SF.Seq[1].Main[84]]
ConditionExpr = "StationGlobals.PreviousOperatingMode == 100"
%COMMENT = "If previous state was alarm - remove request for CU ON"

[DEF, SF.Seq[1].Main[84]]
%NAME = "If"

[SF.Seq[1].Main[85].TS]
Id = "ID#:j2/R3juV8BGJ68yCf5KpWB"

[DEF, SF.Seq[1].Main[85]]
%NAME = "Reset signal for CU ON"

[SF.Seq[1].Main[86].TS]
Id = "ID#:kG/R3juV8BGJ68yCf5KpWB"

[DEF, SF.Seq[1].Main[86].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[86].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[1].Main[86].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[86].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[1].Main[86].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[1].Main[86].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_SYSTEM_CuOnRequest\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[1].Main[86].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[1].Main[86]]
%NAME = "Remove CU ON signal"

[SF.Seq[1].Main[87].TS]
Id = "ID#:/8o3vDuV8BGJ68yCf5KpWB"

[DEF, SF.Seq[1].Main[87]]
%NAME = "End"

[SF.Seq[1].Main[88].TS]
Id = "ID#:psAsAnb67xG53dQli0T1uC"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[1].Main[88].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[1].Main[88].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[1].Main[88]]
SeqCallName = "End"
TimeExpr = "0.1"

[DEF, SF.Seq[1].Main[88]]
%NAME = "Wait 100ms"

[SF.Seq[1].Main[89].TS]
Id = "ID#:p8AsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[90].TS]
Id = "ID#:qMAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[90]]
%NAME = "END OF THE MANUAL - ERROR STATE"

[SF.Seq[1].Main[91].TS]
Id = "ID#:qcAsAnb67xG53dQli0T1uC"

[SF.Seq[1].Main[91]]
ConditionExpr = "StationGlobals.CurrentOperatingMode == 100  // ALARM MODE (Is same for ERROR and NO ERROR)"
%COMMENT = "- In this state we are waiting until cause of the alarm is solved\n- We will mark that Emptying needs to be done after"

[DEF, SF.Seq[1].Main[91]]
%NAME = "Else If"

[SF.Seq[1].Main[92].TS]
Id = "ID#:qsAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[92]]
%NAME = "START OF THE ALARM STATE"

[SF.Seq[1].Main[93].TS]
Id = "ID#:mwByz0AR8BG4hlB7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[94].TS]
Id = "ID#:q8AsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[95].TS]
Id = "ID#:rMAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[95].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[95].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.String.Read"
Trace = "Off"

[DEF, SF.Seq[1].Main[95].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[95].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[1].Main[95].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.CurrentAlarm"
ParamType = 2

[SF.Seq[1].Main[95].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"SYSTEM_MISO.SystemMsg\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[1].Main[95].TS.SData.Prototype]
VariableValue = Str
VariableName = Str

[SF.Seq[1].Main[95].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[1].Main[95]]
%NAME = "Read alarm"

[SF.Seq[1].Main[96].TS]
Id = "ID#:rcAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[96].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[96].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Main[96].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[96].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[1].Main[96].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"IN_ALARM_ERROR\") + \"\\n\" + Locals.CurrentAlarm"
ParamType = 2
Flags = 0

[SF.Seq[1].Main[96].TS.SData.ActualArgs.Color]
UseDef = False
Expr = "StationGlobals.TEF.Colors.StatusFailed"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Main[96].TS.SData.ActualArgs.FontSize]
Expr = "20"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[1].Main[96].TS.SData.Prototype]
Message = Str
Color = Num
FontSize = Num

[SF.Seq[1].Main[96].TS.SData.Prototype]
Color = Nan
FontSize = Nan

[SF.Seq[1].Main[96].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[1].Main[96]]
%NAME = "Write that ALARM MODE is entered"

[SF.Seq[1].Main[97].TS]
Id = "ID#:rsAsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[98].TS]
Id = "ID#:r8AsAnb67xG53dQli0T1uC"

[SF.Seq[1].Main[98]]
ConditionExpr = "Locals.CurrentAlarm != Locals.PreviousAlarm"

[DEF, SF.Seq[1].Main[98]]
%NAME = "If"

[SF.Seq[1].Main[99].TS]
Id = "ID#:sMAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[99].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[1].Main[99].TS.SData.ViCall]
ProjectPath = "..\\..\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Station\\Add alarm to archive.vi"
TDChecksum = 607386436
%HI: Parms = [2]

[DEF, SF.Seq[1].Main[99].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"

[SF.Seq[1].Main[99].TS.SData.ViCall.Parms[0]]
Label = "Alarm messege"
ArgVal = "Locals.CurrentAlarm"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 11

[DEF, SF.Seq[1].Main[99].TS.SData.ViCall.Parms[0]]
%NAME = "Alarm messege"

[SF.Seq[1].Main[99].TS.SData.ViCall.Parms[1]]
Label = "error in"
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[1].Main[99].TS.SData.ViCall.Parms[1].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[1].Main[99].TS.SData.ViCall.Parms[1].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[1].Main[99].TS.SData.ViCall.Parms[1].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[1].Main[99].TS.SData.ViCall.Parms[1].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[1].Main[99].TS.SData.ViCall.Parms[1].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[1].Main[99].TS.SData.ViCall.Parms[1].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[1].Main[99].TS.SData.ViCall.Parms[1].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[1].Main[99].TS.SData.ViCall.Parms[1]]
%NAME = "error in"

[SF.Seq[1].Main[99].TS.SData.ViCall.Parms[2]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[1].Main[99].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[1].Main[99].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[1].Main[99].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[1].Main[99].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[1].Main[99].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[1].Main[99].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[1].Main[99].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[1].Main[99].TS.SData.ViCall.Parms[2]]
%NAME = "error out"

[DEF, SF.Seq[1].Main[99]]
%NAME = "Add alarm to archive"

[SF.Seq[1].Main[100].TS]
Id = "ID#:scAsAnb67xG53dQli0T1uC"
PostExpr = "Locals.PreviousAlarm = Locals.CurrentAlarm"

[DEF, SF.Seq[1].Main[100]]
%NAME = "Set prevous alarm to current alarm"

[SF.Seq[1].Main[101].TS]
Id = "ID#:nNHKOjuV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[102].TS]
Id = "ID#:weaxRDuV8BGJ68yCf5KpWB"

[DEF, SF.Seq[1].Main[102]]
%NAME = "Send Signal thta CU_ON needs to be activated"

[SF.Seq[1].Main[103].TS]
Id = "ID#:abzkVzuV8BGJ68yCf5KpWB"

[DEF, SF.Seq[1].Main[103].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[103].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[1].Main[103].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[103].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[1].Main[103].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[1].Main[103].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_SYSTEM_CuOnRequest\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[1].Main[103].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[1].Main[103]]
%NAME = "Request CU ON"

[SF.Seq[1].Main[104].TS]
Id = "ID#:v+axRDuV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[105].TS]
Id = "ID#:ssAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[105]]
%NAME = "End"

[SF.Seq[1].Main[106].TS]
Id = "ID#:s8AsAnb67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[107].TS]
Id = "ID#:tMAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[107]]
%NAME = "END OF THE ALARM STATE"

[SF.Seq[1].Main[108].TS]
Id = "ID#:uRHw+V1H8BGtpcyCf35SiD"

[SF.Seq[1].Main[108]]
ConditionExpr = "StationGlobals.CurrentOperatingMode == 10  // CHNG MODE (Is same for ERROR and NO ERROR)"
%COMMENT = "- In this state we are waiting until cause of the alarm is solved\n- We will mark that Emptying needs to be done after"

[DEF, SF.Seq[1].Main[108]]
%NAME = "Else If"

[SF.Seq[1].Main[109].TS]
Id = "ID#:wOaxRDuV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[110].TS]
Id = "ID#:uhHw+V1H8BGtpcyCf35SiD"

[DEF, SF.Seq[1].Main[110].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Main[110].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Main[110].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Main[110].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[1].Main[110].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"IN_CHNG_MODE\") + \"\\n\" + Locals.CurrentAlarm"
ParamType = 2
Flags = 0

[SF.Seq[1].Main[110].TS.SData.ActualArgs.Color]
UseDef = False
Expr = "StationGlobals.TEF.Colors.StatusFailed"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Main[110].TS.SData.ActualArgs.FontSize]
Expr = "20"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[1].Main[110].TS.SData.Prototype]
Message = Str
Color = Num
FontSize = Num

[SF.Seq[1].Main[110].TS.SData.Prototype]
Color = Nan
FontSize = Nan

[SF.Seq[1].Main[110].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[1].Main[110]]
%NAME = "Write that CHNG MODE is entered"

[SF.Seq[1].Main[111].TS]
Id = "ID#:tcAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[111]]
%NAME = "End"

[SF.Seq[1].Main[112].TS]
Id = "ID#:tsAsAnb67xG53dQli0T1uC"

[DEF, SF.Seq[1].Main[112]]
%NAME = "End"

[SF.Seq[1].Main[113].TS]
Id = "ID#:qIXg/Hj67xG53dQli0T1uC"
PostExpr = "RunState.Engine.StationOptions.AlwaysGotoCleanupOnFailure = True"

[SF.Seq[1].Main[113]]
%COMMENT = "//TODO: If there are other modes, write add IF step and chose when to abort and when not testing after first Fail"

[DEF, SF.Seq[1].Main[113]]
%NAME = "Setting to abort testing after the first Fail"

[SF.Seq[1].Main[114].TS]
Id = "ID#:rym1WvAD8BG4eVB7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[1].Main[115].TS]
Id = "ID#:Hnxqz1n77xG53tQli0T1uC"

[DEF, SF.Seq[1].Main[115]]
%NAME = "End"

[DEF, SF.Seq[1].Setup]
%[0] = Step
%TYPE: %[0] = "NoffzUTP_TEF_UI_TestSocket_SetCaption"
%[1] = Step
%TYPE: %[1] = "Label"
%[2] = Step
%TYPE: %[2] = "Statement"
%[3] = Step
%TYPE: %[3] = "NI_Rendezvous"

[SF.Seq[1].Setup[0].TS]
Id = "ID#:6xgOaOX/7xG4dlB7nf4f8B"
PostExpr = "Locals.CHMB = Left(Locals.TestSocketName,5)"

[DEF, SF.Seq[1].Setup[0].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[1].Setup[0].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.SetCaption"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[1].Setup[0].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[1].Setup[0].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Caption = "TYPE, SequenceArgument"

[SF.Seq[1].Setup[0].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[1].Setup[0].TS.SData.ActualArgs.Caption]
UseDef = False
Expr = "Locals.TestSocketName"
ParamType = 2
Flags = 0

[DEF, SF.Seq[1].Setup[0].TS.SData.Prototype]
TestSocket = Num
Caption = Str

[SF.Seq[1].Setup[0].TS.SData.Prototype]
TestSocket = Nan

[DEF, SF.Seq[1].Setup[0]]
%NAME = "UI.TestSocket.SetCaption: TestSocketName"

[SF.Seq[1].Setup[1].TS]
Id = "ID#:9jZpy3767xG53dQli0T1uC"

[DEF, SF.Seq[1].Setup[1]]
%NAME = "//TODO: After ERROR and After TERMINATION"

[SF.Seq[1].Setup[2].TS]
Id = "ID#:xPIFzbY08BGtjcyCf35SiD"
PostExpr = "Locals.CHMB = Parameters.CHMB,\nLocals.DUT = Parameters.DUT"

[DEF, SF.Seq[1].Setup[2]]
%NAME = "Save CHMB variable"

[SF.Seq[1].Setup[3].TS]
Id = "ID#:S2rZvln77xG53tQli0T1uC"
IgnoreRTE = True
%HI: AdditionalResultsHints = [2]

[DEF, SF.Seq[1].Setup[3].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"
%[1] = "TYPE, NI_CustomResult"
%[2] = "TYPE, NI_CustomResult"

[SF.Seq[1].Setup[3].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"ALREADY_EXISTS_HINT\")"
ValueToLog = "Evaluate(Step.AlreadyExistsExpr)"

[SF.Seq[1].Setup[3].TS.AdditionalResultsHints[1]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"RENDEZVOUS_REFERENCE_LIFETIME_HINT\")"
ValueToLog Line0001 = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", (Step.Lifetime == 0 ? \"LIFETIME_SEQUENCE\" :\n    Step.Lifetime == 1 ? \"LIFETIME_T"
ValueToLog Line0002 = "HREAD\" :\n    Step.Lifetime == 2 ? \"LIFETIME_REFERENCE\" :\n    Step.Lifetime == 3 ? \"LIFETIME_EXECUTION\" :\n    \"\"
ValueToLog Line0003 = ""))"

[SF.Seq[1].Setup[3].TS.AdditionalResultsHints[2]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"NUMBER_OF_THREADS_PER_RENDEZVOUS_HINT\")"
ValueToLog = "Evaluate(Step.RendezvousCountExpr)"

[SF.Seq[1].Setup[3]]
NameOrRefExpr = "\"PRE_BATCH\"+Locals.CHMB"
Lifetime = 0

[DEF, SF.Seq[1].Setup[3]]
%NAME = "Create rendezvous for POST BATCH for BOTH TS"

[DEF, SF.Seq[1].Cleanup]
%[0] = Step
%TYPE: %[0] = "NI_Rendezvous"
%[1] = Step
%TYPE: %[1] = "Statement"

[SF.Seq[1].Cleanup[0].TS]
Id = "ID#:TGrZvln77xG53tQli0T1uC"
IgnoreRTE = True
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[1].Cleanup[0].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[1].Cleanup[0].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"TIMEOUT\")"
ValueToLog = "Step.TimeoutEnabled ? Str(Evaluate(Step.TimeoutExpr)) : ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"DISABLED\")"

[DEF, SF.Seq[1].Cleanup[0]]
Result = Obj
%NAME = "Wait POST BATCH operation"

[DEF, SF.Seq[1].Cleanup[0].Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"
TimeoutOccurred = Bool

[SF.Seq[1].Cleanup[0].Result]
%FLG: Error = 4194304
%FLG: Status = 4194304
%FLG: ReportText = 4194304
%FLG: Common = 0

[SF.Seq[1].Cleanup[0]]
%FLG: Result = 4194304
NameOrRefExpr = "\"PRE_BATCH\"+Locals.CHMB"
Operation = 1

[SF.Seq[1].Cleanup[1].TS]
Id = "ID#:UD/N9a6X8BGJ7MyCf5KpWB"
PreCond = "!StationGlobals.Automation.ErrorInCHMB2"
PostExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] = Enums.SEQUENCE_STATE.Ready"

[DEF, SF.Seq[1].Cleanup[1]]
%NAME = "Set that TS is ready"

[DEF, SF.Seq[1].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[1].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[1].Requirements]
Links = Strs

[SF.Seq[1].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[2]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
StoreResults = Bool
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Pre UUT"

[SF.Seq[2]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [163]
%FLG: Main = 4194304
%HI: Setup = [15]
%FLG: Setup = 4194304
%HI: Cleanup = [2]
%FLG: Cleanup = 4194304
StoreResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312
%COMMENT Line0001 = "This entry point is executed everytime you start testing a UUT. Put here the code for pre-test operations like reading U"
%COMMENT Line0002 = "UT barcode, connecting power supply to UUT."

[DEF, SF.Seq[2].Locals]
ResultList = Objs
Product = Str
Variant = Str
TestSocketName = Str
CHMB = Str
SerialNumber = Str
IsOkButtonPressed = Bool
ProductAndVariantSelected = Bool
OperationMode = Str
Automated = Obj
MES = Obj
SkipMessage = Bool
AddToBox = Str
DUT = Str
Ini = Strs

[DEF, SF.Seq[2].Locals.ResultList]
%EPTYPE = TEResult

[DEF, SF.Seq[2].Locals.Automated]
DrawerClosed = Bool
DUT_DMC = "TYPE, NoffzUTP_IO_Code"
DUTpresent = Bool
CurrentDUTpresent = Bool
CHMB1_DRAWER_LOCKER_Error = Bool
CHMB1_DRAWER_LOCKER_ErrorCode = Num
CHMB1_DRAWER_LOCKER_ErrorText = Str
CHMB1_DRAWER_LOCKER_Result = Num
CHMB1_TOP_PLATE_Error = Bool
CHMB1_TOP_PLATE_ErrorCode = Num
CHMB1_TOP_PLATE_ErrorText = Str
CHMB1_TOP_PLATE_Result = Num
CHMB1_DUT_LOCK_VALVE_Error = Bool
CHMB1_DUT_LOCK_VALVE_ErrorCode = Num
CHMB1_DUT_LOCK_VALVE_ErrorText = Str
CHMB1_DUT_LOCK_VALVE_Result = Num
SkipMessage = Bool
CHMB1_DUT_NEST_Present = Bool
DUTPresentSensorCouter = Num
Robot = Obj

[DEF, SF.Seq[2].Locals.Automated.Robot]
Execute = Bool
PartPlaced = Bool

[DEF, SF.Seq[2].Locals.MES]
ErrorText = Str
Status = Str
Response = Str
Header = Str
Body = Str
CantestOK = Bool

[SF.Seq[2].Locals]
%HI: Ini = [17]

[DEF, SF.Seq[2].Main]
%[0] = Step
%TYPE: %[0] = "Label"
%[1] = Step
%TYPE: %[1] = "NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant"
%[2] = Step
%TYPE: %[2] = "NoffzUTP_TEF_Model_TestSocket_SetSerialNumber"
%[3] = Step
%TYPE: %[3] = "NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant"
%[4] = Step
%TYPE: %[4] = "NoffzUTP_VariantManager_ApplyVariantData"
%[5] = Step
%TYPE: %[5] = "Label"
%[6] = Step
%TYPE: %[6] = "Label"
%[7] = Step
%TYPE: %[7] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[8] = Step
%TYPE: %[8] = "Label"
%[9] = Step
%TYPE: %[9] = "Label"
%[10] = Step
%TYPE: %[10] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[11] = Step
%TYPE: %[11] = "Label"
%[12] = Step
%TYPE: %[12] = "Label"
%[13] = Step
%TYPE: %[13] = "Label"
%[14] = Step
%TYPE: %[14] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[15] = Step
%TYPE: %[15] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[16] = Step
%TYPE: %[16] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[17] = Step
%TYPE: %[17] = "NoffzUTP_IOPLCVariableBooleanRead"
%[18] = Step
%TYPE: %[18] = "NoffzUTP_IOPLCVariableBooleanRead"
%[19] = Step
%TYPE: %[19] = "NI_Flow_While"
%[20] = Step
%TYPE: %[20] = "NoffzUTP_IOPLCVariableBooleanRead"
%[21] = Step
%TYPE: %[21] = "NoffzUTP_IOPLCVariableBooleanRead"
%[22] = Step
%TYPE: %[22] = "Goto"
%[23] = Step
%TYPE: %[23] = "NI_Flow_End"
%[24] = Step
%TYPE: %[24] = "Label"
%[25] = Step
%TYPE: %[25] = "NI_Flow_If"
%[26] = Step
%TYPE: %[26] = "NI_Wait"
%[27] = Step
%TYPE: %[27] = "Statement"
%[28] = Step
%TYPE: %[28] = "NoffzUTP_IOPLCVariableBooleanRead"
%[29] = Step
%TYPE: %[29] = "NI_Flow_If"
%[30] = Step
%TYPE: %[30] = "Goto"
%[31] = Step
%TYPE: %[31] = "NI_Flow_Else"
%[32] = Step
%TYPE: %[32] = "Label"
%[33] = Step
%TYPE: %[33] = "NI_Flow_End"
%[34] = Step
%TYPE: %[34] = "Label"
%[35] = Step
%TYPE: %[35] = "NI_Flow_ElseIf"
%[36] = Step
%TYPE: %[36] = "Statement"
%[37] = Step
%TYPE: %[37] = "NI_Flow_End"
%[38] = Step
%TYPE: %[38] = "Label"
%[39] = Step
%TYPE: %[39] = "Label"
%[40] = Step
%TYPE: %[40] = "SequenceCall"
%[41] = Step
%TYPE: %[41] = "Label"
%[42] = Step
%TYPE: %[42] = "Label"
%[43] = Step
%TYPE: %[43] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[44] = Step
%TYPE: %[44] = "Label"
%[45] = Step
%TYPE: %[45] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[46] = Step
%TYPE: %[46] = "Label"
%[47] = Step
%TYPE: %[47] = "Label"
%[48] = Step
%TYPE: %[48] = "NoffzUTP_TEF_UI_TestSocket_StepList_Clear"
%[49] = Step
%TYPE: %[49] = "NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue"
%[50] = Step
%TYPE: %[50] = "Label"
%[51] = Step
%TYPE: %[51] = "NI_Wait"
%[52] = Step
%TYPE: %[52] = "SequenceCall"
%[53] = Step
%TYPE: %[53] = "Label"
%[54] = Step
%TYPE: %[54] = "NI_Rendezvous"
%[55] = Step
%TYPE: %[55] = "NI_Rendezvous"
%[56] = Step
%TYPE: %[56] = "Label"
%[57] = Step
%TYPE: %[57] = "Label"
%[58] = Step
%TYPE: %[58] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[59] = Step
%TYPE: %[59] = "Label"
%[60] = Step
%TYPE: %[60] = "NI_Wait"
%[61] = Step
%TYPE: %[61] = "Action"
%[62] = Step
%TYPE: %[62] = "Action"
%[63] = Step
%TYPE: %[63] = "Statement"
%[64] = Step
%TYPE: %[64] = "Label"
%[65] = Step
%TYPE: %[65] = "NI_Flow_For"
%[66] = Step
%TYPE: %[66] = "NoffzUTP_IOPLCVariableBooleanRead"
%[67] = Step
%TYPE: %[67] = "Statement"
%[68] = Step
%TYPE: %[68] = "NI_Flow_End"
%[69] = Step
%TYPE: %[69] = "Label"
%[70] = Step
%TYPE: %[70] = "NI_Flow_If"
%[71] = Step
%TYPE: %[71] = "Label"
%[72] = Step
%TYPE: %[72] = "NoffzUTP_IOPLCVariableBooleanRead"
%[73] = Step
%TYPE: %[73] = "Statement"
%[74] = Step
%TYPE: %[74] = "NI_Flow_Else"
%[75] = Step
%TYPE: %[75] = "Statement"
%[76] = Step
%TYPE: %[76] = "NI_Flow_End"
%[77] = Step
%TYPE: %[77] = "Label"
%[78] = Step
%TYPE: %[78] = "Label"
%[79] = Step
%TYPE: %[79] = "NI_Flow_Select"
%[80] = Step
%TYPE: %[80] = "NI_Flow_Case"
%[81] = Step
%TYPE: %[81] = "Statement"
%[82] = Step
%TYPE: %[82] = "NI_Flow_End"
%[83] = Step
%TYPE: %[83] = "NI_Flow_Case"
%[84] = Step
%TYPE: %[84] = "Statement"
%[85] = Step
%TYPE: %[85] = "NI_Flow_End"
%[86] = Step
%TYPE: %[86] = "NI_Flow_End"
%[87] = Step
%TYPE: %[87] = "Label"
%[88] = Step
%TYPE: %[88] = "NI_Rendezvous"
%[89] = Step
%TYPE: %[89] = "NI_Rendezvous"
%[90] = Step
%TYPE: %[90] = "Label"
%[91] = Step
%TYPE: %[91] = "NI_Flow_If"
%[92] = Step
%TYPE: %[92] = "Label"
%[93] = Step
%TYPE: %[93] = "NI_Flow_If"
%[94] = Step
%TYPE: %[94] = "NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog"
%[95] = Step
%TYPE: %[95] = "NI_Flow_ElseIf"
%[96] = Step
%TYPE: %[96] = "NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog"
%[97] = Step
%TYPE: %[97] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[98] = Step
%TYPE: %[98] = "NI_Flow_ElseIf"
%[99] = Step
%TYPE: %[99] = "Label"
%[100] = Step
%TYPE: %[100] = "NI_Flow_If"
%[101] = Step
%TYPE: %[101] = "NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog"
%[102] = Step
%TYPE: %[102] = "NI_Flow_ElseIf"
%[103] = Step
%TYPE: %[103] = "NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog"
%[104] = Step
%TYPE: %[104] = "NI_Flow_ElseIf"
%[105] = Step
%TYPE: %[105] = "NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog"
%[106] = Step
%TYPE: %[106] = "NI_Flow_End"
%[107] = Step
%TYPE: %[107] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[108] = Step
%TYPE: %[108] = "NI_Flow_End"
%[109] = Step
%TYPE: %[109] = "Label"
%[110] = Step
%TYPE: %[110] = "Label"
%[111] = Step
%TYPE: %[111] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[112] = Step
%TYPE: %[112] = "Label"
%[113] = Step
%TYPE: %[113] = "Statement"
%[114] = Step
%TYPE: %[114] = "Statement"
%[115] = Step
%TYPE: %[115] = "Label"
%[116] = Step
%TYPE: %[116] = "Label"
%[117] = Step
%TYPE: %[117] = "Statement"
%[118] = Step
%TYPE: %[118] = "Statement"
%[119] = Step
%TYPE: %[119] = "Statement"
%[120] = Step
%TYPE: %[120] = "NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog"
%[121] = Step
%TYPE: %[121] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[122] = Step
%TYPE: %[122] = "Action"
%[123] = Step
%TYPE: %[123] = "NoffzUTP_TEF_Model_TestSocket_SkipProductSequence"
%[124] = Step
%TYPE: %[124] = "NoffzUTP_TEF_Model_TestSocket_SkipProductSequence"
%[125] = Step
%TYPE: %[125] = "Label"
%[126] = Step
%TYPE: %[126] = "Label"
%[127] = Step
%TYPE: %[127] = "Label"
%[128] = Step
%TYPE: %[128] = "NI_Flow_ElseIf"
%[129] = Step
%TYPE: %[129] = "Label"
%[130] = Step
%TYPE: %[130] = "NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog"
%[131] = Step
%TYPE: %[131] = "Label"
%[132] = Step
%TYPE: %[132] = "SequenceCall"
%[133] = Step
%TYPE: %[133] = "Label"
%[134] = Step
%TYPE: %[134] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[135] = Step
%TYPE: %[135] = "NoffzUTP_IOPLCVariableBooleanRead"
%[136] = Step
%TYPE: %[136] = "NI_Flow_While"
%[137] = Step
%TYPE: %[137] = "NoffzUTP_IOPLCVariableBooleanRead"
%[138] = Step
%TYPE: %[138] = "NI_Flow_End"
%[139] = Step
%TYPE: %[139] = "Goto"
%[140] = Step
%TYPE: %[140] = "NI_Flow_ElseIf"
%[141] = Step
%TYPE: %[141] = "NoffzUTP_TEF_UI_TestSocket_SetIcon"
%[142] = Step
%TYPE: %[142] = "NoffzUTP_TEF_UI_TestSocket_SetCaption"
%[143] = Step
%TYPE: %[143] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[144] = Step
%TYPE: %[144] = "NoffzUTP_TEF_Model_TestSocket_SkipProductSequence"
%[145] = Step
%TYPE: %[145] = "NI_Flow_ElseIf"
%[146] = Step
%TYPE: %[146] = "NoffzUTP_TEF_Model_TestSocket_SetSerialNumber"
%[147] = Step
%TYPE: %[147] = "NoffzUTP_TEF_UI_TestSocket_SetCaption"
%[148] = Step
%TYPE: %[148] = "NoffzUTP_TEF_UI_TestSocket_SetIcon"
%[149] = Step
%TYPE: %[149] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[150] = Step
%TYPE: %[150] = "Statement"
%[151] = Step
%TYPE: %[151] = "NI_Flow_End"
%[152] = Step
%TYPE: %[152] = "Label"
%[153] = Step
%TYPE: %[153] = "Label"
%[154] = Step
%TYPE: %[154] = "SequenceCall"
%[155] = Step
%TYPE: %[155] = "NI_Wait"
%[156] = Step
%TYPE: %[156] = "NoffzUTP_IOPLCVariableBooleanRead"
%[157] = Step
%TYPE: %[157] = "NI_Flow_If"
%[158] = Step
%TYPE: %[158] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[159] = Step
%TYPE: %[159] = "SequenceCall"
%[160] = Step
%TYPE: %[160] = "Goto"
%[161] = Step
%TYPE: %[161] = "NI_Flow_End"
%[162] = Step
%TYPE: %[162] = "Label"
%[163] = Step
%TYPE: %[163] = "Label"

[SF.Seq[2].Main[0].TS]
Id = "ID#:8fv6ndr17xG519Qli0T1uC"

[DEF, SF.Seq[2].Main[0]]
%NAME = "Get current Product and Variant"

[SF.Seq[2].Main[1].TS]
Id = "ID#:a3tr+ko18BGtj8yCf35SiD"

[DEF, SF.Seq[2].Main[1].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[1].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetProductAndVariant"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[1].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[1].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Product = "TYPE, SequenceArgument"
Variant = "TYPE, SequenceArgument"

[SF.Seq[2].Main[1].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[1].TS.SData.ActualArgs.Product]
UseDef = False
Expr = "Locals.Product"
ParamType = 2

[SF.Seq[2].Main[1].TS.SData.ActualArgs.Variant]
UseDef = False
Expr = "Locals.Variant"
ParamType = 2

[DEF, SF.Seq[2].Main[1].TS.SData.Prototype]
TestSocket = Num
Product = Str
Variant = Str

[SF.Seq[2].Main[1].TS.SData.Prototype]
TestSocket = Nan
%FLG: Product = 4
%FLG: Variant = 4

[DEF, SF.Seq[2].Main[1]]
%NAME = "Model.TestSocket.GetProductAndVariant"

[SF.Seq[2].Main[2].TS]
Id = "ID#:8/v6ndr17xG519Qli0T1uC"

[DEF, SF.Seq[2].Main[2].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[2].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.SetSerialNumber"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[2].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[2].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
SerialNumber = "TYPE, SequenceArgument"

[SF.Seq[2].Main[2].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[2].TS.SData.ActualArgs.SerialNumber]
UseDef = False
Expr = "\"EMPTY_SN\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[2].TS.SData.Prototype]
TestSocket = Num
SerialNumber = Str

[SF.Seq[2].Main[2].TS.SData.Prototype]
TestSocket = Nan

[DEF, SF.Seq[2].Main[2]]
%NAME = "Set Seial Number for Test Socket"

[SF.Seq[2].Main[3].TS]
Id = "ID#:AvfwFks18BGtj8yCf35SiD"

[DEF, SF.Seq[2].Main[3].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[3].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.SetProductAndVariant"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[3].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[3].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Product = "TYPE, SequenceArgument"
Variant = "TYPE, SequenceArgument"

[SF.Seq[2].Main[3].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[3].TS.SData.ActualArgs.Product]
UseDef = False
Expr = "Locals.Product"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[3].TS.SData.ActualArgs.Variant]
UseDef = False
Expr = "Locals.Variant"
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[3].TS.SData.Prototype]
TestSocket = Num
Product = Str
Variant = Str

[SF.Seq[2].Main[3].TS.SData.Prototype]
TestSocket = Nan

[SF.Seq[2].Main[3].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[DEF, SF.Seq[2].Main[3]]
%NAME = "Model.TestSocket.SetProductAndVariant"

[SF.Seq[2].Main[4].TS]
Id = "ID#:hh6cL0s18BGtj8yCf35SiD"

[DEF, SF.Seq[2].Main[4].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[4].TS.SData]
SFPath = "Noffz.UTP.VariantManager.API.seq"
SeqName = "ApplyVariantData"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[4].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[4].TS.SData.ActualArgs]
ProductName = "TYPE, SequenceArgument"
VariantName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[4].TS.SData.ActualArgs.ProductName]
UseDef = False
Expr = "Locals.Product"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[4].TS.SData.ActualArgs.VariantName]
UseDef = False
Expr = "Locals.Variant"
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[4].TS.SData.Prototype]
ProductName = Str
VariantName = Str

[DEF, SF.Seq[2].Main[4]]
%NAME = "Apply Variant Data"

[SF.Seq[2].Main[5].TS]
Id = "ID#:3gtGmTD77xG53tQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main]
%FLG: %[5] = 67108864
%FLG: %[8] = 67108864
%FLG: %[11] = 67108864
%FLG: %[12] = 67108864
%FLG: %[24] = 67108864
%FLG: %[38] = 67108864
%FLG: %[41] = 67108864
%FLG: %[46] = 67108864
%FLG: %[50] = 67108864
%FLG: %[53] = 67108864
%FLG: %[56] = 67108864
%FLG: %[59] = 67108864
%FLG: %[69] = 67108864
%FLG: %[77] = 67108864
%FLG: %[78] = 67108864
%FLG: %[87] = 67108864
%FLG: %[90] = 67108864
%FLG: %[109] = 67108864
%FLG: %[115] = 67108864
%FLG: %[125] = 67108864
%FLG: %[126] = 67108864
%FLG: %[133] = 67108864
%FLG: %[152] = 67108864
%FLG: %[153] = 67108864
%FLG: %[162] = 67108864
%FLG: %[163] = 67108864

[SF.Seq[2].Main[6].TS]
Id = "ID#:/neXEyqV8BGJ68yCf5KpWB"
Mode = "Skip"

[SF.Seq[2].Main[6]]
%COMMENT = "Check if this is better position than begin"

[DEF, SF.Seq[2].Main[6]]
%NAME = "Sending init confirmation to PLC"

[SF.Seq[2].Main[7].TS]
Id = "ID#:/3eXEyqV8BGJ68yCf5KpWB"
Mode = "Skip"

[DEF, SF.Seq[2].Main[7].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[7].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[2].Main[7].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[7].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[7].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[7].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_SYSTEM_InitOK\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[7].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[2].Main[7]]
%COMMENT = "Check if this is better position than begin"

[DEF, SF.Seq[2].Main[7]]
%NAME = "Send signal that system is initialized"

[SF.Seq[2].Main[8].TS]
Id = "ID#:BMjdICqV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[9].TS]
Id = "ID#:ZiJxcTOV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[9]]
%NAME = "Send Signal That CHMB is Ready For Testing"

[SF.Seq[2].Main[10].TS]
Id = "ID#:qVHZhTOV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[10].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[10].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[2].Main[10].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[10].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[10].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[10].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Ready\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[10].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[2].Main[10]]
%NAME = "Set signal for Robot that Station is Ready for testing"

[SF.Seq[2].Main[11].TS]
Id = "ID#:ZCJxcTOV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[12].TS]
Id = "ID#:ZSJxcTOV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[13].TS]
Id = "ID#:zmZ4weD17xG519Qli0T1uC"

[DEF, SF.Seq[2].Main[13]]
%NAME = "Waiting operator to manually close the drawer or for Robot to send execute signal"

[SF.Seq[2].Main[14].TS]
Id = "ID#:wBzirCqV8BGJ68yCf5KpWB"
PreCond = "!Locals.Automated.SkipMessage"
Mode = "Skip"

[DEF, SF.Seq[2].Main[14].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[14].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[14].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[14].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[2].Main[14].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[14].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"WAITING_EXECUTE\")"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[14].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[14].TS.SData.ActualArgs.FontSize]
UseDef = False
Expr = "40"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[2].Main[14].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[2].Main[14].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[2].Main[14].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[2].Main[14].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[14].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[2].Main[14].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[2].Main[14]]
%NAME = "Waiting Execute signal"

[SF.Seq[2].Main[15].TS]
Id = "ID#:LzJhkeD17xG519Qli0T1uC"
PreCond = "!Locals.Automated.SkipMessage"
Mode = "Skip"

[DEF, SF.Seq[2].Main[15].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[15].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[15].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[15].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[2].Main[15].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[15].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"PLACE_NEW_CLOSE_DRAWER\")"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[15].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[15].TS.SData.ActualArgs.FontSize]
UseDef = False
Expr = "40"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[2].Main[15].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[2].Main[15].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[2].Main[15].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[2].Main[15].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[15].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[2].Main[15].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[2].Main[15]]
%NAME = "Tell operator to place the new DUTs and close the DRAWER"

[SF.Seq[2].Main[16].TS]
Id = "ID#:TspiJSuV8BGJ68yCf5KpWB"
PreCond = "!Locals.Automated.SkipMessage"

[DEF, SF.Seq[2].Main[16].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[16].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[16].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[16].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[2].Main[16].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[16].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"EXECUTE_or_CLOSE\")"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[16].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[16].TS.SData.ActualArgs.FontSize]
Expr = "40"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[2].Main[16].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[2].Main[16].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[2].Main[16].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[2].Main[16].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[16].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[2].Main[16].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[2].Main[16]]
%NAME = "Waiting operator to manually close the drawer or for Robot to send execute signal"

[SF.Seq[2].Main[17].TS]
Id = "ID#:MDJhkeD17xG519Qli0T1uC"

[DEF, SF.Seq[2].Main[17].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[17].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[2].Main[17].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[17].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[17].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.DrawerClosed"
ParamType = 16

[SF.Seq[2].Main[17].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_\"+Locals.CHMB+\"_DRAWER_SafetyOK\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[17].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[2].Main[17].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[2].Main[17]]
%NAME = "Read Status of the Drawer"

[SF.Seq[2].Main[18].TS]
Id = "ID#:puQNfSqV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[18].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[18].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[2].Main[18].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[18].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[18].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.Robot.Execute"
ParamType = 16

[SF.Seq[2].Main[18].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_SIGNALS_FROM_MASTER_PLC_CHMB1_Execute\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[18].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[2].Main[18].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[2].Main[18]]
%NAME = "Read Execute signal"

[SF.Seq[2].Main[19].TS]
Id = "ID#:MTJhkeD17xG519Qli0T1uC"

[SF.Seq[2].Main[19]]
ConditionExpr = "(Locals.Automated.DrawerClosed == False) && (Locals.Automated.Robot.Execute == False)\n"
%COMMENT = "Wainting for the closing of the Drawer"

[DEF, SF.Seq[2].Main[19]]
%NAME = "While"

[SF.Seq[2].Main[20].TS]
Id = "ID#:WMcSpCqV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[20].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[20].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[2].Main[20].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[20].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[20].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.Robot.Execute"
ParamType = 16

[SF.Seq[2].Main[20].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_SIGNALS_FROM_MASTER_PLC_CHMB1_Execute\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[20].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[2].Main[20].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[2].Main[20]]
%NAME = "Read Execute signal"

[SF.Seq[2].Main[21].TS]
Id = "ID#:MjJhkeD17xG519Qli0T1uC"

[DEF, SF.Seq[2].Main[21].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[21].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[2].Main[21].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[21].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[21].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.DrawerClosed"
ParamType = 16

[SF.Seq[2].Main[21].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_\"+Locals.CHMB+\"_DRAWER_SafetyOK\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[21].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[2].Main[21].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[2].Main[21]]
%NAME = "Read Status of the Drawer"

[SF.Seq[2].Main[22].TS]
Id = "ID#:QTJRCpRG8BGtpMyCf35SiD"
PreCond = "StationGlobals.CurrentOperatingMode == 0 // Manual Mode"
CustTrueActTarget = "\"ID#:Gde4s3X67xG53dQli0T1uC\""

[DEF, SF.Seq[2].Main[22]]
%NAME = "Goto back to pre batch"

[SF.Seq[2].Main[23].TS]
Id = "ID#:MzJhkeD17xG519Qli0T1uC"

[DEF, SF.Seq[2].Main[23]]
%NAME = "End"

[SF.Seq[2].Main[24].TS]
Id = "ID#:NveSeyuV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[25].TS]
Id = "ID#:MveSeyuV8BGJ68yCf5KpWB"

[SF.Seq[2].Main[25]]
ConditionExpr Line0001 = "Locals.Automated.DrawerClosed == True  && (Locals.Automated.Robot.Execute == False)// Drawer was closed by operator - Wa"
ConditionExpr Line0002 = "it debouncing"
%COMMENT = "Drawer was closed by operator - Wait debouncing"

[DEF, SF.Seq[2].Main[25]]
%NAME = "If"

[SF.Seq[2].Main[26].TS]
Id = "ID#:FbmnXeH17xG519Qli0T1uC"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[2].Main[26].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[2].Main[26].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[2].Main[26]]
SeqCallName = "End"
TimeExpr = "0.1"

[DEF, SF.Seq[2].Main[26]]
%NAME = "Wait 0.1s after closing of the Drawer - Debounce time"

[SF.Seq[2].Main[27].TS]
Id = "ID#:muSp1SyV8BGJ68yCf5KpWB"
PostExpr = "Locals.Automated.Robot.Execute = False"

[DEF, SF.Seq[2].Main[27]]
%NAME = "Set Execute variable"

[SF.Seq[2].Main[28].TS]
Id = "ID#:F7mnXeH17xG519Qli0T1uC"

[DEF, SF.Seq[2].Main[28].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[28].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[2].Main[28].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[28].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[28].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.DrawerClosed"
ParamType = 16

[SF.Seq[2].Main[28].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_\"+Locals.CHMB+\"_DRAWER_SafetyOK\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[28].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[2].Main[28].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[2].Main[28]]
%NAME = "Read Status of the Drawer"

[SF.Seq[2].Main[29].TS]
Id = "ID#:GLmnXeH17xG519Qli0T1uC"

[SF.Seq[2].Main[29]]
ConditionExpr = "Locals.Automated.DrawerClosed == False "
%COMMENT = "In case that Drawer is opened aferwards we are going back to checking of the Drawer status"

[DEF, SF.Seq[2].Main[29]]
%NAME = "If"

[SF.Seq[2].Main[30].TS]
Id = "ID#:GbmnXeH17xG519Qli0T1uC"
CustTrueActTarget = "\"ID#:zmZ4weD17xG519Qli0T1uC\""

[DEF, SF.Seq[2].Main[30]]
%NAME = "Goto tell operator to close the DRAWER again"

[SF.Seq[2].Main[31].TS]
Id = "ID#:GrmnXeH17xG519Qli0T1uC"

[DEF, SF.Seq[2].Main[31]]
%NAME = "Else"

[SF.Seq[2].Main[32].TS]
Id = "ID#:G7mnXeH17xG519Qli0T1uC"

[DEF, SF.Seq[2].Main[32]]
%NAME = "In case that Drawer is still closed we are continuing with the testing"

[SF.Seq[2].Main[33].TS]
Id = "ID#:HLmnXeH17xG519Qli0T1uC"

[DEF, SF.Seq[2].Main[33]]
%NAME = "End"

[SF.Seq[2].Main[34].TS]
Id = "ID#:+SbzuSyV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[34]]
%NAME = "Since Sequence was started manually Make sure Execute variable is set to False"

[SF.Seq[2].Main[35].TS]
Id = "ID#:XasJxdqp8BGJ/cyCf5KpWB"

[SF.Seq[2].Main[35]]
ConditionExpr = "Locals.Automated.Robot.Execute == True"

[DEF, SF.Seq[2].Main[35]]
%NAME = "Else If"

[SF.Seq[2].Main[36].TS]
Id = "ID#:KWrTrdqp8BGJ/cyCf5KpWB"
PostExpr = "Locals.Automated.Robot.Execute = True"

[DEF, SF.Seq[2].Main[36]]
%NAME = "Set Execute variable"

[SF.Seq[2].Main[37].TS]
Id = "ID#:NfeSeyuV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[37]]
%NAME = "End"

[SF.Seq[2].Main[38].TS]
Id = "ID#:BcjdICqV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[39].TS]
Id = "ID#:g8+unSuV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[39]]
%NAME = "Close Drawer if Execute signal came - if drawer was closed by operator drawer will already be in target position"

[SF.Seq[2].Main[40].TS]
Id = "ID#:6u0mjd028BGtlMyCf35SiD"
CustExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] == Enums.SEQUENCE_STATE.ERROR"
CustTrueAct = "Goto"
CustTrueActTarget = "\"<Cleanup>\""

[DEF, SF.Seq[2].Main[40].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[40].TS.SData]
SeqName = "Lock Actuator PRE UUT"
UseCurFile = True

[DEF, SF.Seq[2].Main[40].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[2].Main[40].TS.SData.ActualArgs]
SelectedActuatorName = "TYPE, SequenceArgument"
SelectedTargetPosition = "TYPE, SequenceArgument"
LockName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[40].TS.SData.ActualArgs.SelectedActuatorName]
UseDef = False
Expr = "Locals.CHMB+\"_DRAWER_OPENER\""
ParamType = 2

[SF.Seq[2].Main[40].TS.SData.ActualArgs.SelectedTargetPosition]
UseDef = False
Expr = "101 //Work Position 1"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[2].Main[40].TS.SData.ActualArgs.LockName]
UseDef = False
Expr = "Locals.CHMB+\"_DRAWER_LOCKER_PRE_UUT\""
ParamType = 2

[DEF, SF.Seq[2].Main[40]]
%NAME = "CLOSE CHMB1 DRAWER "

[SF.Seq[2].Main[41].TS]
Id = "ID#:sCm1WvAD8BG4eVB7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[42].TS]
Id = "ID#:TuHmxTOV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[42]]
%NAME = "Clear Ready Signal for Robot"

[SF.Seq[2].Main[43].TS]
Id = "ID#:T+HmxTOV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[43].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[43].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[2].Main[43].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[43].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[43].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[43].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Ready\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[43].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[2].Main[43]]
%NAME = "Set Ready Signal to False"

[SF.Seq[2].Main[44].TS]
Id = "ID#:dnR6rjaV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[44]]
%NAME = "Setting Running Signal To Robot"

[SF.Seq[2].Main[45].TS]
Id = "ID#:d3R6rjaV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[45].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[45].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[2].Main[45].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[45].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[45].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[45].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Running\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[45].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[2].Main[45]]
%NAME = "Setting Running signal to True"

[SF.Seq[2].Main[46].TS]
Id = "ID#:gFriZhQO8BG4glB7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[47].TS]
Id = "ID#:dEtc8un57xG53NQli0T1uC"

[SF.Seq[2].Main[47]]
%COMMENT = "Clear display after closing drawer so that there is indication if operator did not see the message on TestSocket"

[DEF, SF.Seq[2].Main[47]]
%NAME = "Clear the display"

[SF.Seq[2].Main[48].TS]
Id = "ID#:dUtc8un57xG53NQli0T1uC"

[DEF, SF.Seq[2].Main[48].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[48].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.StepList.Clear"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[48].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[48].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"

[SF.Seq[2].Main[48].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[2].Main[48].TS.SData.Prototype]
TestSocket = Num

[SF.Seq[2].Main[48].TS.SData.Prototype]
TestSocket = Nan

[DEF, SF.Seq[2].Main[48]]
%NAME = "UI.TestSocket.StepList.Clear"

[SF.Seq[2].Main[49].TS]
Id = "ID#:dktc8un57xG53NQli0T1uC"

[DEF, SF.Seq[2].Main[49].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[49].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.TestStatus.SetValue"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[49].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[49].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Text = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[2].Main[49].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[49].TS.SData.ActualArgs.Text]
UseDef = False
Expr = "\"\""
ParamType = 2
Flags = 0

[SF.Seq[2].Main[49].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[49].TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[2].Main[49].TS.SData.Prototype]
TestSocket = Num
Text = Str
Color = Num
FontSize = Num

[SF.Seq[2].Main[49].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[2].Main[49].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[2].Main[49]]
%NAME = "UI.TestSocket.TestStatus.SetValue: \"\""

[SF.Seq[2].Main[50].TS]
Id = "ID#:/PQP+LHj7xG4VlB7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[51].TS]
Id = "ID#:mWGRwCuV8BGJ68yCf5KpWB"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[2].Main[51].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[2].Main[51].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[2].Main[51]]
SeqCallName = "End"
TimeExpr = "0.3"

[DEF, SF.Seq[2].Main[51]]
%NAME = "Wait after drawer is closed to lock it"

[SF.Seq[2].Main[52].TS]
Id = "ID#:Qpx2OOf57xG53NQli0T1uC"
CustExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] == Enums.SEQUENCE_STATE.ERROR"
CustTrueAct = "Goto"
CustTrueActTarget = "\"<Cleanup>\""

[DEF, SF.Seq[2].Main[52].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[52].TS.SData]
SeqName = "Lock Actuator PRE UUT"
UseCurFile = True

[DEF, SF.Seq[2].Main[52].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[2].Main[52].TS.SData.ActualArgs]
SelectedActuatorName = "TYPE, SequenceArgument"
SelectedTargetPosition = "TYPE, SequenceArgument"
LockName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[52].TS.SData.ActualArgs.SelectedActuatorName]
UseDef = False
Expr = "Locals.CHMB+\"_DRAWER_LOCKER\""
ParamType = 2

[SF.Seq[2].Main[52].TS.SData.ActualArgs.SelectedTargetPosition]
UseDef = False
Expr = "101 //Work Position 1"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[2].Main[52].TS.SData.ActualArgs.LockName]
UseDef = False
Expr = "Locals.CHMB+\"_DRAWER_LOCKER_PRE_UUT\""
ParamType = 2

[DEF, SF.Seq[2].Main[52]]
%NAME = "Lock CHMB1 DRAWER "

[SF.Seq[2].Main[53].TS]
Id = "ID#:p2wLajeV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[54].TS]
Id = "ID#:1IV7vJqY8BGJ7syCf5KpWB"
IgnoreRTE = True
%HI: AdditionalResultsHints = [2]

[DEF, SF.Seq[2].Main[54].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"
%[1] = "TYPE, NI_CustomResult"
%[2] = "TYPE, NI_CustomResult"

[SF.Seq[2].Main[54].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"ALREADY_EXISTS_HINT\")"
ValueToLog = "Evaluate(Step.AlreadyExistsExpr)"

[SF.Seq[2].Main[54].TS.AdditionalResultsHints[1]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"RENDEZVOUS_REFERENCE_LIFETIME_HINT\")"
ValueToLog Line0001 = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", (Step.Lifetime == 0 ? \"LIFETIME_SEQUENCE\" :\n    Step.Lifetime == 1 ? \"LIFETIME_T"
ValueToLog Line0002 = "HREAD\" :\n    Step.Lifetime == 2 ? \"LIFETIME_REFERENCE\" :\n    Step.Lifetime == 3 ? \"LIFETIME_EXECUTION\" :\n    \"\"
ValueToLog Line0003 = ""))"

[SF.Seq[2].Main[54].TS.AdditionalResultsHints[2]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"NUMBER_OF_THREADS_PER_RENDEZVOUS_HINT\")"
ValueToLog = "Evaluate(Step.RendezvousCountExpr)"

[SF.Seq[2].Main[54]]
NameOrRefExpr = "\"After Drawer lock\"+Locals.CHMB"
Lifetime = 0
%COMMENT = "Wait for both sockets to perform DMC scanning and PRESENT SENSOR reading"

[DEF, SF.Seq[2].Main[54]]
%NAME = "Create rendezvous for DMC CODE and DUT PRESENT"

[SF.Seq[2].Main[55].TS]
Id = "ID#:1YV7vJqY8BGJ7syCf5KpWB"
IgnoreRTE = True
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[2].Main[55].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[2].Main[55].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"TIMEOUT\")"
ValueToLog = "Step.TimeoutEnabled ? Str(Evaluate(Step.TimeoutExpr)) : ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"DISABLED\")"

[DEF, SF.Seq[2].Main[55]]
Result = Obj
%NAME = "Wait DMC CODE and DUT PRESENT operations"

[DEF, SF.Seq[2].Main[55].Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"
TimeoutOccurred = Bool

[SF.Seq[2].Main[55].Result]
%FLG: Error = 4194304
%FLG: Status = 4194304
%FLG: ReportText = 4194304
%FLG: Common = 0

[SF.Seq[2].Main[55]]
%FLG: Result = 4194304
NameOrRefExpr = "\"After Drawer lock\"+Locals.CHMB"
Operation = 1

[SF.Seq[2].Main[56].TS]
Id = "ID#:mQzF4pqY8BGJ7syCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[57].TS]
Id = "ID#:o2wLajeV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[57]]
%NAME = "Reset signals for robot"

[SF.Seq[2].Main[58].TS]
Id = "ID#:pGwLajeV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[58].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[58].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[2].Main[58].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[58].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[58].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[58].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr Line0001 = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Part\"+Str(((Locals.DUT == \"DUT1\") || (Locals.DUT == \"DUT3\")) ? 1 :"
Expr Line0002 = " 2)+\"_Status\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[58].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[2].Main[58]]
%NAME = "Reset signal about failed device"

[SF.Seq[2].Main[59].TS]
Id = "ID#:eJN3TB/47xG52NQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[60].TS]
Id = "ID#:kRnh9YM/8BGtm8yCf35SiD"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[2].Main[60].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[2].Main[60].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[2].Main[60]]
SeqCallName = "End"
TimeExpr = "0.5"

[DEF, SF.Seq[2].Main[60]]
%NAME = "Wait"

[SF.Seq[2].Main[61].TS]
Id = "ID#:EKv4l/g28BGtlMyCf35SiD"
CustExpr = "Locals.Automated.DUT_DMC.Code == \"ERROR\""
CustFalseAct = "Goto"
CustFalseActTarget = "\"ID#:UCYpY/mO8BGJ3syCf5KpWB\""
PostExpr Line0001 = "Locals.Automated.DUT_DMC.CodeValid = (Locals.Automated.DUT_DMC.Code != \"ERROR\"),\nLocals.SerialNumber = Locals.Automat"
PostExpr Line0002 = "ed.DUT_DMC.Code,\nLocals.MES.CantestOK = True // If there was an ERROR code, MES will be skipped - so we don't get in wr"
PostExpr Line0003 = "ong handle case"

[DEF, SF.Seq[2].Main[61].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[2].Main[61].TS.SData.ViCall]
ProjectPath = "C:\\UTP\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Keyence\\Read.vi"
TDChecksum = -159484423
%HI: Parms = [5]

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"

[SF.Seq[2].Main[61].TS.SData.ViCall.Parms[0]]
Label = "TCP in"
ArgVal = "StationGlobals.Keyence.TCP[RunState.TestSockets.MyIndex]"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 11

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[0]]
%NAME = "TCP in"

[SF.Seq[2].Main[61].TS.SData.ViCall.Parms[1]]
Label = "code"
ArgVal = "\"LON01\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[1]]
%NAME = "code"

[SF.Seq[2].Main[61].TS.SData.ViCall.Parms[2]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[2].Main[61].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[2].Main[61].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[2].Main[61].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[2]]
%NAME = "error in "

[SF.Seq[2].Main[61].TS.SData.ViCall.Parms[3]]
Label = "TCP Network Connection out"
ArgVal = "StationGlobals.Keyence.TCP[RunState.TestSockets.MyIndex]"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[3]]
%NAME = "TCP Network Connection out"

[SF.Seq[2].Main[61].TS.SData.ViCall.Parms[4]]
Label = "ASCII QR Code"
ArgVal = "Locals.Automated.DUT_DMC.Code"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[4]]
%NAME = "ASCII QR Code"

[SF.Seq[2].Main[61].TS.SData.ViCall.Parms[5]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[5].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[2].Main[61].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[2].Main[61].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[2].Main[61].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[2].Main[61].TS.SData.ViCall.Parms[5]]
%NAME = "error out"

[DEF, SF.Seq[2].Main[61]]
%NAME = "Read DMC Code setting 1"

[SF.Seq[2].Main[62].TS]
Id = "ID#:5bqONVCr8BGKAcyCf5KpWB"
PostExpr Line0001 = "Locals.Automated.DUT_DMC.CodeValid = (Locals.Automated.DUT_DMC.Code != \"ERROR\"),\nLocals.SerialNumber = Locals.Automat"
PostExpr Line0002 = "ed.DUT_DMC.Code,\nLocals.MES.CantestOK = True // If there was an ERROR code, MES will be skipped - so we don't get in wr"
PostExpr Line0003 = "ong handle case"

[DEF, SF.Seq[2].Main[62].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[2].Main[62].TS.SData.ViCall]
ProjectPath = "C:\\UTP\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Keyence\\Read.vi"
TDChecksum = -159484423
%HI: Parms = [5]

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"

[SF.Seq[2].Main[62].TS.SData.ViCall.Parms[0]]
Label = "TCP in"
ArgVal = "StationGlobals.Keyence.TCP[RunState.TestSockets.MyIndex]"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 11

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[0]]
%NAME = "TCP in"

[SF.Seq[2].Main[62].TS.SData.ViCall.Parms[1]]
Label = "code"
ArgVal = "\"LON02\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[1]]
%NAME = "code"

[SF.Seq[2].Main[62].TS.SData.ViCall.Parms[2]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[2].Main[62].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[2].Main[62].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[2].Main[62].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[2]]
%NAME = "error in "

[SF.Seq[2].Main[62].TS.SData.ViCall.Parms[3]]
Label = "TCP Network Connection out"
ArgVal = "StationGlobals.Keyence.TCP[RunState.TestSockets.MyIndex]"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[3]]
%NAME = "TCP Network Connection out"

[SF.Seq[2].Main[62].TS.SData.ViCall.Parms[4]]
Label = "ASCII QR Code"
ArgVal = "Locals.Automated.DUT_DMC.Code"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[4]]
%NAME = "ASCII QR Code"

[SF.Seq[2].Main[62].TS.SData.ViCall.Parms[5]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[5].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[2].Main[62].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[2].Main[62].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[2].Main[62].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[2].Main[62].TS.SData.ViCall.Parms[5]]
%NAME = "error out"

[DEF, SF.Seq[2].Main[62]]
%NAME = "Read DMC Code setting 2"

[SF.Seq[2].Main[63].TS]
Id = "ID#:UCYpY/mO8BGJ3syCf5KpWB"
PostExpr = "Locals.Automated.DUTpresent = True // after AND-ing with rest will stay True"

[DEF, SF.Seq[2].Main[63]]
%NAME = "Reset DUT present sensor (total value)"

[SF.Seq[2].Main[64].TS]
Id = "ID#:eklGNyyV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[64]]
%NAME = "Read all 3 DUT present sensor values"

[SF.Seq[2].Main[65].TS]
Id = "ID#:KVDuKvmO8BGJ3syCf5KpWB"

[SF.Seq[2].Main[65]]
InitializationExpr = "Locals.Automated.DUTPresentSensorCouter = 0"
ConditionExpr = "Locals.Automated.DUTPresentSensorCouter < 3"
IncrementExpr = "Locals.Automated.DUTPresentSensorCouter += 1"

[DEF, SF.Seq[2].Main[65]]
%NAME = "For"

[SF.Seq[2].Main[66].TS]
Id = "ID#:ug/4f24F8BG4e1B7nf4f8B"

[DEF, SF.Seq[2].Main[66].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[66].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[2].Main[66].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[66].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[66].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.CurrentDUTpresent"
ParamType = 16

[SF.Seq[2].Main[66].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_\"+Locals.TestSocketName+\"_PresentSensor\"+Str(Locals.Automated.DUTPresentSensorCouter+1)"
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[66].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[2].Main[66].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[2].Main[66]]
%NAME = "Read  DUT present senors"

[SF.Seq[2].Main[67].TS]
Id = "ID#:346JdvmO8BGJ3syCf5KpWB"
PostExpr = "Locals.Automated.DUTpresent = (Locals.Automated.DUTpresent && Locals.Automated.CurrentDUTpresent)"

[DEF, SF.Seq[2].Main[67]]
%NAME = "Set DUT present sensor value"

[SF.Seq[2].Main[68].TS]
Id = "ID#:K1DuKvmO8BGJ3syCf5KpWB"

[DEF, SF.Seq[2].Main[68]]
%NAME = "End"

[SF.Seq[2].Main[69].TS]
Id = "ID#:AnRYVSyV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[70].TS]
Id = "ID#:5Jce7yyV8BGJ68yCf5KpWB"

[SF.Seq[2].Main[70]]
ConditionExpr = "Locals.Automated.Robot.Execute == True"
%COMMENT = "Sequence was started by robot - need to check what devices were suppose to be placed"

[DEF, SF.Seq[2].Main[70]]
%NAME = "If"

[SF.Seq[2].Main[71].TS]
Id = "ID#:DCfOYSyV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[71]]
%NAME = "Read if Robot placed DUTs - if sequence was started by Execute signal"

[SF.Seq[2].Main[72].TS]
Id = "ID#:dJeRdyyV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[72].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[72].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[2].Main[72].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[72].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[72].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.Robot.PartPlaced"
ParamType = 16

[SF.Seq[2].Main[72].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr Line0001 = "\"IOs_DI_SIGNALS_FROM_MASTER_PLC_\"+Locals.CHMB+\"_Part\"+Str(((Locals.DUT == \"DUT1\") || (Locals.DUT == \"DUT3\")) ? 1"
Expr Line0002 = " : 2)+\"_Placed\" // names are CHMB1_Part1_Placed and Part2_Placed"
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[72].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[2].Main[72].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[2].Main[72]]
%NAME = "Read Part Placed signal"

[SF.Seq[2].Main[73].TS]
Id = "ID#:ZVLFdD2V8BGJ68yCf5KpWB"
PostExpr = "StationGlobals.Automation.Robot.ManualSequence = False"

[DEF, SF.Seq[2].Main[73]]
%NAME = "Set that sequence is automatic"

[SF.Seq[2].Main[74].TS]
Id = "ID#:ev50+CyV8BGJ68yCf5KpWB"

[SF.Seq[2].Main[74]]
%COMMENT = "Sequence was not started by robot - setting variables to be able to continue manuall testing"

[DEF, SF.Seq[2].Main[74]]
%NAME = "Else"

[SF.Seq[2].Main[75].TS]
Id = "ID#:YVXtPi6V8BGJ68yCf5KpWB"
PostExpr = "Locals.Automated.Robot.PartPlaced = Locals.Automated.DUTpresent,\nStationGlobals.Automation.Robot.ManualSequence = True"

[DEF, SF.Seq[2].Main[75]]
%NAME = "Set that Present part has been  placed  and taht sequence is manual"

[SF.Seq[2].Main[76].TS]
Id = "ID#:5pce7yyV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[76]]
%NAME = "End"

[SF.Seq[2].Main[77].TS]
Id = "ID#:CyfOYSyV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[78].TS]
Id = "ID#:A3RYVSyV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[79].TS]
Id = "ID#:7uIzljz47xG52NQli0T1uC"

[SF.Seq[2].Main[79]]
ItemExpr = "Locals.TestSocketName"

[DEF, SF.Seq[2].Main[79]]
%NAME = "Select"

[SF.Seq[2].Main[80].TS]
Id = "ID#:8uIzljz47xG52NQli0T1uC"

[SF.Seq[2].Main[80]]
ItemExpr = "\"CHMB1_DUT1\""
%COMMENT = "Case of the LEFT DUT NEST"

[DEF, SF.Seq[2].Main[80]]
%NAME = "Case"

[SF.Seq[2].Main[81].TS]
Id = "ID#:bY+XTkD47xG52NQli0T1uC"
PostExpr Line0001 = "StationGlobals.Automation.DUT_DMC_CHMB1_DUT1 = Locals.Automated.DUT_DMC,\nStationGlobals.Automation.DUTpresent_CHMB1_DUT"
PostExpr Line0002 = "1 = Locals.Automated.DUTpresent,\nStationGlobals.Automation.DMC_code_valid[RunState.TestSockets.MyIndex] = (Locals.Autom"
PostExpr Line0003 = "ated.DUT_DMC.Code == \"ERROR\"),\nStationGlobals.Automation.Robot.Part_PLaced_CHMB1_DUT1 = Locals.Automated.Robot.PartPl"
PostExpr Line0004 = "aced"

[DEF, SF.Seq[2].Main[81]]
%NAME = "Set Station Globals for CHMB1 DUT1"

[SF.Seq[2].Main[82].TS]
Id = "ID#:8eIzljz47xG52NQli0T1uC"

[DEF, SF.Seq[2].Main[82]]
%NAME = "End"

[SF.Seq[2].Main[83].TS]
Id = "ID#:Nn1lqzz47xG52NQli0T1uC"

[SF.Seq[2].Main[83]]
ItemExpr = "\"CHMB1_DUT2\""
%COMMENT = "Case of the RIGHT DUT NEST"

[DEF, SF.Seq[2].Main[83]]
%NAME = "Case"

[SF.Seq[2].Main[84].TS]
Id = "ID#:pfJjJW8F8BG4e1B7nf4f8B"
PostExpr Line0001 = "StationGlobals.Automation.DUT_DMC_CHMB1_DUT2 = Locals.Automated.DUT_DMC,\nStationGlobals.Automation.DUTpresent_CHMB1_DUT"
PostExpr Line0002 = "2 = Locals.Automated.DUTpresent,\nStationGlobals.Automation.DMC_code_valid[RunState.TestSockets.MyIndex] = (Locals.Autom"
PostExpr Line0003 = "ated.DUT_DMC.Code == \"ERROR\"),\nStationGlobals.Automation.Robot.Part_PLaced_CHMB1_DUT2 = Locals.Automated.Robot.PartPl"
PostExpr Line0004 = "aced"

[DEF, SF.Seq[2].Main[84]]
%NAME = "Set Station Globals for CHMB1 DUT2"

[SF.Seq[2].Main[85].TS]
Id = "ID#:N31lqzz47xG52NQli0T1uC"

[DEF, SF.Seq[2].Main[85]]
%NAME = "End"

[SF.Seq[2].Main[86].TS]
Id = "ID#:8OIzljz47xG52NQli0T1uC"

[DEF, SF.Seq[2].Main[86]]
%NAME = "End"

[SF.Seq[2].Main[87].TS]
Id = "ID#:e5dycSP47xG52NQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[88].TS]
Id = "ID#:ec6+YTz47xG52NQli0T1uC"
IgnoreRTE = True
%HI: AdditionalResultsHints = [2]

[DEF, SF.Seq[2].Main[88].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"
%[1] = "TYPE, NI_CustomResult"
%[2] = "TYPE, NI_CustomResult"

[SF.Seq[2].Main[88].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"ALREADY_EXISTS_HINT\")"
ValueToLog = "Evaluate(Step.AlreadyExistsExpr)"

[SF.Seq[2].Main[88].TS.AdditionalResultsHints[1]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"RENDEZVOUS_REFERENCE_LIFETIME_HINT\")"
ValueToLog Line0001 = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", (Step.Lifetime == 0 ? \"LIFETIME_SEQUENCE\" :\n    Step.Lifetime == 1 ? \"LIFETIME_T"
ValueToLog Line0002 = "HREAD\" :\n    Step.Lifetime == 2 ? \"LIFETIME_REFERENCE\" :\n    Step.Lifetime == 3 ? \"LIFETIME_EXECUTION\" :\n    \"\"
ValueToLog Line0003 = ""))"

[SF.Seq[2].Main[88].TS.AdditionalResultsHints[2]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"NUMBER_OF_THREADS_PER_RENDEZVOUS_HINT\")"
ValueToLog = "Evaluate(Step.RendezvousCountExpr)"

[SF.Seq[2].Main[88]]
NameOrRefExpr = "\"DMC CODE and DUT PRESENT\"+Locals.CHMB"
Lifetime = 0
%COMMENT = "Wait for both sockets to perform DMC scanning and PRESENT SENSOR reading"

[DEF, SF.Seq[2].Main[88]]
%NAME = "Create rendezvous for DMC CODE and DUT PRESENT"

[SF.Seq[2].Main[89].TS]
Id = "ID#:es6+YTz47xG52NQli0T1uC"
IgnoreRTE = True
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[2].Main[89].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[2].Main[89].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"TIMEOUT\")"
ValueToLog = "Step.TimeoutEnabled ? Str(Evaluate(Step.TimeoutExpr)) : ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"DISABLED\")"

[DEF, SF.Seq[2].Main[89]]
Result = Obj
%NAME = "Wait DMC CODE and DUT PRESENT operations"

[DEF, SF.Seq[2].Main[89].Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"
TimeoutOccurred = Bool

[SF.Seq[2].Main[89].Result]
%FLG: Error = 4194304
%FLG: Status = 4194304
%FLG: ReportText = 4194304
%FLG: Common = 0

[SF.Seq[2].Main[89]]
%FLG: Result = 4194304
NameOrRefExpr = "\"DMC CODE and DUT PRESENT\"+Locals.CHMB"
Operation = 1

[SF.Seq[2].Main[90].TS]
Id = "ID#:72DURz747xG52NQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[91].TS]
Id = "ID#:+KW8DN/47xG52tQli0T1uC"

[SF.Seq[2].Main[91]]
ConditionExpr Line0001 = "(StationGlobals.Automation.DUT_DMC_CHMB1_DUT1.Code != \"ERROR\" && StationGlobals.Automation.DUTpresent_CHMB1_DUT1 == Fa"
ConditionExpr Line0002 = "lse) || // Situation 1.1 DUT 1 present but not placed correctly\n(StationGlobals.Automation.DUT_DMC_CHMB1_DUT2.Code != \"
ConditionExpr Line0003 = ""ERROR\" && StationGlobals.Automation.DUTpresent_CHMB1_DUT2 == False) || // Situation 1.2 DUT 2 present but not placed c"
ConditionExpr Line0004 = "orrectly\n//((StationGlobals.Automation.DUT_DMC_CHMB1_DUT1.Code == \"ERROR\" && StationGlobals.Automation.DUTpresent_CHM"
ConditionExpr Line0005 = "B1_DUT1 == False) && (StationGlobals.Automation.DUT_DMC_CHMB1_DUT2.Code == \"ERROR\" && StationGlobals.Automation.DUTpre"
ConditionExpr Line0006 = "sent_CHMB1_DUT2 == False)) || // Situation 2 No DUTs\n((StationGlobals.Automation.DUTpresent_CHMB1_DUT1 == False) && (St"
ConditionExpr Line0007 = "ationGlobals.Automation.Robot.Part_PLaced_CHMB1_DUT1 == True)) || // DUT 1 was placed but DUT present sensors did not se"
ConditionExpr Line0008 = "e it placed correctly\n((StationGlobals.Automation.DUTpresent_CHMB1_DUT2 == False) && (StationGlobals.Automation.Robot.P"
ConditionExpr Line0009 = "art_PLaced_CHMB1_DUT2 == True))   // DUT 2 was placed but DUT present sensors did not see it placed correctly\n"
%COMMENT Line0001 = "Situation1: On at least one Test Socket Scanner don't have ERROR but DUT present sensor is FALSE (Operator didn't place "
%COMMENT Line0002 = "DUT correctly) OR\nSituation2: Operator didn't inserted DUTs on BOTH NESTS\nSituation3 :There is an error from the MES\n"
%COMMENT Line0003 = " => Both Test Sockets needs to go back"

[DEF, SF.Seq[2].Main[91]]
%NAME = "If"

[SF.Seq[2].Main[92].TS]
Id = "ID#:NSYbBzGV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[92]]
%NAME = "DUT present and Robot Part Placed are not corresponding"

[SF.Seq[2].Main[93].TS]
Id = "ID#:KSKiAej47xG52tQli0T1uC"

[SF.Seq[2].Main[93]]
ConditionExpr Line0001 = "((StationGlobals.Automation.Robot.Part_PLaced_CHMB1_DUT1 == True ) && (StationGlobals.Automation.DUTpresent_CHMB1_DUT1 ="
ConditionExpr Line0002 = "= False)) && ((StationGlobals.Automation.Robot.Part_PLaced_CHMB1_DUT2 == True ) && (StationGlobals.Automation.DUTpresent"
ConditionExpr Line0003 = "_CHMB1_DUT2 == False))"
%COMMENT = "Both devices are placed badly by the robot"

[DEF, SF.Seq[2].Main[93]]
%NAME = "If"

[SF.Seq[2].Main[94].TS]
Id = "ID#:Zf2RyzGV8BGJ68yCf5KpWB"
PreCond = "Locals.DUT == \"DUT1\" // only one should have this message"

[DEF, SF.Seq[2].Main[94].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[94].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowPopupMessageDialog"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[94].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[94].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Title = "TYPE, SequenceArgument"
CenterPosition = "TYPE, SequenceArgument"
XPosition = "TYPE, SequenceArgument"
YPosition = "TYPE, SequenceArgument"
IsModal = "TYPE, SequenceArgument"
ShowOkButton = "TYPE, SequenceArgument"
ShowCancelButton = "TYPE, SequenceArgument"
DialogTimeout = "TYPE, SequenceArgument"
OkButtonPressed = "TYPE, SequenceArgument"
CancelButtonPressed = "TYPE, SequenceArgument"

[SF.Seq[2].Main[94].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"ERROR_ROBOT_PLACED_BOTH\")"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[94].TS.SData.ActualArgs.Title]
ParamType = 2
Flags = 0

[SF.Seq[2].Main[94].TS.SData.ActualArgs.CenterPosition]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[94].TS.SData.ActualArgs.XPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[94].TS.SData.ActualArgs.YPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[94].TS.SData.ActualArgs.IsModal]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[94].TS.SData.ActualArgs.ShowOkButton]
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[94].TS.SData.ActualArgs.ShowCancelButton]
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[94].TS.SData.ActualArgs.DialogTimeout]
Expr = "0"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[94].TS.SData.ActualArgs.OkButtonPressed]
ParamType = 16

[SF.Seq[2].Main[94].TS.SData.ActualArgs.CancelButtonPressed]
ParamType = 16

[DEF, SF.Seq[2].Main[94].TS.SData.Prototype]
Message = Str
Title = Str
CenterPosition = Bool
XPosition = Num
YPosition = Num
IsModal = Bool
ShowOkButton = Bool
ShowCancelButton = Bool
DialogTimeout = Num
OkButtonPressed = Bool
CancelButtonPressed = Bool

[SF.Seq[2].Main[94].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[94].TS.SData.Prototype.Title]
%COMMENT = "Dialog title. (Default: Empty)"

[SF.Seq[2].Main[94].TS.SData.Prototype]
CenterPosition = True
ShowOkButton = True
%FLG: OkButtonPressed = 4
%FLG: CancelButtonPressed = 4

[SF.Seq[2].Main[94].TS.SData.Prototype.CenterPosition]
%COMMENT = "If True, the dialog is positioned in the center of the screen. (Default: True)"

[SF.Seq[2].Main[94].TS.SData.Prototype.XPosition]
%COMMENT = "Position of the dialog, X coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[94].TS.SData.Prototype.YPosition]
%COMMENT = "Position of the dialog, Y coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[94].TS.SData.Prototype.IsModal]
%COMMENT = "If True, the dialog is modal to UTP TEF or Sequence Editor. (Default: False)"

[SF.Seq[2].Main[94].TS.SData.Prototype.ShowOkButton]
%COMMENT = "Show OK button in the dialog. (Default: True)"

[SF.Seq[2].Main[94].TS.SData.Prototype.ShowCancelButton]
%COMMENT = "Show Cancel button in the dialog. (Default: False)"

[SF.Seq[2].Main[94].TS.SData.Prototype.DialogTimeout]
%COMMENT Line0001 = "Optional. Dialog timeout in seconds. If 0, the timeout is not used and the dialog is shown until operator press a button"
%COMMENT Line0002 = ". (Default: 0)"

[SF.Seq[2].Main[94].TS.SData.Prototype.OkButtonPressed]
%COMMENT = "Returns True, if OK button was pressed."

[SF.Seq[2].Main[94].TS.SData.Prototype.CancelButtonPressed]
%COMMENT = "Returns True, if Cancel button was pressed."

[DEF, SF.Seq[2].Main[94]]
%NAME = "Both devices were not placed correctly by robot"

[SF.Seq[2].Main[95].TS]
Id = "ID#:t/ISpjGV8BGJ68yCf5KpWB"

[SF.Seq[2].Main[95]]
ConditionExpr Line0001 = "(Locals.Automated.Robot.PartPlaced == True) && (Locals.Automated.DUTpresent == False) // DUT was not placed correctly by"
ConditionExpr Line0002 = " robot"
%COMMENT = "One of the DUTs is not placed correctly by the Robot"

[DEF, SF.Seq[2].Main[95]]
%NAME = "Else If"

[SF.Seq[2].Main[96].TS]
Id = "ID#:k42hFDSV8BGJ68yCf5KpWB"
PreCond = "Locals.DUT == \"DUT1\" // only one should have this message"

[DEF, SF.Seq[2].Main[96].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[96].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowPopupMessageDialog"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[96].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[96].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Title = "TYPE, SequenceArgument"
CenterPosition = "TYPE, SequenceArgument"
XPosition = "TYPE, SequenceArgument"
YPosition = "TYPE, SequenceArgument"
IsModal = "TYPE, SequenceArgument"
ShowOkButton = "TYPE, SequenceArgument"
ShowCancelButton = "TYPE, SequenceArgument"
DialogTimeout = "TYPE, SequenceArgument"
OkButtonPressed = "TYPE, SequenceArgument"
CancelButtonPressed = "TYPE, SequenceArgument"

[SF.Seq[2].Main[96].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"ERROR_ROBOT_PLACED_ONE\") + \" \" + Locals.TestSocketName"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[96].TS.SData.ActualArgs.Title]
ParamType = 2
Flags = 0

[SF.Seq[2].Main[96].TS.SData.ActualArgs.CenterPosition]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[96].TS.SData.ActualArgs.XPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[96].TS.SData.ActualArgs.YPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[96].TS.SData.ActualArgs.IsModal]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[96].TS.SData.ActualArgs.ShowOkButton]
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[96].TS.SData.ActualArgs.ShowCancelButton]
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[96].TS.SData.ActualArgs.DialogTimeout]
Expr = "0"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[96].TS.SData.ActualArgs.OkButtonPressed]
ParamType = 16

[SF.Seq[2].Main[96].TS.SData.ActualArgs.CancelButtonPressed]
ParamType = 16

[DEF, SF.Seq[2].Main[96].TS.SData.Prototype]
Message = Str
Title = Str
CenterPosition = Bool
XPosition = Num
YPosition = Num
IsModal = Bool
ShowOkButton = Bool
ShowCancelButton = Bool
DialogTimeout = Num
OkButtonPressed = Bool
CancelButtonPressed = Bool

[SF.Seq[2].Main[96].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[96].TS.SData.Prototype.Title]
%COMMENT = "Dialog title. (Default: Empty)"

[SF.Seq[2].Main[96].TS.SData.Prototype]
CenterPosition = True
ShowOkButton = True
%FLG: OkButtonPressed = 4
%FLG: CancelButtonPressed = 4

[SF.Seq[2].Main[96].TS.SData.Prototype.CenterPosition]
%COMMENT = "If True, the dialog is positioned in the center of the screen. (Default: True)"

[SF.Seq[2].Main[96].TS.SData.Prototype.XPosition]
%COMMENT = "Position of the dialog, X coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[96].TS.SData.Prototype.YPosition]
%COMMENT = "Position of the dialog, Y coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[96].TS.SData.Prototype.IsModal]
%COMMENT = "If True, the dialog is modal to UTP TEF or Sequence Editor. (Default: False)"

[SF.Seq[2].Main[96].TS.SData.Prototype.ShowOkButton]
%COMMENT = "Show OK button in the dialog. (Default: True)"

[SF.Seq[2].Main[96].TS.SData.Prototype.ShowCancelButton]
%COMMENT = "Show Cancel button in the dialog. (Default: False)"

[SF.Seq[2].Main[96].TS.SData.Prototype.DialogTimeout]
%COMMENT Line0001 = "Optional. Dialog timeout in seconds. If 0, the timeout is not used and the dialog is shown until operator press a button"
%COMMENT Line0002 = ". (Default: 0)"

[SF.Seq[2].Main[96].TS.SData.Prototype.OkButtonPressed]
%COMMENT = "Returns True, if OK button was pressed."

[SF.Seq[2].Main[96].TS.SData.Prototype.CancelButtonPressed]
%COMMENT = "Returns True, if Cancel button was pressed."

[DEF, SF.Seq[2].Main[96]]
%NAME = "One of the DUTs is not placed correctly by the Robot"

[SF.Seq[2].Main[97].TS]
Id = "ID#:984vczSV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[97].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[97].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[97].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[97].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[2].Main[97].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[97].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"ERROR_ROBOT_PLACED_ONE\") + \" \" + Locals.TestSocketName"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[97].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[97].TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[2].Main[97].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[2].Main[97].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[2].Main[97].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[2].Main[97].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[97].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[2].Main[97].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[2].Main[97]]
%NAME = "One of the DUTs is not placed correctly by the Robot"

[SF.Seq[2].Main[98].TS]
Id = "ID#:dtoD/HEF8BG4e1B7nf4f8B"

[SF.Seq[2].Main[98]]
ConditionExpr Line0001 = "(StationGlobals.Automation.DUT_DMC_CHMB1_DUT1.Code != \"ERROR\" && StationGlobals.Automation.DUTpresent_CHMB1_DUT1 == Fa"
ConditionExpr Line0002 = "lse) || // DUT 1 Not placed correctly\n(StationGlobals.Automation.DUT_DMC_CHMB1_DUT2.Code != \"ERROR\" &&  StationGlobal"
ConditionExpr Line0003 = "s.Automation.DUTpresent_CHMB1_DUT2 == False)  // DUT 2 Not placed correctly\n//StationGlobals.DUTpresent_CHMB1_DUT1 == F"
ConditionExpr Line0004 = "alse || StationGlobals.DUTpresent_CHMB1_DUT2 == False"
%COMMENT = "Situation1: Scanner don't have ERROR but DUT present sensor is FALSE"

[DEF, SF.Seq[2].Main[98]]
%NAME = "Else If"

[SF.Seq[2].Main[99].TS]
Id = "ID#:yuML5zCV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[99]]
%NAME = "next Scenarios would indicate that probably one of the sensors does not work since it is very unlikely to happen"

[SF.Seq[2].Main[100].TS]
Id = "ID#:qg2zKuH47xG52tQli0T1uC"

[SF.Seq[2].Main[100]]
ConditionExpr = "StationGlobals.Automation.DUTpresent_CHMB1_DUT1 == False && StationGlobals.Automation.DUTpresent_CHMB1_DUT2 == False"

[DEF, SF.Seq[2].Main[100]]
%NAME = "If"

[SF.Seq[2].Main[101].TS]
Id = "ID#:/Pycqjf77xG53tQli0T1uC"
PreCond = "Right(Locals.TestSocketName,4) == \"DUT1\"  //only one pop-up needed"

[DEF, SF.Seq[2].Main[101].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[101].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowPopupMessageDialog"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[101].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[101].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Title = "TYPE, SequenceArgument"
CenterPosition = "TYPE, SequenceArgument"
XPosition = "TYPE, SequenceArgument"
YPosition = "TYPE, SequenceArgument"
IsModal = "TYPE, SequenceArgument"
ShowOkButton = "TYPE, SequenceArgument"
ShowCancelButton = "TYPE, SequenceArgument"
DialogTimeout = "TYPE, SequenceArgument"
OkButtonPressed = "TYPE, SequenceArgument"
CancelButtonPressed = "TYPE, SequenceArgument"

[SF.Seq[2].Main[101].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"DUT_NOT_CORRECT_PLACED_ON_BOTH\")"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[101].TS.SData.ActualArgs.Title]
ParamType = 2
Flags = 0

[SF.Seq[2].Main[101].TS.SData.ActualArgs.CenterPosition]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[101].TS.SData.ActualArgs.XPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[101].TS.SData.ActualArgs.YPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[101].TS.SData.ActualArgs.IsModal]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[101].TS.SData.ActualArgs.ShowOkButton]
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[101].TS.SData.ActualArgs.ShowCancelButton]
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[101].TS.SData.ActualArgs.DialogTimeout]
Expr = "0"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[101].TS.SData.ActualArgs.OkButtonPressed]
ParamType = 16

[SF.Seq[2].Main[101].TS.SData.ActualArgs.CancelButtonPressed]
ParamType = 16

[DEF, SF.Seq[2].Main[101].TS.SData.Prototype]
Message = Str
Title = Str
CenterPosition = Bool
XPosition = Num
YPosition = Num
IsModal = Bool
ShowOkButton = Bool
ShowCancelButton = Bool
DialogTimeout = Num
OkButtonPressed = Bool
CancelButtonPressed = Bool

[SF.Seq[2].Main[101].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[101].TS.SData.Prototype.Title]
%COMMENT = "Dialog title. (Default: Empty)"

[SF.Seq[2].Main[101].TS.SData.Prototype]
CenterPosition = True
ShowOkButton = True
%FLG: OkButtonPressed = 4
%FLG: CancelButtonPressed = 4

[SF.Seq[2].Main[101].TS.SData.Prototype.CenterPosition]
%COMMENT = "If True, the dialog is positioned in the center of the screen. (Default: True)"

[SF.Seq[2].Main[101].TS.SData.Prototype.XPosition]
%COMMENT = "Position of the dialog, X coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[101].TS.SData.Prototype.YPosition]
%COMMENT = "Position of the dialog, Y coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[101].TS.SData.Prototype.IsModal]
%COMMENT = "If True, the dialog is modal to UTP TEF or Sequence Editor. (Default: False)"

[SF.Seq[2].Main[101].TS.SData.Prototype.ShowOkButton]
%COMMENT = "Show OK button in the dialog. (Default: True)"

[SF.Seq[2].Main[101].TS.SData.Prototype.ShowCancelButton]
%COMMENT = "Show Cancel button in the dialog. (Default: False)"

[SF.Seq[2].Main[101].TS.SData.Prototype.DialogTimeout]
%COMMENT Line0001 = "Optional. Dialog timeout in seconds. If 0, the timeout is not used and the dialog is shown until operator press a button"
%COMMENT Line0002 = ". (Default: 0)"

[SF.Seq[2].Main[101].TS.SData.Prototype.OkButtonPressed]
%COMMENT = "Returns True, if OK button was pressed."

[SF.Seq[2].Main[101].TS.SData.Prototype.CancelButtonPressed]
%COMMENT = "Returns True, if Cancel button was pressed."

[DEF, SF.Seq[2].Main[101]]
%NAME = "Tell Operator that he didn't place DUT correctly on BOTH nests"

[SF.Seq[2].Main[102].TS]
Id = "ID#:82HeReH47xG52tQli0T1uC"

[SF.Seq[2].Main[102]]
ConditionExpr = "StationGlobals.Automation.DUTpresent_CHMB1_DUT1 == False && StationGlobals.Automation.DUTpresent_CHMB1_DUT2 == True"

[DEF, SF.Seq[2].Main[102]]
%NAME = "Else If"

[SF.Seq[2].Main[103].TS]
Id = "ID#:isOBpeL47xG52tQli0T1uC"
PreCond = "Right(Locals.TestSocketName,4) == \"DUT1\"  //only one pop-up needed"

[DEF, SF.Seq[2].Main[103].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[103].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowPopupMessageDialog"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[103].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[103].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Title = "TYPE, SequenceArgument"
CenterPosition = "TYPE, SequenceArgument"
XPosition = "TYPE, SequenceArgument"
YPosition = "TYPE, SequenceArgument"
IsModal = "TYPE, SequenceArgument"
ShowOkButton = "TYPE, SequenceArgument"
ShowCancelButton = "TYPE, SequenceArgument"
DialogTimeout = "TYPE, SequenceArgument"
OkButtonPressed = "TYPE, SequenceArgument"
CancelButtonPressed = "TYPE, SequenceArgument"

[SF.Seq[2].Main[103].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"DUT_NOT_CORRECT_PLACED_ON_LEFT\")"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[103].TS.SData.ActualArgs.Title]
ParamType = 2
Flags = 0

[SF.Seq[2].Main[103].TS.SData.ActualArgs.CenterPosition]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[103].TS.SData.ActualArgs.XPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[103].TS.SData.ActualArgs.YPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[103].TS.SData.ActualArgs.IsModal]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[103].TS.SData.ActualArgs.ShowOkButton]
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[103].TS.SData.ActualArgs.ShowCancelButton]
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[103].TS.SData.ActualArgs.DialogTimeout]
Expr = "0"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[103].TS.SData.ActualArgs.OkButtonPressed]
ParamType = 16

[SF.Seq[2].Main[103].TS.SData.ActualArgs.CancelButtonPressed]
ParamType = 16

[DEF, SF.Seq[2].Main[103].TS.SData.Prototype]
Message = Str
Title = Str
CenterPosition = Bool
XPosition = Num
YPosition = Num
IsModal = Bool
ShowOkButton = Bool
ShowCancelButton = Bool
DialogTimeout = Num
OkButtonPressed = Bool
CancelButtonPressed = Bool

[SF.Seq[2].Main[103].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[103].TS.SData.Prototype.Title]
%COMMENT = "Dialog title. (Default: Empty)"

[SF.Seq[2].Main[103].TS.SData.Prototype]
CenterPosition = True
ShowOkButton = True
%FLG: OkButtonPressed = 4
%FLG: CancelButtonPressed = 4

[SF.Seq[2].Main[103].TS.SData.Prototype.CenterPosition]
%COMMENT = "If True, the dialog is positioned in the center of the screen. (Default: True)"

[SF.Seq[2].Main[103].TS.SData.Prototype.XPosition]
%COMMENT = "Position of the dialog, X coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[103].TS.SData.Prototype.YPosition]
%COMMENT = "Position of the dialog, Y coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[103].TS.SData.Prototype.IsModal]
%COMMENT = "If True, the dialog is modal to UTP TEF or Sequence Editor. (Default: False)"

[SF.Seq[2].Main[103].TS.SData.Prototype.ShowOkButton]
%COMMENT = "Show OK button in the dialog. (Default: True)"

[SF.Seq[2].Main[103].TS.SData.Prototype.ShowCancelButton]
%COMMENT = "Show Cancel button in the dialog. (Default: False)"

[SF.Seq[2].Main[103].TS.SData.Prototype.DialogTimeout]
%COMMENT Line0001 = "Optional. Dialog timeout in seconds. If 0, the timeout is not used and the dialog is shown until operator press a button"
%COMMENT Line0002 = ". (Default: 0)"

[SF.Seq[2].Main[103].TS.SData.Prototype.OkButtonPressed]
%COMMENT = "Returns True, if OK button was pressed."

[SF.Seq[2].Main[103].TS.SData.Prototype.CancelButtonPressed]
%COMMENT = "Returns True, if Cancel button was pressed."

[DEF, SF.Seq[2].Main[103]]
%NAME = "Tell Operator that he didn't place DUT correctly on LEFT nest"

[SF.Seq[2].Main[104].TS]
Id = "ID#:tem2njf77xG53tQli0T1uC"

[SF.Seq[2].Main[104]]
ConditionExpr = "StationGlobals.Automation.DUTpresent_CHMB1_DUT1 == True && StationGlobals.Automation.DUTpresent_CHMB1_DUT2 == False"

[DEF, SF.Seq[2].Main[104]]
%NAME = "Else If"

[SF.Seq[2].Main[105].TS]
Id = "ID#:sqjVkOL47xG52tQli0T1uC"
PreCond = "Right(Locals.TestSocketName,4) == \"DUT1\"  //only one pop-up needed"

[DEF, SF.Seq[2].Main[105].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[105].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowPopupMessageDialog"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[105].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[105].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Title = "TYPE, SequenceArgument"
CenterPosition = "TYPE, SequenceArgument"
XPosition = "TYPE, SequenceArgument"
YPosition = "TYPE, SequenceArgument"
IsModal = "TYPE, SequenceArgument"
ShowOkButton = "TYPE, SequenceArgument"
ShowCancelButton = "TYPE, SequenceArgument"
DialogTimeout = "TYPE, SequenceArgument"
OkButtonPressed = "TYPE, SequenceArgument"
CancelButtonPressed = "TYPE, SequenceArgument"

[SF.Seq[2].Main[105].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"DUT_NOT_CORRECT_PLACED_ON_RIGHT\")"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[105].TS.SData.ActualArgs.Title]
ParamType = 2
Flags = 0

[SF.Seq[2].Main[105].TS.SData.ActualArgs.CenterPosition]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[105].TS.SData.ActualArgs.XPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[105].TS.SData.ActualArgs.YPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[105].TS.SData.ActualArgs.IsModal]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[105].TS.SData.ActualArgs.ShowOkButton]
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[105].TS.SData.ActualArgs.ShowCancelButton]
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[105].TS.SData.ActualArgs.DialogTimeout]
Expr = "0"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[105].TS.SData.ActualArgs.OkButtonPressed]
ParamType = 16

[SF.Seq[2].Main[105].TS.SData.ActualArgs.CancelButtonPressed]
ParamType = 16

[DEF, SF.Seq[2].Main[105].TS.SData.Prototype]
Message = Str
Title = Str
CenterPosition = Bool
XPosition = Num
YPosition = Num
IsModal = Bool
ShowOkButton = Bool
ShowCancelButton = Bool
DialogTimeout = Num
OkButtonPressed = Bool
CancelButtonPressed = Bool

[SF.Seq[2].Main[105].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[105].TS.SData.Prototype.Title]
%COMMENT = "Dialog title. (Default: Empty)"

[SF.Seq[2].Main[105].TS.SData.Prototype]
CenterPosition = True
ShowOkButton = True
%FLG: OkButtonPressed = 4
%FLG: CancelButtonPressed = 4

[SF.Seq[2].Main[105].TS.SData.Prototype.CenterPosition]
%COMMENT = "If True, the dialog is positioned in the center of the screen. (Default: True)"

[SF.Seq[2].Main[105].TS.SData.Prototype.XPosition]
%COMMENT = "Position of the dialog, X coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[105].TS.SData.Prototype.YPosition]
%COMMENT = "Position of the dialog, Y coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[105].TS.SData.Prototype.IsModal]
%COMMENT = "If True, the dialog is modal to UTP TEF or Sequence Editor. (Default: False)"

[SF.Seq[2].Main[105].TS.SData.Prototype.ShowOkButton]
%COMMENT = "Show OK button in the dialog. (Default: True)"

[SF.Seq[2].Main[105].TS.SData.Prototype.ShowCancelButton]
%COMMENT = "Show Cancel button in the dialog. (Default: False)"

[SF.Seq[2].Main[105].TS.SData.Prototype.DialogTimeout]
%COMMENT Line0001 = "Optional. Dialog timeout in seconds. If 0, the timeout is not used and the dialog is shown until operator press a button"
%COMMENT Line0002 = ". (Default: 0)"

[SF.Seq[2].Main[105].TS.SData.Prototype.OkButtonPressed]
%COMMENT = "Returns True, if OK button was pressed."

[SF.Seq[2].Main[105].TS.SData.Prototype.CancelButtonPressed]
%COMMENT = "Returns True, if Cancel button was pressed."

[DEF, SF.Seq[2].Main[105]]
%NAME = "Tell Operator that he didn't place DUT correctly on RIGHT nest"

[SF.Seq[2].Main[106].TS]
Id = "ID#:rA2zKuH47xG52tQli0T1uC"

[DEF, SF.Seq[2].Main[106]]
%NAME = "End"

[SF.Seq[2].Main[107].TS]
Id = "ID#:t+IBcCZF8BGtocyCf35SiD"
PreCond = "!Locals.Automated.DUTpresent"

[DEF, SF.Seq[2].Main[107].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[107].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[107].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[107].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[2].Main[107].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[107].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"DUT_NOT_CORRECT_PLACED\")"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[107].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[107].TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[2].Main[107].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[2].Main[107].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[2].Main[107].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[2].Main[107].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[107].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[2].Main[107].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[SF.Seq[2].Main[107]]
%COMMENT = "Write error per test socket"

[DEF, SF.Seq[2].Main[107]]
%NAME = "DUT not placed corectly"

[SF.Seq[2].Main[108].TS]
Id = "ID#:KyKiAej47xG52tQli0T1uC"

[DEF, SF.Seq[2].Main[108]]
%NAME = "End"

[SF.Seq[2].Main[109].TS]
Id = "ID#:yVbuYzaV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[110].TS]
Id = "ID#:zVbuYzaV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[110]]
%NAME = "Something went wrong in system - Sending system to Error"

[SF.Seq[2].Main[111].TS]
Id = "ID#:Wbf8ijaV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[111].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[111].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[2].Main[111].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[111].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[111].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[111].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Error\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[111].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[2].Main[111]]
%NAME = "Setting Error in CHMB1 signal"

[SF.Seq[2].Main[112].TS]
Id = "ID#:sEor4TeV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[112]]
%NAME = "!!!! Da li da greska bude setovana samo za CHMB1 ili za obe komore???"

[SF.Seq[2].Main[113].TS]
Id = "ID#:3srbuDeV8BGJ68yCf5KpWB"
Mode = "Skip"
PostExpr Line0001 = "(Locals.CHMB == \"CHMB1\") ? (StationGlobals.Automation.ErrorInCHMB1 = True) : (StationGlobals.Automation.ErrorInCHMB2 ="
PostExpr Line0002 = " True)"

[SF.Seq[2].Main[113]]
%COMMENT = "Set error only in current chaimber"

[DEF, SF.Seq[2].Main[113]]
%NAME = "Set that there is an error in CHMB"

[SF.Seq[2].Main[114].TS]
Id = "ID#:h3AMCziV8BGJ68yCf5KpWB"
Mode = "Skip"
PostExpr = "StationGlobals.Automation.ErrorInCHMB1 = True,\nStationGlobals.Automation.ErrorInCHMB2 = True"

[SF.Seq[2].Main[114]]
%COMMENT = "Set error in both chaimbers"

[DEF, SF.Seq[2].Main[114]]
%NAME = "Set that there is an error in CHMB"

[SF.Seq[2].Main[115].TS]
Id = "ID#:ylbuYzaV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[116].TS]
Id = "ID#:fXtGFTuV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[116]]
%NAME = "Set sequence to Error state"

[SF.Seq[2].Main[117].TS]
Id = "ID#:+APQcDiV8BGJ68yCf5KpWB"
PostExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] = Enums.SEQUENCE_STATE.ERROR"

[SF.Seq[2].Main[117]]
%COMMENT = "Only for CHMB1"

[DEF, SF.Seq[2].Main[117]]
%NAME = "Change the both Socket States to ERROR"

[SF.Seq[2].Main[118].TS]
Id = "ID#:2D4GGjmV8BGJ68yCf5KpWB"
Mode = "Skip"
PostExpr Line0001 = "StationGlobals.SequenceStates[0] = Enums.SEQUENCE_STATE.ERROR,\nStationGlobals.SequenceStates[2] = Enums.SEQUENCE_STATE."
PostExpr Line0002 = "ERROR,"

[SF.Seq[2].Main[118]]
%COMMENT = "For Both CHMBs"

[DEF, SF.Seq[2].Main[118]]
%NAME = "Change Station States to ERROR"

[SF.Seq[2].Main[119].TS]
Id = "ID#:+gPQcDiV8BGJ68yCf5KpWB"
PostExpr Line0001 = "StationGlobals.SequenceErrorDescriptions[RunState.TestSockets.MyIndex] = \"ERROR(\"+\"Error with Robot placing devices\""
PostExpr Line0002 = "+\"): \" + ResStr(\"SPECIAL_UI_MESSAGES\", \"ERROR_FAIL\") + \" \" + \"ROBOT_FAIL\""

[DEF, SF.Seq[2].Main[119]]
%NAME = "Configre for both Sockets Error Description"

[SF.Seq[2].Main[120].TS]
Id = "ID#:+wPQcDiV8BGJ68yCf5KpWB"
Mode = "Skip"

[DEF, SF.Seq[2].Main[120].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[120].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowPopupMessageDialog"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[120].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[120].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Title = "TYPE, SequenceArgument"
CenterPosition = "TYPE, SequenceArgument"
XPosition = "TYPE, SequenceArgument"
YPosition = "TYPE, SequenceArgument"
IsModal = "TYPE, SequenceArgument"
ShowOkButton = "TYPE, SequenceArgument"
ShowCancelButton = "TYPE, SequenceArgument"
DialogTimeout = "TYPE, SequenceArgument"
OkButtonPressed = "TYPE, SequenceArgument"
CancelButtonPressed = "TYPE, SequenceArgument"

[SF.Seq[2].Main[120].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "StationGlobals.SequenceErrorDescriptions[RunState.TestSockets.MyIndex]"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[120].TS.SData.ActualArgs.Title]
UseDef = False
Expr = "Locals.TestSocketName"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[120].TS.SData.ActualArgs.CenterPosition]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[120].TS.SData.ActualArgs.XPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[120].TS.SData.ActualArgs.YPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[120].TS.SData.ActualArgs.IsModal]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[120].TS.SData.ActualArgs.ShowOkButton]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[120].TS.SData.ActualArgs.ShowCancelButton]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[120].TS.SData.ActualArgs.DialogTimeout]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[120].TS.SData.ActualArgs.OkButtonPressed]
ParamType = 16

[SF.Seq[2].Main[120].TS.SData.ActualArgs.CancelButtonPressed]
ParamType = 16

[DEF, SF.Seq[2].Main[120].TS.SData.Prototype]
Message = Str
Title = Str
CenterPosition = Bool
XPosition = Num
YPosition = Num
IsModal = Bool
ShowOkButton = Bool
ShowCancelButton = Bool
DialogTimeout = Num
OkButtonPressed = Bool
CancelButtonPressed = Bool

[SF.Seq[2].Main[120].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[120].TS.SData.Prototype.Title]
%COMMENT = "Dialog title. (Default: Empty)"

[SF.Seq[2].Main[120].TS.SData.Prototype]
CenterPosition = True
ShowOkButton = True
%FLG: OkButtonPressed = 4
%FLG: CancelButtonPressed = 4

[SF.Seq[2].Main[120].TS.SData.Prototype.CenterPosition]
%COMMENT = "If True, the dialog is positioned in the center of the screen. (Default: True)"

[SF.Seq[2].Main[120].TS.SData.Prototype.XPosition]
%COMMENT = "Position of the dialog, X coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[120].TS.SData.Prototype.YPosition]
%COMMENT = "Position of the dialog, Y coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[120].TS.SData.Prototype.IsModal]
%COMMENT = "If True, the dialog is modal to UTP TEF or Sequence Editor. (Default: False)"

[SF.Seq[2].Main[120].TS.SData.Prototype.ShowOkButton]
%COMMENT = "Show OK button in the dialog. (Default: True)"

[SF.Seq[2].Main[120].TS.SData.Prototype.ShowCancelButton]
%COMMENT = "Show Cancel button in the dialog. (Default: False)"

[SF.Seq[2].Main[120].TS.SData.Prototype.DialogTimeout]
%COMMENT Line0001 = "Optional. Dialog timeout in seconds. If 0, the timeout is not used and the dialog is shown until operator press a button"
%COMMENT Line0002 = ". (Default: 0)"

[SF.Seq[2].Main[120].TS.SData.Prototype.OkButtonPressed]
%COMMENT = "Returns True, if OK button was pressed."

[SF.Seq[2].Main[120].TS.SData.Prototype.CancelButtonPressed]
%COMMENT = "Returns True, if Cancel button was pressed."

[DEF, SF.Seq[2].Main[120]]
%NAME = "Inform operator about ERROR"

[SF.Seq[2].Main[121].TS]
Id = "ID#:/APQcDiV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[121].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[121].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[121].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[121].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[2].Main[121].TS.SData.ActualArgs.TestSocket]
Expr = "0"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[121].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "StationGlobals.SequenceErrorDescriptions[RunState.TestSockets.MyIndex]"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[121].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[121].TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[2].Main[121].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[2].Main[121].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[2].Main[121].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[2].Main[121].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[121].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[2].Main[121].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[2].Main[121]]
%NAME = "Leave message on Test Socket about ERROR"

[SF.Seq[2].Main[122].TS]
Id = "ID#:/QPQcDiV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[122].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[2].Main[122].TS.SData.ViCall]
ProjectPath = "..\\..\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Station\\Add alarm to archive.vi"
TDChecksum = 607386436
%HI: Parms = [2]

[DEF, SF.Seq[2].Main[122].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"

[SF.Seq[2].Main[122].TS.SData.ViCall.Parms[0]]
Label = "Alarm messege"
ArgVal = "StationGlobals.SequenceErrorDescriptions[RunState.TestSockets.MyIndex]"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 11

[DEF, SF.Seq[2].Main[122].TS.SData.ViCall.Parms[0]]
%NAME = "Alarm messege"

[SF.Seq[2].Main[122].TS.SData.ViCall.Parms[1]]
Label = "error in"
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[2].Main[122].TS.SData.ViCall.Parms[1].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[2].Main[122].TS.SData.ViCall.Parms[1].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[2].Main[122].TS.SData.ViCall.Parms[1].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[2].Main[122].TS.SData.ViCall.Parms[1].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[2].Main[122].TS.SData.ViCall.Parms[1].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[2].Main[122].TS.SData.ViCall.Parms[1].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[2].Main[122].TS.SData.ViCall.Parms[1].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[2].Main[122].TS.SData.ViCall.Parms[1]]
%NAME = "error in"

[SF.Seq[2].Main[122].TS.SData.ViCall.Parms[2]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[2].Main[122].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[2].Main[122].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[2].Main[122].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[2].Main[122].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[2].Main[122].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[2].Main[122].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[2].Main[122].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[2].Main[122].TS.SData.ViCall.Parms[2]]
%NAME = "error out"

[DEF, SF.Seq[2].Main[122]]
%NAME = "Add alarm to archive //TODO"

[SF.Seq[2].Main[123].TS]
Id = "ID#:54mgRzmV8BGJ68yCf5KpWB"
PreCond = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] == Enums.SEQUENCE_STATE.ERROR"
Mode = "Skip"
PostExpr = "RunState.GotoCleanup = True"

[SF.Seq[2].Main[123]]
%COMMENT = "Skip Product Sequence in case of Acutator ERROR and Goto Cleanup"

[DEF, SF.Seq[2].Main[123]]
%NAME = "Model.TestSocket.SkipProductSequence"

[SF.Seq[2].Main[124].TS]
Id = "ID#:XjBQjtip8BGJ/cyCf5KpWB"
PostExpr = "RunState.GotoCleanup = True,\nFileGlobals.MainSequenceSkipped = True"

[SF.Seq[2].Main[124]]
%COMMENT = "Skip Product Sequence in case of Acutator ERROR and Goto Cleanup\nSet seq. is skipped"

[DEF, SF.Seq[2].Main[124]]
%NAME = "Model.TestSocket.SkipProductSequence"

[SF.Seq[2].Main[125].TS]
Id = "ID#:y1buYzaV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[126].TS]
Id = "ID#:zFbuYzaV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[127].TS]
Id = "ID#:zXzDIDaV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[127]]
%NAME = "Moved part"

[SF.Seq[2].Main[128].TS]
Id = "ID#:HxSX3DCV8BGJ68yCf5KpWB"

[SF.Seq[2].Main[128]]
ConditionExpr Line0001 = "(StationGlobals.Automation.DUT_DMC_CHMB1_DUT1.Code == \"ERROR\" && StationGlobals.Automation.DUT_DMC_CHMB1_DUT2.Code == "
ConditionExpr Line0002 = "\"ERROR\") && ((StationGlobals.Automation.DUTpresent_CHMB1_DUT1 == False) && (StationGlobals.Automation.DUTpresent_CHMB1"
ConditionExpr Line0003 = "_DUT2 == False)) // there are no DUTs"
%COMMENT = "Situation2: Both Test Sosckets are empty"

[DEF, SF.Seq[2].Main[128]]
%NAME = "Else If"

[SF.Seq[2].Main[129].TS]
Id = "ID#:bT1PNzaV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[129]]
%NAME = "If tehre are no devices in manual sequence just unlock device"

[SF.Seq[2].Main[130].TS]
Id = "ID#:8En6Uej47xG52tQli0T1uC"
PreCond = "Locals.DUT == \"DUT1\" // only one should have this message"

[DEF, SF.Seq[2].Main[130].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[130].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowPopupMessageDialog"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[130].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[130].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Title = "TYPE, SequenceArgument"
CenterPosition = "TYPE, SequenceArgument"
XPosition = "TYPE, SequenceArgument"
YPosition = "TYPE, SequenceArgument"
IsModal = "TYPE, SequenceArgument"
ShowOkButton = "TYPE, SequenceArgument"
ShowCancelButton = "TYPE, SequenceArgument"
DialogTimeout = "TYPE, SequenceArgument"
OkButtonPressed = "TYPE, SequenceArgument"
CancelButtonPressed = "TYPE, SequenceArgument"

[SF.Seq[2].Main[130].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"OPERATOR_DID_NOT_PLACED_ANY_DUT\")"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[130].TS.SData.ActualArgs.Title]
ParamType = 2
Flags = 0

[SF.Seq[2].Main[130].TS.SData.ActualArgs.CenterPosition]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[130].TS.SData.ActualArgs.XPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[130].TS.SData.ActualArgs.YPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[130].TS.SData.ActualArgs.IsModal]
ParamType = 16
Flags = 0

[SF.Seq[2].Main[130].TS.SData.ActualArgs.ShowOkButton]
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[130].TS.SData.ActualArgs.ShowCancelButton]
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[2].Main[130].TS.SData.ActualArgs.DialogTimeout]
Expr = "0"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[130].TS.SData.ActualArgs.OkButtonPressed]
ParamType = 16

[SF.Seq[2].Main[130].TS.SData.ActualArgs.CancelButtonPressed]
ParamType = 16

[DEF, SF.Seq[2].Main[130].TS.SData.Prototype]
Message = Str
Title = Str
CenterPosition = Bool
XPosition = Num
YPosition = Num
IsModal = Bool
ShowOkButton = Bool
ShowCancelButton = Bool
DialogTimeout = Num
OkButtonPressed = Bool
CancelButtonPressed = Bool

[SF.Seq[2].Main[130].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[130].TS.SData.Prototype.Title]
%COMMENT = "Dialog title. (Default: Empty)"

[SF.Seq[2].Main[130].TS.SData.Prototype]
CenterPosition = True
ShowOkButton = True
%FLG: OkButtonPressed = 4
%FLG: CancelButtonPressed = 4

[SF.Seq[2].Main[130].TS.SData.Prototype.CenterPosition]
%COMMENT = "If True, the dialog is positioned in the center of the screen. (Default: True)"

[SF.Seq[2].Main[130].TS.SData.Prototype.XPosition]
%COMMENT = "Position of the dialog, X coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[130].TS.SData.Prototype.YPosition]
%COMMENT = "Position of the dialog, Y coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[2].Main[130].TS.SData.Prototype.IsModal]
%COMMENT = "If True, the dialog is modal to UTP TEF or Sequence Editor. (Default: False)"

[SF.Seq[2].Main[130].TS.SData.Prototype.ShowOkButton]
%COMMENT = "Show OK button in the dialog. (Default: True)"

[SF.Seq[2].Main[130].TS.SData.Prototype.ShowCancelButton]
%COMMENT = "Show Cancel button in the dialog. (Default: False)"

[SF.Seq[2].Main[130].TS.SData.Prototype.DialogTimeout]
%COMMENT Line0001 = "Optional. Dialog timeout in seconds. If 0, the timeout is not used and the dialog is shown until operator press a button"
%COMMENT Line0002 = ". (Default: 0)"

[SF.Seq[2].Main[130].TS.SData.Prototype.OkButtonPressed]
%COMMENT = "Returns True, if OK button was pressed."

[SF.Seq[2].Main[130].TS.SData.Prototype.CancelButtonPressed]
%COMMENT = "Returns True, if Cancel button was pressed."

[DEF, SF.Seq[2].Main[130]]
%NAME = "Tell Operator that he didn't place any DUT inside the DRAWER"

[SF.Seq[2].Main[131].TS]
Id = "ID#:AhXSJzaV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Main[131]]
%NAME = "Moved part"

[SF.Seq[2].Main[132].TS]
Id = "ID#:0Mpmv+f57xG53NQli0T1uC"
CustExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] == Enums.SEQUENCE_STATE.ERROR"
CustTrueAct = "Goto"
CustTrueActTarget = "\"<Cleanup>\""

[DEF, SF.Seq[2].Main[132].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[132].TS.SData]
SeqName = "Lock Actuator PRE UUT"
UseCurFile = True

[DEF, SF.Seq[2].Main[132].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[2].Main[132].TS.SData.ActualArgs]
SelectedActuatorName = "TYPE, SequenceArgument"
SelectedTargetPosition = "TYPE, SequenceArgument"
LockName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[132].TS.SData.ActualArgs.SelectedActuatorName]
UseDef = False
Expr = "Locals.CHMB+\"_DRAWER_LOCKER\""
ParamType = 2

[SF.Seq[2].Main[132].TS.SData.ActualArgs.SelectedTargetPosition]
UseDef = False
Expr = "100 //Home Position 1"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[2].Main[132].TS.SData.ActualArgs.LockName]
UseDef = False
Expr = "Locals.CHMB+\"_DRAWER_LOCKER_PRE_UUT_REPEAT\""
ParamType = 2

[DEF, SF.Seq[2].Main[132]]
%NAME = "Unlock CHMB1 DRAWER "

[SF.Seq[2].Main[133].TS]
Id = "ID#:jIMiPeP47xG52tQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[134].TS]
Id = "ID#:UdNpsuP47xG52tQli0T1uC"
PreCond = "!Locals.SkipMessage"

[DEF, SF.Seq[2].Main[134].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[134].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[134].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[134].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[2].Main[134].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[134].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"OPEN_DRAWER_PLACE_AGAIN_DUT_AND_CLOSE_DRAWER\")"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[134].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[134].TS.SData.ActualArgs.FontSize]
UseDef = False
Expr = "40"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[2].Main[134].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[2].Main[134].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[2].Main[134].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[2].Main[134].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[2].Main[134].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[2].Main[134].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[2].Main[134]]
%NAME = "Tell operator to open the Drawer"

[SF.Seq[2].Main[135].TS]
Id = "ID#:s4ovI+P47xG52tQli0T1uC"

[DEF, SF.Seq[2].Main[135].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[135].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[2].Main[135].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[135].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[135].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.DrawerClosed"
ParamType = 16

[SF.Seq[2].Main[135].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_\"+Locals.CHMB+\"_DRAWER_SafetyOK\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[135].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[2].Main[135].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[2].Main[135]]
%NAME = "Read Status of the Drawer"

[SF.Seq[2].Main[136].TS]
Id = "ID#:tIovI+P47xG52tQli0T1uC"

[SF.Seq[2].Main[136]]
ConditionExpr = "Locals.Automated.DrawerClosed == True\n"
%COMMENT = "Wainting for the openning of the Drawer"

[DEF, SF.Seq[2].Main[136]]
%NAME = "While"

[SF.Seq[2].Main[137].TS]
Id = "ID#:tYovI+P47xG52tQli0T1uC"

[DEF, SF.Seq[2].Main[137].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[137].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[2].Main[137].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[137].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[137].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.DrawerClosed"
ParamType = 16

[SF.Seq[2].Main[137].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_\"+Locals.CHMB+\"_DRAWER_SafetyOK\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[137].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[2].Main[137].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[2].Main[137]]
%NAME = "Read Status of the Drawer"

[SF.Seq[2].Main[138].TS]
Id = "ID#:toovI+P47xG52tQli0T1uC"

[DEF, SF.Seq[2].Main[138]]
%NAME = "End"

[SF.Seq[2].Main[139].TS]
Id = "ID#:r8K+S+T47xG52tQli0T1uC"
CustTrueActTarget = "\"ID#:zmZ4weD17xG519Qli0T1uC\""

[DEF, SF.Seq[2].Main[139]]
%NAME = "Goto repeat procedure again"

[SF.Seq[2].Main[140].TS]
Id = "ID#:0kTSDkP47xG52NQli0T1uC"

[SF.Seq[2].Main[140]]
ConditionExpr Line0001 = "(Locals.Automated.DUT_DMC.Code == \"ERROR\") && (Locals.Automated.DUTpresent == False) // && (Locals.Automated.Robot.Par"
ConditionExpr Line0002 = "tPlaced== False)"
%COMMENT = "In case that Operator didn't insert DUT inside specific nest => Skip testing for that specific Socket"

[DEF, SF.Seq[2].Main[140]]
%NAME = "Else If"

[SF.Seq[2].Main[141].TS]
Id = "ID#:7l0hfOb47xG52tQli0T1uC"

[DEF, SF.Seq[2].Main[141].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[141].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.SetIcon"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[141].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[141].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
IconPath = "TYPE, SequenceArgument"

[SF.Seq[2].Main[141].TS.SData.ActualArgs.TestSocket]
Expr = "Locals.TestSocket"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[141].TS.SData.ActualArgs.IconPath]
UseDef = False
Expr = "\"Inactive.ico\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[141].TS.SData.Prototype]
TestSocket = Num
Caption = Str

[SF.Seq[2].Main[141].TS.SData.Prototype]
TestSocket = Nan

[DEF, SF.Seq[2].Main[141]]
%NAME = "UI.TestSocket.SetIcon: Socket Inactive"

[SF.Seq[2].Main[142].TS]
Id = "ID#:CcC4UOb47xG52tQli0T1uC"

[DEF, SF.Seq[2].Main[142].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[142].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.SetCaption"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[142].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[142].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Caption = "TYPE, SequenceArgument"

[SF.Seq[2].Main[142].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[142].TS.SData.ActualArgs.Caption]
UseDef = False
Expr Line0001 = "Locals.TestSocketName + (Locals.TestSocketName != \"\" && Locals.SerialNumber != \"\"? \" - \" : \"\") + (Locals.SerialN"
Expr Line0002 = "umber != \"\"? \"SN: \" + Locals.SerialNumber : \"\")"
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[142].TS.SData.Prototype]
TestSocket = Num
Caption = Str

[SF.Seq[2].Main[142].TS.SData.Prototype]
TestSocket = Nan

[DEF, SF.Seq[2].Main[142]]
%NAME = "UI.TestSocket.SetCaption: Socket Name + Serial Number"

[SF.Seq[2].Main[143].TS]
Id = "ID#:opYFDOb47xG52tQli0T1uC"

[DEF, SF.Seq[2].Main[143].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[143].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[143].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[143].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[2].Main[143].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[143].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"NO_DUT_ON_SOCKET\")"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[143].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[143].TS.SData.ActualArgs.FontSize]
Expr = "40"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[2].Main[143].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[2].Main[143].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[2].Main[143].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[2].Main[143]]
%NAME = "Leave message on Test Socket that Testing is Skipped - NO DUT"

[SF.Seq[2].Main[144].TS]
Id = "ID#:w4Wr1+X47xG52tQli0T1uC"
PostExpr = "RunState.GotoCleanup = True,\nFileGlobals.MainSequenceSkipped = True"

[SF.Seq[2].Main[144]]
%COMMENT = "Skip Product Sequence in case of Acutator ERROR and Goto Cleanup\nSet seq. is skipped"

[DEF, SF.Seq[2].Main[144]]
%NAME = "Model.TestSocket.SkipProductSequence"

[SF.Seq[2].Main[145].TS]
Id = "ID#:dNIQJEX47xG52NQli0T1uC"

[SF.Seq[2].Main[145]]
ConditionExpr Line0001 = "(Locals.Automated.DUT_DMC.Code != \"ERROR\" && Locals.Automated.DUTpresent == True) || (Locals.Automated.DUT_DMC.Code =="
ConditionExpr Line0002 = " \"ERROR\" && Locals.Automated.DUTpresent == True) // if there is bad code fail in main"
%COMMENT = "In case that Operator place DUT correctly, Scanner don't have ERROR and DUT present sensor is TRUE => Continue"

[DEF, SF.Seq[2].Main[145]]
%NAME = "Else If"

[SF.Seq[2].Main[146].TS]
Id = "ID#:cgBmm8oP8BG4hFB7nf4f8B"

[DEF, SF.Seq[2].Main[146].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[146].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.SetSerialNumber"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[146].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[146].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
SerialNumber = "TYPE, SequenceArgument"

[SF.Seq[2].Main[146].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[146].TS.SData.ActualArgs.SerialNumber]
UseDef = False
Expr = "Locals.SerialNumber"
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[146].TS.SData.Prototype]
TestSocket = Num
SerialNumber = Str

[SF.Seq[2].Main[146].TS.SData.Prototype]
TestSocket = Nan

[SF.Seq[2].Main[146]]
%COMMENT = "Set Serial number for TestSocket"

[DEF, SF.Seq[2].Main[146]]
%NAME = "Model.TestSocket.SetSerialNumber"

[SF.Seq[2].Main[147].TS]
Id = "ID#:BHsJswb57xG52tQli0T1uC"

[DEF, SF.Seq[2].Main[147].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[147].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.SetCaption"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[147].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[147].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Caption = "TYPE, SequenceArgument"

[SF.Seq[2].Main[147].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[147].TS.SData.ActualArgs.Caption]
UseDef = False
Expr Line0001 = "Locals.TestSocketName + (Locals.TestSocketName != \"\" && Locals.SerialNumber != \"\"? \" - \" : \"\") + (Locals.SerialN"
Expr Line0002 = "umber != \"\"? \"SN: \" + Locals.SerialNumber : \"\")"
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[147].TS.SData.Prototype]
TestSocket = Num
Caption = Str

[SF.Seq[2].Main[147].TS.SData.Prototype]
TestSocket = Nan

[DEF, SF.Seq[2].Main[147]]
%NAME = "UI.TestSocket.SetCaption: Socket Name + Serial Number"

[SF.Seq[2].Main[148].TS]
Id = "ID#:xiPokHrIQESoPtyHaeAvdA"

[DEF, SF.Seq[2].Main[148].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[148].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.SetIcon"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[148].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[148].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
IconPath = "TYPE, SequenceArgument"

[SF.Seq[2].Main[148].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[148].TS.SData.ActualArgs.IconPath]
UseDef = False
Expr = "\"Active.ico\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[148].TS.SData.Prototype]
TestSocket = Num
Caption = Str

[SF.Seq[2].Main[148].TS.SData.Prototype]
TestSocket = Nan

[DEF, SF.Seq[2].Main[148]]
%NAME = "UI.TestSocket.SetIcon: Socket Active"

[SF.Seq[2].Main[149].TS]
Id = "ID#:MR2i3etgHkyozGyiVAthID"

[DEF, SF.Seq[2].Main[149].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[149].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[149].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[149].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[2].Main[149].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[149].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"UI_MESSAGES\", \"TESTING_IN_PROGRESS\")"
ParamType = 2
Flags = 0

[SF.Seq[2].Main[149].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[149].TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[2].Main[149].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[2].Main[149].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[2].Main[149].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[2].Main[149]]
%NAME = "UI.TestSocket.ShowMessage: \"Testing in progress\""

[SF.Seq[2].Main[150].TS]
Id = "ID#:803S8+j47xG52tQli0T1uC"
PostExpr = "StationGlobals.Automation.NumberOfDUTsCHMB1++,\nFileGlobals.MainSequenceSkipped = False"

[DEF, SF.Seq[2].Main[150]]
%NAME = "Increase Number of DUTs value and set sequence is not skipped"

[SF.Seq[2].Main[151].TS]
Id = "ID#:z0CB2kD47xG52NQli0T1uC"

[DEF, SF.Seq[2].Main[151]]
%NAME = "End"

[SF.Seq[2].Main[152].TS]
Id = "ID#:cHb1FCk28BGtkcyCf35SiD"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[153].TS]
Id = "ID#:MVG8gr4A8BG4d1B7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[154].TS]
Id = "ID#:+hztIej57xG53NQli0T1uC"
CustExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] == Enums.SEQUENCE_STATE.ERROR"
CustTrueAct = "Goto"
CustTrueActTarget = "\"<Cleanup>\""

[DEF, SF.Seq[2].Main[154].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[154].TS.SData]
SeqName = "Lock Actuator PRE UUT"
UseCurFile = True

[DEF, SF.Seq[2].Main[154].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[2].Main[154].TS.SData.ActualArgs]
SelectedActuatorName = "TYPE, SequenceArgument"
SelectedTargetPosition = "TYPE, SequenceArgument"
LockName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[154].TS.SData.ActualArgs.SelectedActuatorName]
UseDef = False
Expr = "Locals.CHMB+\"_TOP_PLATE_AUTO\""
ParamType = 2

[SF.Seq[2].Main[154].TS.SData.ActualArgs.SelectedTargetPosition]
UseDef = False
Expr = "101 //Work Position 1"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[2].Main[154].TS.SData.ActualArgs.LockName]
UseDef = False
Expr = "Locals.CHMB+\"_TOP_PLATE_AUTO_PRE_UUT\""
ParamType = 2

[DEF, SF.Seq[2].Main[154]]
%NAME = "Lower  CHMB1 TOP PLATE"

[SF.Seq[2].Main[155].TS]
Id = "ID#:VE3IH6I08BGtjcyCf35SiD"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[2].Main[155].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[2].Main[155].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[2].Main[155]]
SeqCallName = "End"
TimeExpr = "0.2"

[DEF, SF.Seq[2].Main[155]]
%NAME = "Wait"

[SF.Seq[2].Main[156].TS]
Id = "ID#:294ldKE08BGtjcyCf35SiD"

[DEF, SF.Seq[2].Main[156].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[156].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[2].Main[156].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[156].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[156].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.CHMB1_DUT_NEST_Present"
ParamType = 16

[SF.Seq[2].Main[156].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_\"+Locals.CHMB+\"_DUT_NEST_Present\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Main[156].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[2].Main[156].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[2].Main[156]]
%NAME = "Top Plate Present"

[SF.Seq[2].Main[157].TS]
Id = "ID#:AEOdAaI08BGtjcyCf35SiD"

[SF.Seq[2].Main[157]]
ConditionExpr = "!Locals.Automated.CHMB1_DUT_NEST_Present"
%COMMENT = "Top plate not present"

[DEF, SF.Seq[2].Main[157]]
%NAME = "If"

[SF.Seq[2].Main[158].TS]
Id = "ID#:DvywNaI08BGtjcyCf35SiD"

[DEF, SF.Seq[2].Main[158].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[158].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Main[158].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Main[158].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[2].Main[158].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[158].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "\"TOP PLATE MISSING\""
ParamType = 2
Flags = 0

[SF.Seq[2].Main[158].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Main[158].TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[2].Main[158].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[2].Main[158].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[2].Main[158].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[SF.Seq[2].Main[158]]
%COMMENT = "ADD MESSAGE"

[DEF, SF.Seq[2].Main[158]]
%NAME = "UI.TestSocket.ShowMessage: \"Testing in progress\""

[SF.Seq[2].Main[159].TS]
Id = "ID#:/0KdAaI08BGtjcyCf35SiD"
CustExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] == Enums.SEQUENCE_STATE.ERROR"
CustTrueAct = "Goto"
CustTrueActTarget = "\"<Cleanup>\""

[DEF, SF.Seq[2].Main[159].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Main[159].TS.SData]
SeqName = "Lock Actuator POST UUT"
UseCurFile = True

[DEF, SF.Seq[2].Main[159].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[2].Main[159].TS.SData.ActualArgs]
SelectedActuatorName = "TYPE, SequenceArgument"
SelectedTargetPosition = "TYPE, SequenceArgument"
LockName = "TYPE, SequenceArgument"

[SF.Seq[2].Main[159].TS.SData.ActualArgs.SelectedActuatorName]
UseDef = False
Expr = "Locals.CHMB+\"_TOP_PLATE_AUTO\""
ParamType = 2

[SF.Seq[2].Main[159].TS.SData.ActualArgs.SelectedTargetPosition]
UseDef = False
Expr = "100 //Home Position"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[2].Main[159].TS.SData.ActualArgs.LockName]
UseDef = False
Expr = "Locals.CHMB+\"_TOP_PLATE_POST_UUT\""
ParamType = 2

[DEF, SF.Seq[2].Main[159]]
%NAME = "Lift  CHMB1 TOP PLATE"

[SF.Seq[2].Main[160].TS]
Id = "ID#:RzK5LKI08BGtjcyCf35SiD"
CustTrueActTarget = "\"ID#:0Mpmv+f57xG53NQli0T1uC\""

[SF.Seq[2].Main[160]]
%COMMENT = "Go to Unlock"

[DEF, SF.Seq[2].Main[160]]
%NAME = "Goto"

[SF.Seq[2].Main[161].TS]
Id = "ID#:GJvpB6I08BGtjcyCf35SiD"

[SF.Seq[2].Main[161]]
%COMMENT = "Top plate not present"

[DEF, SF.Seq[2].Main[161]]
%NAME = "End"

[SF.Seq[2].Main[162].TS]
Id = "ID#:8yubrer47xG52tQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Main[163].TS]
Id = "ID#:nRwGBf7t7xG4Y1B7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[DEF, SF.Seq[2].Setup]
%[0] = Step
%TYPE: %[0] = "NoffzUTP_TEF_Model_TestSocket_GetTestSocketName"
%[1] = Step
%TYPE: %[1] = "SequenceCall"
%[2] = Step
%TYPE: %[2] = "Label"
%[3] = Step
%TYPE: %[3] = "Label"
%[4] = Step
%TYPE: %[4] = "NoffzUTP_TEF_Model_TestSocket_GetTestSocketName"
%[5] = Step
%TYPE: %[5] = "Action"
%[6] = Step
%TYPE: %[6] = "Label"
%[7] = Step
%TYPE: %[7] = "Label"
%[8] = Step
%TYPE: %[8] = "NoffzUTP_TEF_Model_TestSocket_GetTestSocketName"
%[9] = Step
%TYPE: %[9] = "NoffzUTP_TEF_UI_TestSocket_SetIcon"
%[10] = Step
%TYPE: %[10] = "NoffzUTP_TEF_UI_TestSocket_SetCaption"
%[11] = Step
%TYPE: %[11] = "Label"
%[12] = Step
%TYPE: %[12] = "Statement"
%[13] = Step
%TYPE: %[13] = "Statement"
%[14] = Step
%TYPE: %[14] = "SequenceCall"
%[15] = Step
%TYPE: %[15] = "NoffzUTP_IOPLCVariableI16Read"

[SF.Seq[2].Setup[0].TS]
Id = "ID#:SuC3VNSS8BGJ58yCf5KpWB"
PostExpr = "Locals.CHMB = Left(Locals.TestSocketName,5),\nLocals.DUT = Right(Locals.TestSocketName, 4)"

[DEF, SF.Seq[2].Setup[0].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Setup[0].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetTestSocketName"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Setup[0].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Setup[0].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
TestSocketName = "TYPE, SequenceArgument"

[SF.Seq[2].Setup[0].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Setup[0].TS.SData.ActualArgs.TestSocketName]
UseDef = False
Expr = "Locals.TestSocketName"
ParamType = 2

[DEF, SF.Seq[2].Setup[0].TS.SData.Prototype]
TestSocket = Num
TestSocketName = Str

[SF.Seq[2].Setup[0].TS.SData.Prototype]
TestSocket = Nan
%FLG: TestSocketName = 4

[SF.Seq[2].Setup[0].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number."

[SF.Seq[2].Setup[0].TS.SData.Prototype.TestSocketName]
%COMMENT = "Test Socket name."

[DEF, SF.Seq[2].Setup[0]]
%NAME = "Get Test Socket Name"

[SF.Seq[2].Setup[1].TS]
Id = "ID#:Gde4s3X67xG53dQli0T1uC"

[DEF, SF.Seq[2].Setup[1].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Setup[1].TS.SData]
SeqName = "Pre Batch - ADDED"
UseCurFile = True

[DEF, SF.Seq[2].Setup[1].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[2].Setup[1].TS.SData.ActualArgs]
CHMB = "TYPE, SequenceArgument"
DUT = "TYPE, SequenceArgument"

[SF.Seq[2].Setup[1].TS.SData.ActualArgs.CHMB]
UseDef = False
Expr = "Locals.CHMB"
ParamType = 2

[SF.Seq[2].Setup[1].TS.SData.ActualArgs.DUT]
UseDef = False
Expr = "Locals.DUT"
ParamType = 2

[DEF, SF.Seq[2].Setup[1]]
%NAME = "PRE BATCH"

[SF.Seq[2].Setup[2].TS]
Id = "ID#:NwPMaL4A8BG4d1B7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Setup]
%FLG: %[2] = 67108864
%FLG: %[6] = 67108864
%FLG: %[11] = 67108864

[SF.Seq[2].Setup[3].TS]
Id = "ID#:vefWb74A8BG4d1B7nf4f8B"

[DEF, SF.Seq[2].Setup[3]]
%NAME = "Enable product selection for changing variants"

[SF.Seq[2].Setup[4].TS]
Id = "ID#:CMSmfhoV8BG4iVB7nf4f8B"
PostExpr = "Locals.CHMB = Left(Locals.TestSocketName,5),\nLocals.DUT = Right(Locals.TestSocketName, 4)"

[DEF, SF.Seq[2].Setup[4].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Setup[4].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetTestSocketName"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Setup[4].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Setup[4].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
TestSocketName = "TYPE, SequenceArgument"

[SF.Seq[2].Setup[4].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Setup[4].TS.SData.ActualArgs.TestSocketName]
UseDef = False
Expr = "Locals.TestSocketName"
ParamType = 2

[DEF, SF.Seq[2].Setup[4].TS.SData.Prototype]
TestSocket = Num
TestSocketName = Str

[SF.Seq[2].Setup[4].TS.SData.Prototype]
TestSocket = Nan
%FLG: TestSocketName = 4

[SF.Seq[2].Setup[4].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number."

[SF.Seq[2].Setup[4].TS.SData.Prototype.TestSocketName]
%COMMENT = "Test Socket name."

[DEF, SF.Seq[2].Setup[4]]
%NAME = "Get Test Socket Name"

[SF.Seq[2].Setup[5].TS]
Id = "ID#:vgTl1C2S8BGJ5cyCf5KpWB"

[DEF, SF.Seq[2].Setup[5].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[2].Setup[5].TS.SData.ViCall]
ProjectPath = "..\\..\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Sequence SubVIs\\Read Sequence parameters.vi"
TDChecksum = 1198540596
%HI: Parms = [7]

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"
%[6] = "TYPE, VIParameter"
%[7] = "TYPE, VIParameter"

[SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[0]]
Label = "Software_ID"
ArgVal = "StationGlobals.Testing.Parameters.Software_ID"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 20

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[0]]
%NAME = "Software_ID"

[SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[1]]
Label = "Software_Version"
ArgVal = "StationGlobals.Testing.Parameters.Software_Version"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 21

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[1]]
%NAME = "Software_Version"

[SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[2]]
Label = "Bootloader_ID"
ArgVal = "StationGlobals.Testing.Parameters.Bootloader_ID"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 22

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[2]]
%NAME = "Bootloader_ID"

[SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[3]]
Label = "Bootloader_Version"
ArgVal = "StationGlobals.Testing.Parameters.Bootloader_Version"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 23

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[3]]
%NAME = "Bootloader_Version"

[SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[4]]
Label = "Calibration_Release_Number_0"
ArgVal = "StationGlobals.Testing.Parameters.Calibration_Number_0"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 24

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[4]]
%NAME = "Calibration_Release_Number_0"

[SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[5]]
Label = "Calibration_Release_Number_1"
ArgVal = "StationGlobals.Testing.Parameters.Calibration_Number_1"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 25

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[5]]
%NAME = "Calibration_Release_Number_1"

[SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[6]]
Label = "Calibration_Release_Number_2"
ArgVal = "StationGlobals.Testing.Parameters.Calibration_Number_2"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 26

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[6]]
%NAME = "Calibration_Release_Number_2"

[SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[7]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 27
LegacyClusterType = 2

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[7].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[7].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[7].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[7].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[7].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[7].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[7].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[2].Setup[5].TS.SData.ViCall.Parms[7]]
%NAME = "error out"

[DEF, SF.Seq[2].Setup[5]]
%NAME = "Read testing parameters"

[SF.Seq[2].Setup[6].TS]
Id = "ID#:GNe4s3X67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Setup[7].TS]
Id = "ID#:mYaW6Nb17xG519Qli0T1uC"

[DEF, SF.Seq[2].Setup[7]]
%NAME = "Clear Display for the next run"

[SF.Seq[2].Setup[8].TS]
Id = "ID#:moaW6Nb17xG519Qli0T1uC"
PostExpr = "Locals.CHMB = Left(Locals.TestSocketName,5)"

[DEF, SF.Seq[2].Setup[8].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Setup[8].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetTestSocketName"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Setup[8].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Setup[8].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
TestSocketName = "TYPE, SequenceArgument"

[SF.Seq[2].Setup[8].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Setup[8].TS.SData.ActualArgs.TestSocketName]
UseDef = False
Expr = "Locals.TestSocketName"
ParamType = 2

[DEF, SF.Seq[2].Setup[8].TS.SData.Prototype]
TestSocket = Num
TestSocketName = Str

[SF.Seq[2].Setup[8].TS.SData.Prototype]
TestSocket = Nan
%FLG: TestSocketName = 4

[SF.Seq[2].Setup[8].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number."

[SF.Seq[2].Setup[8].TS.SData.Prototype.TestSocketName]
%COMMENT = "Test Socket name."

[DEF, SF.Seq[2].Setup[8]]
%NAME = "Model.TestSocket.GetTestSocketName"

[SF.Seq[2].Setup[9].TS]
Id = "ID#:m4aW6Nb17xG519Qli0T1uC"

[DEF, SF.Seq[2].Setup[9].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Setup[9].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.SetIcon"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Setup[9].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Setup[9].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
IconPath = "TYPE, SequenceArgument"

[SF.Seq[2].Setup[9].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Setup[9].TS.SData.ActualArgs.IconPath]
UseDef = False
Expr = "\"Inactive.ico\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Setup[9].TS.SData.Prototype]
TestSocket = Num
Caption = Str

[SF.Seq[2].Setup[9].TS.SData.Prototype]
TestSocket = Nan

[DEF, SF.Seq[2].Setup[9]]
%NAME = "UI.TestSocket.SetIcon: Socket Inactive"

[SF.Seq[2].Setup[10].TS]
Id = "ID#:nIaW6Nb17xG519Qli0T1uC"

[DEF, SF.Seq[2].Setup[10].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Setup[10].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.SetCaption"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[2].Setup[10].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Setup[10].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Caption = "TYPE, SequenceArgument"

[SF.Seq[2].Setup[10].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Setup[10].TS.SData.ActualArgs.Caption]
UseDef = False
Expr Line0001 = "Locals.TestSocketName + (Locals.TestSocketName != \"\" && Locals.SerialNumber != \"\"? \" - \" : \"\") + (Locals.SerialN"
Expr Line0002 = "umber != \"\"? \"SN: \" + Locals.SerialNumber : \"\")"
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Setup[10].TS.SData.Prototype]
TestSocket = Num
Caption = Str

[SF.Seq[2].Setup[10].TS.SData.Prototype]
TestSocket = Nan

[DEF, SF.Seq[2].Setup[10]]
%NAME = "UI.TestSocket.SetCaption: Socket Name + Serial Number"

[SF.Seq[2].Setup[11].TS]
Id = "ID#:HjVKW/2O8BGJ3syCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[2].Setup[12].TS]
Id = "ID#:m0+ePmI18BGtj8yCf35SiD"
PostExpr = "StationGlobals.Automation.NumberOfDUTsCHMB1 = 0,\nFileGlobals.MainSequenceSkipped = False"

[DEF, SF.Seq[2].Setup[12]]
%NAME = "Reset Number of DUTs and Main skip"

[SF.Seq[2].Setup[13].TS]
Id = "ID#:noaW6Nb17xG519Qli0T1uC"
PostExpr = "FileGlobals.SequenceFinished = False"

[DEF, SF.Seq[2].Setup[13]]
%NAME = "Send the signal that Parallel sequence needs to start"

[SF.Seq[2].Setup[14].TS]
Id = "ID#:n4aW6Nb17xG519Qli0T1uC"

[DEF, SF.Seq[2].Setup[14].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Setup[14].TS.SData]
SeqName = "Checking of the operating mode"
UseCurFile = True
ThreadOpt = 1

[DEF, SF.Seq[2].Setup[14].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[2].Setup[14].TS.SData.ActualArgs]
Msg = "TYPE, SequenceArgument"

[SF.Seq[2].Setup[14].TS.SData.ActualArgs.Msg]
UseDef = False
Expr = "\"\""
ParamType = 2

[DEF, SF.Seq[2].Setup[14]]
%NAME = "Start Operation mode monitornig in Parallel Thread"

[SF.Seq[2].Setup[15].TS]
Id = "ID#:6E2xq4s88BGtmcyCf35SiD"

[DEF, SF.Seq[2].Setup[15].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Setup[15].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.I16.Write"
Trace = "Off"

[DEF, SF.Seq[2].Setup[15].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Setup[15].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Setup[15].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "5"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[2].Setup[15].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"SYSTEM_MOSI.Lamps\"+Locals.CHMB"
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Setup[15].TS.SData.Prototype]
VariableValue = Num
VariableName = Str

[DEF, SF.Seq[2].Setup[15]]
%NAME = "Yellow Blink"

[DEF, SF.Seq[2].Cleanup]
%[0] = Step
%TYPE: %[0] = "Statement"
%[1] = Step
%TYPE: %[1] = "Label"
%[2] = Step
%TYPE: %[2] = "NoffzUTP_IOPLCVariableBooleanWrite"

[SF.Seq[2].Cleanup[0].TS]
Id = "ID#:ZljGyzj77xG53tQli0T1uC"
PostExpr = "FileGlobals.SequenceFinished = True"

[DEF, SF.Seq[2].Cleanup[0]]
%NAME = "Send the signal that Parallel sequence needs to finish"

[SF.Seq[2].Cleanup[1].TS]
Id = "ID#:m7HEpTyV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Cleanup[1]]
%NAME = "Clear Ready Signal for Robotin case something wrong appeared in the maintime"

[SF.Seq[2].Cleanup[2].TS]
Id = "ID#:nLHEpTyV8BGJ68yCf5KpWB"

[DEF, SF.Seq[2].Cleanup[2].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[2].Cleanup[2].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[2].Cleanup[2].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[2].Cleanup[2].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[2].Cleanup[2].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[2].Cleanup[2].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Ready\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[2].Cleanup[2].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[2].Cleanup[2]]
%NAME = "Set Ready Signal to False"

[DEF, SF.Seq[2].RTS]
Type = Num
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
CopyStepsOnOverriding = Bool
OptimizeNonReentrantCalls = Bool
Priority = Num
ShowEPAlways = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool

[SF.Seq[2].RTS]
%FLG: Type = 4194304
%FLG: EPNameExpr = 4194304
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: CopyStepsOnOverriding = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
Priority = 2953567917
%FLG: Priority = 4194304
%FLG: ShowEPAlways = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304

[DEF, SF.Seq[2].Requirements]
Links = Strs

[SF.Seq[2].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[3]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
StoreResults = Bool
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Post UUT"

[DEF, SF.Seq[3].Parameters]
UUTStatus = Str
MainSequenceResult = Ref

[SF.Seq[3]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [79]
%FLG: Main = 4194304
%HI: Setup = [4]
%FLG: Setup = 4194304
%HI: Cleanup = [5]
%FLG: Cleanup = 4194304
StoreResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312
%COMMENT Line0001 = "This entry point is executed everytime tests on the Test Socket are completed. Put here the code for post-test operation"
%COMMENT Line0002 = "s like disconnecting power from UUT, printing a label, displaying test result, generating test report."

[DEF, SF.Seq[3].Locals]
ResultList = Objs
OperationMode = Str
Product = Str
Variant = Str
SerialNumber = Str
TestSocketName = Str
FailureSetToWrite = Str
AcquireTesting = "TYPE, AquireTesting"
Automated = Obj
Report = Obj
CHMB = Str
MES = Obj
MESok = Bool
ErrorInResponse = Bool
DUT = Str

[DEF, SF.Seq[3].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[3].Locals]
%FLG: AcquireTesting = 4

[DEF, SF.Seq[3].Locals.Automated]
ACK_Button = Bool
DrawerClosed = Bool
CHMB1_DRAWER_LOCKER_Error = Bool
CHMB1_DRAWER_LOCKER_ErrorCode = Num
CHMB1_DRAWER_LOCKER_ErrorText = Str
CHMB1_DRAWER_LOCKER_Result = Num
CHMB1_TOP_PLATE_Error = Bool
CHMB1_TOP_PLATE_ErrorCode = Num
CHMB1_TOP_PLATE_ErrorText = Str
CHMB1_TOP_PLATE_Result = Num
NOK_Box_HP = Bool

[DEF, SF.Seq[3].Locals.Report]
FailureSet = Strs
ResultPrint = Strs
SetpointPrint = Strs
Tx = Strs
Rx = Strs
Report = Obj

[SF.Seq[3].Locals.Report]
%FLG: FailureSet = 4
%FLG: ResultPrint = 4
%FLG: SetpointPrint = 4
%FLG: Tx = 4
%FLG: Rx = 4
%FLG: Report = 4

[DEF, SF.Seq[3].Locals.Report.Report]
TestNames = Strs
Statuses = Strs

[SF.Seq[3].Locals.Report.Report]
%HI: TestNames = [200]
%FLG: TestNames = 4
%HI: Statuses = [200]
%FLG: Statuses = 4

[DEF, SF.Seq[3].Locals.MES]
result = Obj
Response = Str
Errortext = Str
Status = Str

[DEF, SF.Seq[3].Locals.MES.result]
res = Str
info = Str

[DEF, SF.Seq[3].Main]
%[0] = Step
%TYPE: %[0] = "NI_Flow_If"
%[1] = Step
%TYPE: %[1] = "NI_Rendezvous"
%[2] = Step
%TYPE: %[2] = "NI_Rendezvous"
%[3] = Step
%TYPE: %[3] = "Label"
%[4] = Step
%TYPE: %[4] = "NoffzUTP_TEF_Model_TestSocket_GetSerialNumber"
%[5] = Step
%TYPE: %[5] = "SequenceCall"
%[6] = Step
%TYPE: %[6] = "Action"
%[7] = Step
%TYPE: %[7] = "Action"
%[8] = Step
%TYPE: %[8] = "Label"
%[9] = Step
%TYPE: %[9] = "Label"
%[10] = Step
%TYPE: %[10] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[11] = Step
%TYPE: %[11] = "Label"
%[12] = Step
%TYPE: %[12] = "SequenceCall"
%[13] = Step
%TYPE: %[13] = "Label"
%[14] = Step
%TYPE: %[14] = "NI_Flow_Select"
%[15] = Step
%TYPE: %[15] = "NI_Flow_Case"
%[16] = Step
%TYPE: %[16] = "Statement"
%[17] = Step
%TYPE: %[17] = "NI_Flow_End"
%[18] = Step
%TYPE: %[18] = "NI_Flow_Case"
%[19] = Step
%TYPE: %[19] = "Statement"
%[20] = Step
%TYPE: %[20] = "NI_Flow_End"
%[21] = Step
%TYPE: %[21] = "NI_Flow_End"
%[22] = Step
%TYPE: %[22] = "Label"
%[23] = Step
%TYPE: %[23] = "Label"
%[24] = Step
%TYPE: %[24] = "NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue"
%[25] = Step
%TYPE: %[25] = "NoffzUTP_TEF_UI_TestSocket_SetIcon"
%[26] = Step
%TYPE: %[26] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[27] = Step
%TYPE: %[27] = "NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant"
%[28] = Step
%TYPE: %[28] = "NoffzUTP_TEF_Model_TestSocket_GetSerialNumber"
%[29] = Step
%TYPE: %[29] = "NoffzUTP_TEF_UI_TestSocket_Statistic_Update"
%[30] = Step
%TYPE: %[30] = "NoffzUTP_TEF_UI_Station_Statistic_Update"
%[31] = Step
%TYPE: %[31] = "Label"
%[32] = Step
%TYPE: %[32] = "NI_Rendezvous"
%[33] = Step
%TYPE: %[33] = "NI_Rendezvous"
%[34] = Step
%TYPE: %[34] = "NI_Flow_If"
%[35] = Step
%TYPE: %[35] = "Statement"
%[36] = Step
%TYPE: %[36] = "NI_Flow_ElseIf"
%[37] = Step
%TYPE: %[37] = "NoffzUTP_IOPLCVariableI16Read"
%[38] = Step
%TYPE: %[38] = "Label"
%[39] = Step
%TYPE: %[39] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[40] = Step
%TYPE: %[40] = "Statement"
%[41] = Step
%TYPE: %[41] = "NI_Flow_If"
%[42] = Step
%TYPE: %[42] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[43] = Step
%TYPE: %[43] = "Statement"
%[44] = Step
%TYPE: %[44] = "NI_Flow_End"
%[45] = Step
%TYPE: %[45] = "NI_Flow_ElseIf"
%[46] = Step
%TYPE: %[46] = "NoffzUTP_IOPLCVariableI16Read"
%[47] = Step
%TYPE: %[47] = "Statement"
%[48] = Step
%TYPE: %[48] = "SequenceCall"
%[49] = Step
%TYPE: %[49] = "Label"
%[50] = Step
%TYPE: %[50] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[51] = Step
%TYPE: %[51] = "Label"
%[52] = Step
%TYPE: %[52] = "NI_Flow_End"
%[53] = Step
%TYPE: %[53] = "Label"
%[54] = Step
%TYPE: %[54] = "NI_Flow_If"
%[55] = Step
%TYPE: %[55] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[56] = Step
%TYPE: %[56] = "NoffzUTP_IOPLCVariableBooleanRead"
%[57] = Step
%TYPE: %[57] = "NI_Flow_While"
%[58] = Step
%TYPE: %[58] = "NI_Wait"
%[59] = Step
%TYPE: %[59] = "NoffzUTP_IOPLCVariableBooleanRead"
%[60] = Step
%TYPE: %[60] = "NI_Flow_End"
%[61] = Step
%TYPE: %[61] = "NI_Flow_End"
%[62] = Step
%TYPE: %[62] = "NI_Wait"
%[63] = Step
%TYPE: %[63] = "Label"
%[64] = Step
%TYPE: %[64] = "SequenceCall"
%[65] = Step
%TYPE: %[65] = "NI_Rendezvous"
%[66] = Step
%TYPE: %[66] = "NI_Rendezvous"
%[67] = Step
%TYPE: %[67] = "NI_Wait"
%[68] = Step
%TYPE: %[68] = "SequenceCall"
%[69] = Step
%TYPE: %[69] = "Label"
%[70] = Step
%TYPE: %[70] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[71] = Step
%TYPE: %[71] = "NoffzUTP_IOPLCVariableBooleanRead"
%[72] = Step
%TYPE: %[72] = "NI_Flow_While"
%[73] = Step
%TYPE: %[73] = "NoffzUTP_IOPLCVariableBooleanRead"
%[74] = Step
%TYPE: %[74] = "NI_Flow_End"
%[75] = Step
%TYPE: %[75] = "Label"
%[76] = Step
%TYPE: %[76] = "Label"
%[77] = Step
%TYPE: %[77] = "NI_Flow_Else"
%[78] = Step
%TYPE: %[78] = "Label"
%[79] = Step
%TYPE: %[79] = "NI_Flow_End"

[SF.Seq[3].Main[0].TS]
Id = "ID#:b1Mprwn57xG52tQli0T1uC"

[SF.Seq[3].Main[0]]
ConditionExpr Line0001 = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] != Enums.SEQUENCE_STATE.ERROR && StationGlobals.SequenceStat"
ConditionExpr Line0002 = "es[RunState.TestSockets.MyIndex] != Enums.SEQUENCE_STATE.Terminated"
%COMMENT = "In this case at PRE UUT or Main Sequence we didn't have ERROR or TERMINATION - we can process results of testing"

[DEF, SF.Seq[3].Main[0]]
%NAME = "If"

[SF.Seq[3].Main[1].TS]
Id = "ID#:Qbnst2/67xG53dQli0T1uC"
IgnoreRTE = True
%HI: AdditionalResultsHints = [2]

[DEF, SF.Seq[3].Main[1].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"
%[1] = "TYPE, NI_CustomResult"
%[2] = "TYPE, NI_CustomResult"

[SF.Seq[3].Main[1].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"ALREADY_EXISTS_HINT\")"
ValueToLog = "Evaluate(Step.AlreadyExistsExpr)"

[SF.Seq[3].Main[1].TS.AdditionalResultsHints[1]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"RENDEZVOUS_REFERENCE_LIFETIME_HINT\")"
ValueToLog Line0001 = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", (Step.Lifetime == 0 ? \"LIFETIME_SEQUENCE\" :\n    Step.Lifetime == 1 ? \"LIFETIME_T"
ValueToLog Line0002 = "HREAD\" :\n    Step.Lifetime == 2 ? \"LIFETIME_REFERENCE\" :\n    Step.Lifetime == 3 ? \"LIFETIME_EXECUTION\" :\n    \"\"
ValueToLog Line0003 = ""))"

[SF.Seq[3].Main[1].TS.AdditionalResultsHints[2]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"NUMBER_OF_THREADS_PER_RENDEZVOUS_HINT\")"
ValueToLog = "Evaluate(Step.RendezvousCountExpr)"

[SF.Seq[3].Main[1]]
NameOrRefExpr = "\"POST_UUT\"+Locals.CHMB"
RendezvousCountExpr = "StationGlobals.Automation.NumberOfDUTsCHMB1"
Lifetime = 0
%COMMENT = "Wait for both sockets to get to POST UUT\nFIXED TO 2 TEST SOCKETS"

[DEF, SF.Seq[3].Main[1]]
%NAME = "Create rendezvous for POST UUT"

[SF.Seq[3].Main[2].TS]
Id = "ID#:Qrnst2/67xG53dQli0T1uC"
IgnoreRTE = True
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[3].Main[2].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[3].Main[2].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"TIMEOUT\")"
ValueToLog = "Step.TimeoutEnabled ? Str(Evaluate(Step.TimeoutExpr)) : ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"DISABLED\")"

[DEF, SF.Seq[3].Main[2]]
Result = Obj
%NAME = "Wait POST UUT operation"

[DEF, SF.Seq[3].Main[2].Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"
TimeoutOccurred = Bool

[SF.Seq[3].Main[2].Result]
%FLG: Error = 4194304
%FLG: Status = 4194304
%FLG: ReportText = 4194304
%FLG: Common = 0

[SF.Seq[3].Main[2]]
%FLG: Result = 4194304
NameOrRefExpr = "\"POST_UUT\"+Locals.CHMB"
Operation = 1

[SF.Seq[3].Main[3].TS]
Id = "ID#:+jmRzNgh8BG4klB7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[3].Main]
%FLG: %[3] = 67108864
%FLG: %[8] = 67108864
%FLG: %[11] = 67108864
%FLG: %[13] = 67108864
%FLG: %[22] = 67108864
%FLG: %[23] = 67108864
%FLG: %[31] = 67108864
%FLG: %[53] = 67108864
%FLG: %[63] = 67108864
%FLG: %[69] = 67108864
%FLG: %[75] = 67108864
%FLG: %[76] = 67108864

[SF.Seq[3].Main[4].TS]
Id = "ID#:As2t4Q6S8BGJ5cyCf5KpWB"

[DEF, SF.Seq[3].Main[4].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[4].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetSerialNumber"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[3].Main[4].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[4].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
SerialNumber = "TYPE, SequenceArgument"

[SF.Seq[3].Main[4].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[4].TS.SData.ActualArgs.SerialNumber]
UseDef = False
Expr = "Locals.SerialNumber"
ParamType = 2

[DEF, SF.Seq[3].Main[4].TS.SData.Prototype]
TestSocket = Num
SerialNumber = Str

[SF.Seq[3].Main[4].TS.SData.Prototype]
TestSocket = Nan
%FLG: SerialNumber = 4

[SF.Seq[3].Main[4].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[3].Main[4].TS.SData.Prototype.SerialNumber]
%COMMENT = "Serial number of the UUT on the Test Socket."

[DEF, SF.Seq[3].Main[4]]
%NAME = "Model.TestSocket.GetSerialNumber"

[SF.Seq[3].Main[5].TS]
Id = "ID#:/k4LJwr57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[5].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[5].TS.SData]
SeqName = "Collect Test Results"
UseCurFile = True

[DEF, SF.Seq[3].Main[5].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[3].Main[5].TS.SData.ActualArgs]
MainSequenceResult = "TYPE, SequenceArgument"
AcquireTesting = "TYPE, SequenceArgument"
FailureSet = "TYPE, SequenceArgument"
ResultPrint = "TYPE, SequenceArgument"
SetpointPrint = "TYPE, SequenceArgument"
Tx = "TYPE, SequenceArgument"
Rx = "TYPE, SequenceArgument"
Report = "TYPE, SequenceArgument"

[SF.Seq[3].Main[5].TS.SData.ActualArgs.MainSequenceResult]
UseDef = False
Expr = "Parameters.MainSequenceResult"
ParamType = 2048
Flags = 0

[SF.Seq[3].Main[5].TS.SData.ActualArgs.AcquireTesting]
UseDef = False
Expr = "Locals.AcquireTesting"
ParamType = 1

[SF.Seq[3].Main[5].TS.SData.ActualArgs.FailureSet]
UseDef = False
Expr = "Locals.Report.FailureSet"
ParamType = 256

[SF.Seq[3].Main[5].TS.SData.ActualArgs.ResultPrint]
UseDef = False
Expr = "Locals.Report.ResultPrint"
ParamType = 256

[SF.Seq[3].Main[5].TS.SData.ActualArgs.SetpointPrint]
UseDef = False
Expr = "Locals.Report.SetpointPrint"
ParamType = 256

[SF.Seq[3].Main[5].TS.SData.ActualArgs.Tx]
UseDef = False
Expr = "Locals.Report.Tx"
ParamType = 256

[SF.Seq[3].Main[5].TS.SData.ActualArgs.Rx]
UseDef = False
Expr = "Locals.Report.Rx"
ParamType = 256

[SF.Seq[3].Main[5].TS.SData.ActualArgs.Report]
UseDef = False
Expr = "Locals.Report.Report"
ParamType = 1

[SF.Seq[3].Main[5]]
%COMMENT = "//CHANGE FAILIURE DESCRPTION IF NEEDED"

[DEF, SF.Seq[3].Main[5]]
%NAME = "GetDUT results"

[SF.Seq[3].Main[6].TS]
Id = "ID#:Kna2N5v67xG53dQli0T1uC"

[DEF, SF.Seq[3].Main[6].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[3].Main[6].TS.SData.ViCall]
ProjectPath = "..\\..\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Station\\Get Failure set to write.vi"
TDChecksum = -1409273814
%HI: Parms = [1]

[DEF, SF.Seq[3].Main[6].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"

[SF.Seq[3].Main[6].TS.SData.ViCall.Parms[0]]
Label = "Failure set"
ArgVal = "Locals.Report.FailureSet"
Type = 5
WireRequirement = 1
ArrayType = 51
DisplayType = "1D Array (ASCII String)"
ConnectorNumber = 11

[DEF, SF.Seq[3].Main[6].TS.SData.ViCall.Parms[0]]
%NAME = "Failure set"

[SF.Seq[3].Main[6].TS.SData.ViCall.Parms[1]]
Label = "Failure set to write"
ArgVal = "Locals.FailureSetToWrite"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[3].Main[6].TS.SData.ViCall.Parms[1]]
%NAME = "Failure set to write"

[DEF, SF.Seq[3].Main[6]]
%NAME = "Get Failure set to write"

[SF.Seq[3].Main[7].TS]
Id = "ID#:ByiwN/uO8BGJ3syCf5KpWB"

[DEF, SF.Seq[3].Main[7].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[3].Main[7].TS.SData.ViCall]
ProjectPath = "..\\..\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Report\\Generate txt Report.vi"
TDChecksum = -385498017
%HI: Parms = [9]

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"
%[6] = "TYPE, VIParameter"
%[7] = "TYPE, VIParameter"
%[8] = "TYPE, VIParameter"
%[9] = "TYPE, VIParameter"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[0]]
Label = "Test Names"
ArgVal = "Locals.Report.Report.TestNames"
Type = 5
WireRequirement = 1
ArrayType = 51
DisplayType = "1D Array (ASCII String)"
ConnectorNumber = 6

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[0]]
%NAME = "Test Names"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[1]]
Label = "Serial Number"
ArgVal = "Locals.SerialNumber"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 0

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[1]]
%NAME = "Serial Number"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[2]]
Label = "Testing result"
ArgVal = "Parameters.UUTStatus"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 1

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[2]]
%NAME = "Testing result"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[3]]
Label = "Failed Tests"
ArgVal = "Locals.FailureSetToWrite"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 2

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[3]]
%NAME = "Failed Tests"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[4]]
Label = "Upper Limits"
ArgVal = "Locals.AcquireTesting.TSUpperToleranceSet"
Type = 5
WireRequirement = 1
DisplayType = "1D Array (DBL)"
ConnectorNumber = 3

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[4]]
%NAME = "Upper Limits"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[5]]
Label = "Lower Limits"
ArgVal = "Locals.AcquireTesting.TSLowerToleranceSet"
Type = 5
WireRequirement = 1
DisplayType = "1D Array (DBL)"
ConnectorNumber = 4

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[5]]
%NAME = "Lower Limits"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[6]]
Label = "Measurement values"
ArgVal = "Locals.AcquireTesting.TSValueSet"
Type = 5
WireRequirement = 1
DisplayType = "1D Array (DBL)"
ConnectorNumber = 5

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[6]]
%NAME = "Measurement values"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[7]]
Label = "Status"
ArgVal = "Locals.Report.Report.Statuses"
Type = 5
WireRequirement = 1
ArrayType = 51
DisplayType = "1D Array (ASCII String)"
ConnectorNumber = 7

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[7]]
%NAME = "Status"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[8]]
Label = "NTC Codes"
ArgVal = "StationGlobals.Testing.Parameters.NTC_Codes[RunState.TestSockets.MyIndex]"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 9

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[8]]
%NAME = "NTC Codes"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[9]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 19
LegacyClusterType = 2

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[9].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[9].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[9].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[9].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[9].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[3].Main[7].TS.SData.ViCall.Parms[9].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[9].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[3].Main[7].TS.SData.ViCall.Parms[9]]
%NAME = "error out"

[DEF, SF.Seq[3].Main[7]]
%NAME = "Generate Report"

[SF.Seq[3].Main[8].TS]
Id = "ID#:Rrnst2/67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[3].Main[9].TS]
Id = "ID#:TNt3zjaV8BGJ68yCf5KpWB"

[DEF, SF.Seq[3].Main[9]]
%NAME = "Setting Running Signal To Robot"

[SF.Seq[3].Main[10].TS]
Id = "ID#:Tdt3zjaV8BGJ68yCf5KpWB"

[DEF, SF.Seq[3].Main[10].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[10].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[3].Main[10].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[10].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[10].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[3].Main[10].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Running\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[10].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[3].Main[10]]
%NAME = "Setting Running signal to False"

[SF.Seq[3].Main[11].TS]
Id = "ID#:UNt3zjaV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[3].Main[12].TS]
Id = "ID#:N/IlAun57xG53NQli0T1uC"
CustExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] == Enums.SEQUENCE_STATE.ERROR"
CustTrueAct = "Goto"
CustTrueActTarget = "\"<Cleanup>\""

[DEF, SF.Seq[3].Main[12].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[12].TS.SData]
SeqName = "Lock Actuator POST UUT"
UseCurFile = True

[DEF, SF.Seq[3].Main[12].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[3].Main[12].TS.SData.ActualArgs]
SelectedActuatorName = "TYPE, SequenceArgument"
SelectedTargetPosition = "TYPE, SequenceArgument"
LockName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[12].TS.SData.ActualArgs.SelectedActuatorName]
UseDef = False
Expr = "Locals.CHMB+\"_TOP_PLATE_AUTO\""
ParamType = 2

[SF.Seq[3].Main[12].TS.SData.ActualArgs.SelectedTargetPosition]
UseDef = False
Expr = "100 //Home Position"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[3].Main[12].TS.SData.ActualArgs.LockName]
UseDef = False
Expr = "Locals.CHMB+\"_TOP_PLATE_POST_UUT\""
ParamType = 2

[DEF, SF.Seq[3].Main[12]]
%NAME = "Lift  CHMB1 TOP PLATE"

[SF.Seq[3].Main[13].TS]
Id = "ID#:n8ShPq357xG53NQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[3].Main[14].TS]
Id = "ID#:cXY9wAz57xG52tQli0T1uC"

[SF.Seq[3].Main[14]]
ItemExpr = "Locals.TestSocketName"

[DEF, SF.Seq[3].Main[14]]
%NAME = "Select"

[SF.Seq[3].Main[15].TS]
Id = "ID#:cnY9wAz57xG52tQli0T1uC"

[SF.Seq[3].Main[15]]
ItemExpr = "\"CHMB1_DUT1\""
%COMMENT = "Case of the LEFT DUT NEST"

[DEF, SF.Seq[3].Main[15]]
%NAME = "Case"

[SF.Seq[3].Main[16].TS]
Id = "ID#:wwGCxgz57xG52tQli0T1uC"
PostExpr = "StationGlobals.Automation.UUTStatus_CHMB1_DUT1= Parameters.UUTStatus"

[DEF, SF.Seq[3].Main[16]]
%NAME = "Get status for LEFT NEST"

[SF.Seq[3].Main[17].TS]
Id = "ID#:c3Y9wAz57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[17]]
%NAME = "End"

[SF.Seq[3].Main[18].TS]
Id = "ID#:dHY9wAz57xG52tQli0T1uC"

[SF.Seq[3].Main[18]]
ItemExpr = "\"CHMB1_DUT2\""
%COMMENT = "Case of the RIGHT DUT NEST"

[DEF, SF.Seq[3].Main[18]]
%NAME = "Case"

[SF.Seq[3].Main[19].TS]
Id = "ID#:i3aRPg357xG52tQli0T1uC"
PostExpr = "StationGlobals.Automation.UUTStatus_CHMB1_DUT2 = Parameters.UUTStatus"

[DEF, SF.Seq[3].Main[19]]
%NAME = "Get status for RIGHT NEST"

[SF.Seq[3].Main[20].TS]
Id = "ID#:dXY9wAz57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[20]]
%NAME = "End"

[SF.Seq[3].Main[21].TS]
Id = "ID#:dnY9wAz57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[21]]
%NAME = "End"

[SF.Seq[3].Main[22].TS]
Id = "ID#:wgGCxgz57xG52tQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[3].Main[23].TS]
Id = "ID#:b7XHUQr57xG52tQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[3].Main[24].TS]
Id = "ID#:Fx5zWgr57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[24].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[24].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.TestStatus.SetValue"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[3].Main[24].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[24].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Text = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[3].Main[24].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[24].TS.SData.ActualArgs.Text]
UseDef = False
Expr Line0001 = "(\n   Parameters.MainSequenceResult != Nothing?\n   ( \n     Parameters.UUTStatus == \"Passed\"? \n     ResStr(\"UI_MESS"
Expr Line0002 = "AGES\",  \"TEST_PASSED\")\n     : \n     (\n     \tParameters.UUTStatus == \"Error\"? \n     \tResStr(\"UI_MESSAGES\",  "
Expr Line0003 = "\"TEST_ERROR\") + \" :\\n\\n\" + #NoValidation(Parameters.MainSequenceResult.Error.Msg)\n        :\n\t(\n\t   Parameters"
Expr Line0004 = ".UUTStatus == \"Terminated\"?\n\t   ResStr(\"UI_MESSAGES\",  \"TEST_TERMINATED\")\n\t   :\n          ResStr(\"UI_MESSAGE"
Expr Line0005 = "S\",  \"TEST_FAILED\") + \" : \" + Locals.FailureSetToWrite\n        )\n     )\n   ) + \"\\n\\n\" + ResStr(\"UI_MESSAGES"
Expr Line0006 = "\",  \"TESTING_TIME\")  + \" : \" + #NoValidation(Str(Parameters.MainSequenceResult.TS.TotalTime, \"%.1f\")) + \" s\"\n "
Expr Line0007 = "  :\n   (\n      \"\"\n   )\n)"
ParamType = 2
Flags = 0

[SF.Seq[3].Main[24].TS.SData.ActualArgs.Color]
UseDef = False
Expr Line0001 = "(Parameters.UUTStatus == \"Passed\" ? StationGlobals.TEF.Colors.StatusPassed : (Parameters.UUTStatus == \"Terminated\" ?"
Expr Line0002 = " StationGlobals.TEF.Colors.StatusTerminated : StationGlobals.TEF.Colors.StatusFailed))"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[24].TS.SData.ActualArgs.FontSize]
Expr = "40"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[3].Main[24].TS.SData.Prototype]
TestSocket = Num
Text = Str
Color = Num
FontSize = Num

[SF.Seq[3].Main[24].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[3].Main[24].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[3].Main[24]]
%NAME = "UI.TestSocket.TestStatus.SetValue"

[SF.Seq[3].Main[25].TS]
Id = "ID#:GB5zWgr57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[25].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[25].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.SetIcon"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[3].Main[25].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[25].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
IconPath = "TYPE, SequenceArgument"

[SF.Seq[3].Main[25].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[25].TS.SData.ActualArgs.IconPath]
UseDef = False
Expr = "(Parameters.UUTStatus == \"Passed\"? \"Ok.ico\" : \"Cancel.ico\")"
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[25].TS.SData.Prototype]
TestSocket = Num
Caption = Str

[SF.Seq[3].Main[25].TS.SData.Prototype]
TestSocket = Nan

[DEF, SF.Seq[3].Main[25]]
%NAME = "UI.TestSocket.SetIcon: Socket Pass/Fail"

[SF.Seq[3].Main[26].TS]
Id = "ID#:GR5zWgr57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[26].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[26].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[3].Main[26].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[26].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[3].Main[26].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[26].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "\"\""
ParamType = 2
Flags = 0

[SF.Seq[3].Main[26].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[26].TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[3].Main[26].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[3].Main[26].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[3].Main[26].TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, SF.Seq[3].Main[26]]
%NAME = "UI.TestSocket.ShowMessage: \"\""

[SF.Seq[3].Main[27].TS]
Id = "ID#:Gh5zWgr57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[27].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[27].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetProductAndVariant"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[3].Main[27].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[27].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Product = "TYPE, SequenceArgument"
Variant = "TYPE, SequenceArgument"

[SF.Seq[3].Main[27].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[27].TS.SData.ActualArgs.Product]
UseDef = False
Expr = "Locals.Product"
ParamType = 2

[SF.Seq[3].Main[27].TS.SData.ActualArgs.Variant]
UseDef = False
Expr = "Locals.Variant"
ParamType = 2

[DEF, SF.Seq[3].Main[27].TS.SData.Prototype]
TestSocket = Num
Product = Str
Variant = Str

[SF.Seq[3].Main[27].TS.SData.Prototype]
TestSocket = Nan
%FLG: Product = 4
%FLG: Variant = 4

[DEF, SF.Seq[3].Main[27]]
%NAME = "Model.TestSocket.GetProductAndVariant"

[SF.Seq[3].Main[28].TS]
Id = "ID#:Gx5zWgr57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[28].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[28].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetSerialNumber"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[3].Main[28].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[28].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
SerialNumber = "TYPE, SequenceArgument"

[SF.Seq[3].Main[28].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[28].TS.SData.ActualArgs.SerialNumber]
UseDef = False
Expr = "Locals.SerialNumber"
ParamType = 2

[DEF, SF.Seq[3].Main[28].TS.SData.Prototype]
TestSocket = Num
SerialNumber = Str

[SF.Seq[3].Main[28].TS.SData.Prototype]
TestSocket = Nan
%FLG: SerialNumber = 4

[SF.Seq[3].Main[28].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[3].Main[28].TS.SData.Prototype.SerialNumber]
%COMMENT = "Serial number of the UUT on the Test Socket."

[DEF, SF.Seq[3].Main[28]]
%NAME = "Model.TestSocket.GetSerialNumber"

[SF.Seq[3].Main[29].TS]
Id = "ID#:AbF0cgr57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[29].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[29].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.Statistic.Update"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[3].Main[29].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[29].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
UUTStatus = "TYPE, SequenceArgument"

[SF.Seq[3].Main[29].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[29].TS.SData.ActualArgs.UUTStatus]
UseDef = False
Expr = "Parameters.UUTStatus"
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[29].TS.SData.Prototype]
TestSocket = Num
UUTStatus = Str

[SF.Seq[3].Main[29].TS.SData.Prototype]
TestSocket = Nan

[SF.Seq[3].Main[29].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[3].Main[29].TS.SData.Prototype.UUTStatus]
%COMMENT = "UUT test status: \"Passed\" or others."

[DEF, SF.Seq[3].Main[29]]
%NAME = "UI.TestSocket.Statistic.Update"

[SF.Seq[3].Main[30].TS]
Id = "ID#:ArF0cgr57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[30].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[30].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.Statistic.Update"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[3].Main[30].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[30].TS.SData.ActualArgs]
UUTStatus = "TYPE, SequenceArgument"

[SF.Seq[3].Main[30].TS.SData.ActualArgs.UUTStatus]
UseDef = False
Expr = "Parameters.UUTStatus"
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[30].TS.SData.Prototype]
UUTStatus = Str

[DEF, SF.Seq[3].Main[30]]
%NAME = "UI.Station.Statistic.Update"

[SF.Seq[3].Main[31].TS]
Id = "ID#:cLXHUQr57xG52tQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[3].Main[32].TS]
Id = "ID#:56unKRgV8BG4iVB7nf4f8B"
IgnoreRTE = True
%HI: AdditionalResultsHints = [2]

[DEF, SF.Seq[3].Main[32].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"
%[1] = "TYPE, NI_CustomResult"
%[2] = "TYPE, NI_CustomResult"

[SF.Seq[3].Main[32].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"ALREADY_EXISTS_HINT\")"
ValueToLog = "Evaluate(Step.AlreadyExistsExpr)"

[SF.Seq[3].Main[32].TS.AdditionalResultsHints[1]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"RENDEZVOUS_REFERENCE_LIFETIME_HINT\")"
ValueToLog Line0001 = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", (Step.Lifetime == 0 ? \"LIFETIME_SEQUENCE\" :\n    Step.Lifetime == 1 ? \"LIFETIME_T"
ValueToLog Line0002 = "HREAD\" :\n    Step.Lifetime == 2 ? \"LIFETIME_REFERENCE\" :\n    Step.Lifetime == 3 ? \"LIFETIME_EXECUTION\" :\n    \"\"
ValueToLog Line0003 = ""))"

[SF.Seq[3].Main[32].TS.AdditionalResultsHints[2]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"NUMBER_OF_THREADS_PER_RENDEZVOUS_HINT\")"
ValueToLog = "Evaluate(Step.RendezvousCountExpr)"

[SF.Seq[3].Main[32]]
NameOrRefExpr = "\"ACK\"+Locals.CHMB"
RendezvousCountExpr = "StationGlobals.Automation.NumberOfDUTsCHMB1"
Lifetime = 0
%COMMENT = "Wait for both sockets to get to POST UUT"

[DEF, SF.Seq[3].Main[32]]
%NAME = "Create rendezvous for POST UUT"

[SF.Seq[3].Main[33].TS]
Id = "ID#:6KunKRgV8BG4iVB7nf4f8B"
IgnoreRTE = True
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[3].Main[33].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[3].Main[33].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"TIMEOUT\")"
ValueToLog = "Step.TimeoutEnabled ? Str(Evaluate(Step.TimeoutExpr)) : ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"DISABLED\")"

[DEF, SF.Seq[3].Main[33]]
Result = Obj
%NAME = "Wait POST UUT operation"

[DEF, SF.Seq[3].Main[33].Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"
TimeoutOccurred = Bool

[SF.Seq[3].Main[33].Result]
%FLG: Error = 4194304
%FLG: Status = 4194304
%FLG: ReportText = 4194304
%FLG: Common = 0

[SF.Seq[3].Main[33]]
%FLG: Result = 4194304
NameOrRefExpr = "\"ACK\"+Locals.CHMB"
Operation = 1

[SF.Seq[3].Main[34].TS]
Id = "ID#:/LB0cgr57xG52tQli0T1uC"

[SF.Seq[3].Main[34]]
ConditionExpr = "Parameters.UUTStatus == \"Terminated\""
%COMMENT Line0001 = "In case that Main Sequence was Termimnated - Nothing should be done\n(By pressing the button or Operation mode was chang"
%COMMENT Line0002 = "ed to Manual or Alarm)"

[DEF, SF.Seq[3].Main[34]]
%NAME = "If"

[SF.Seq[3].Main[35].TS]
Id = "ID#:RFwQ0Z/57xG53NQli0T1uC"
PostExpr Line0001 = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] = Enums.SEQUENCE_STATE.Terminated,\nRunState.GotoCleanup = T"
PostExpr Line0002 = "rue"

[DEF, SF.Seq[3].Main[35]]
%NAME = "Change the Sequence State to Terminated and Goto Clenup"

[SF.Seq[3].Main[36].TS]
Id = "ID#:/bB0cgr57xG52tQli0T1uC"

[SF.Seq[3].Main[36]]
ConditionExpr Line0001 = "Parameters.UUTStatus == \"Failed\"|| StationGlobals.Automation.UUTStatus_CHMB1_DUT1 == \"Error\" || StationGlobals.Autom"
ConditionExpr Line0002 = "ation.UUTStatus_CHMB1_DUT2 == \"Error\"\n//StationGlobals.Automation.UUTStatus_CHMB1_DUT1 == \"Failed\" || StationGlobal"
ConditionExpr Line0003 = "s.Automation.UUTStatus_CHMB1_DUT2 == \"Failed\" || StationGlobals.Automation.UUTStatus_CHMB1_DUT1 == \"Error\" || Statio"
ConditionExpr Line0004 = "nGlobals.Automation.UUTStatus_CHMB1_DUT2 == \"Error\""
%COMMENT Line0001 = "In case that at least one DUT failed testing or at least one Test Socket goes to Error\n(We are treating ERROR in main s"
%COMMENT Line0002 = "equence as FAILURE)"

[DEF, SF.Seq[3].Main[36]]
%NAME = "Else If"

[SF.Seq[3].Main[37].TS]
Id = "ID#:d3a1UYw88BGtmcyCf35SiD"

[DEF, SF.Seq[3].Main[37].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[37].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.I16.Write"
Trace = "Off"

[DEF, SF.Seq[3].Main[37].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[37].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[37].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "1"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[37].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"SYSTEM_MOSI.Lamps\"+Locals.CHMB"
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[37].TS.SData.Prototype]
VariableValue = Num
VariableName = Str

[DEF, SF.Seq[3].Main[37]]
%NAME = "Red"

[SF.Seq[3].Main[38].TS]
Id = "ID#:N4n8UTeV8BGJ68yCf5KpWB"

[DEF, SF.Seq[3].Main[38]]
%NAME = "Send signal to robot about failed device"

[SF.Seq[3].Main[39].TS]
Id = "ID#:JzQ4QDeV8BGJ68yCf5KpWB"

[DEF, SF.Seq[3].Main[39].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[39].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[3].Main[39].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[39].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[39].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[3].Main[39].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr Line0001 = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Part\"+Str(((Locals.DUT == \"DUT1\") || (Locals.DUT == \"DUT3\")) ? 1 :"
Expr Line0002 = " 2)+\"_Status\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[39].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[3].Main[39]]
%NAME = "Set device status failed"

[SF.Seq[3].Main[40].TS]
Id = "ID#:dDoC8/io8BGJ/MyCf5KpWB"
PostExpr = "StationGlobals.NOK_Counter ++"

[DEF, SF.Seq[3].Main[40]]
%NAME = "Increase NOK counter"

[SF.Seq[3].Main[41].TS]
Id = "ID#:Syh1//io8BGJ/MyCf5KpWB"

[SF.Seq[3].Main[41]]
ConditionExpr = "StationGlobals.NOK_Counter > 4"

[DEF, SF.Seq[3].Main[41]]
%NAME = "If"

[SF.Seq[3].Main[42].TS]
Id = "ID#:Ff+0K/mo8BGJ/MyCf5KpWB"

[DEF, SF.Seq[3].Main[42].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[42].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[3].Main[42].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[42].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[42].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[3].Main[42].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Error\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[42].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[3].Main[42]]
%NAME = "Set Error Signal"

[SF.Seq[3].Main[43].TS]
Id = "ID#:AYfHOvmo8BGJ/MyCf5KpWB"
PostExpr = "StationGlobals.NOK_Counter = 0"

[DEF, SF.Seq[3].Main[43]]
%NAME = "Reset NOK counter"

[SF.Seq[3].Main[44].TS]
Id = "ID#:TSh1//io8BGJ/MyCf5KpWB"

[DEF, SF.Seq[3].Main[44]]
%NAME = "End"

[SF.Seq[3].Main[45].TS]
Id = "ID#:VMxOw6D57xG53NQli0T1uC"

[SF.Seq[3].Main[45]]
ConditionExpr = "Parameters.UUTStatus == \"Passed\""
%COMMENT = "In this case TS will enter if it PASSED and other socket was Terminated OR \nboth TS PASSED testing "

[DEF, SF.Seq[3].Main[45]]
%NAME = "Else If"

[SF.Seq[3].Main[46].TS]
Id = "ID#:p1H4PIw88BGtmcyCf35SiD"

[DEF, SF.Seq[3].Main[46].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[46].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.I16.Write"
Trace = "Off"

[DEF, SF.Seq[3].Main[46].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[46].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[46].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "3"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[46].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"SYSTEM_MOSI.Lamps\"+Locals.CHMB"
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[46].TS.SData.Prototype]
VariableValue = Num
VariableName = Str

[DEF, SF.Seq[3].Main[46]]
%NAME = "Green"

[SF.Seq[3].Main[47].TS]
Id = "ID#:2ov/6fio8BGJ/MyCf5KpWB"
PostExpr = "StationGlobals.NOK_Counter = 0"

[DEF, SF.Seq[3].Main[47]]
%NAME = "Reset NOK counter"

[SF.Seq[3].Main[48].TS]
Id = "ID#:ZMUg9A6S8BGJ5cyCf5KpWB"

[DEF, SF.Seq[3].Main[48].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[48].TS.SData]
SeqName = "Board Marker"
UseCurFile = True

[DEF, SF.Seq[3].Main[48]]
%NAME = "MARK OK device"

[SF.Seq[3].Main[49].TS]
Id = "ID#:HrBWXDeV8BGJ68yCf5KpWB"

[DEF, SF.Seq[3].Main[49]]
%NAME = "Send signal to robot about passed device"

[SF.Seq[3].Main[50].TS]
Id = "ID#:PfOm+jaV8BGJ68yCf5KpWB"

[DEF, SF.Seq[3].Main[50].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[50].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[3].Main[50].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[50].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[50].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[3].Main[50].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr Line0001 = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Part\"+Str(((Locals.DUT == \"DUT1\") || (Locals.DUT == \"DUT3\")) ? 1 :"
Expr Line0002 = " 2)+\"_Status\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[50].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[3].Main[50]]
%NAME = "Set device status passed"

[SF.Seq[3].Main[51].TS]
Id = "ID#:2P5s/bn57xG53NQli0T1uC"

[DEF, SF.Seq[3].Main[51]]
%NAME = "CONTINUE"

[SF.Seq[3].Main[52].TS]
Id = "ID#:/rB0cgr57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[52]]
%NAME = "End"

[SF.Seq[3].Main[53].TS]
Id = "ID#:cbXHUQr57xG52tQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[3].Main[54].TS]
Id = "ID#:V/iAkj2V8BGJ68yCf5KpWB"

[SF.Seq[3].Main[54]]
ConditionExpr Line0001 = "StationGlobals.Automation.Robot.ManualSequence && (StationGlobals.Automation.UUTStatus_CHMB1_DUT1 == \"Failed\" || Stati"
ConditionExpr Line0002 = "onGlobals.Automation.UUTStatus_CHMB1_DUT2 == \"Failed\" || StationGlobals.Automation.UUTStatus_CHMB1_DUT1 == \"Error\" |"
ConditionExpr Line0003 = "| StationGlobals.Automation.UUTStatus_CHMB1_DUT2 == \"Error\")"
%COMMENT = "If sequence is manual wait for ACK button"

[DEF, SF.Seq[3].Main[54]]
%NAME = "If"

[SF.Seq[3].Main[55].TS]
Id = "ID#:kyD/c6f57xG53NQli0T1uC"

[DEF, SF.Seq[3].Main[55].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[55].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[3].Main[55].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[55].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[3].Main[55].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[55].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"PRESS_ACK_BUTTON_UNLOCK_DRAWER\")"
ParamType = 2
Flags = 0

[SF.Seq[3].Main[55].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[55].TS.SData.ActualArgs.FontSize]
Expr = "40"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[3].Main[55].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[3].Main[55].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[3].Main[55].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[3].Main[55].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[3].Main[55].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[3].Main[55].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[3].Main[55]]
%NAME = "Tell operator to press ACK button to UNLOCK the DRAWER"

[SF.Seq[3].Main[56].TS]
Id = "ID#:Kj7zoKj57xG53NQli0T1uC"

[DEF, SF.Seq[3].Main[56].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[56].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[3].Main[56].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[56].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[56].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.ACK_Button"
ParamType = 16

[SF.Seq[3].Main[56].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_\"+Locals.CHMB+\"_NOK_PART_ButtonPressed\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[56].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[3].Main[56].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[3].Main[56]]
%NAME = "Read ACK button value"

[SF.Seq[3].Main[57].TS]
Id = "ID#:Kz7zoKj57xG53NQli0T1uC"

[SF.Seq[3].Main[57]]
ConditionExpr = "Locals.Automated.ACK_Button == False"
%COMMENT = "Wait for operator to press ACK button"

[DEF, SF.Seq[3].Main[57]]
%NAME = "While"

[SF.Seq[3].Main[58].TS]
Id = "ID#:LD7zoKj57xG53NQli0T1uC"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[3].Main[58].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[3].Main[58].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[3].Main[58]]
SeqCallName = "End"
TimeExpr = "0.05"

[DEF, SF.Seq[3].Main[58]]
%NAME = "Wait 50ms"

[SF.Seq[3].Main[59].TS]
Id = "ID#:W9Wjya757xG53NQli0T1uC"

[DEF, SF.Seq[3].Main[59].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[59].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[3].Main[59].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[59].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[59].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.ACK_Button"
ParamType = 16

[SF.Seq[3].Main[59].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_\"+Locals.CHMB+\"_NOK_PART_ButtonPressed\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[59].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[3].Main[59].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[3].Main[59]]
%NAME = "Read ACK button value"

[SF.Seq[3].Main[60].TS]
Id = "ID#:Lj7zoKj57xG53NQli0T1uC"

[DEF, SF.Seq[3].Main[60]]
%NAME = "End"

[SF.Seq[3].Main[61].TS]
Id = "ID#:WfiAkj2V8BGJ68yCf5KpWB"

[DEF, SF.Seq[3].Main[61]]
%NAME = "End"

[SF.Seq[3].Main[62].TS]
Id = "ID#:8qa3A+up8BGJ/cyCf5KpWB"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[3].Main[62].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[3].Main[62].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[3].Main[62]]
SeqCallName = "End"
TimeExpr = "0.05"

[DEF, SF.Seq[3].Main[62]]
%NAME = "Wait 50ms"

[SF.Seq[3].Main[63].TS]
Id = "ID#:8aa3A+up8BGJ/cyCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[3].Main[64].TS]
Id = "ID#:hLNuoen57xG53NQli0T1uC"
CustExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] == Enums.SEQUENCE_STATE.ERROR"
CustTrueAct = "Goto"
CustTrueActTarget = "\"<Cleanup>\""

[DEF, SF.Seq[3].Main[64].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[64].TS.SData]
SeqName = "Lock Actuator POST UUT"
UseCurFile = True

[DEF, SF.Seq[3].Main[64].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[3].Main[64].TS.SData.ActualArgs]
SelectedActuatorName = "TYPE, SequenceArgument"
SelectedTargetPosition = "TYPE, SequenceArgument"
LockName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[64].TS.SData.ActualArgs.SelectedActuatorName]
UseDef = False
Expr = "Locals.CHMB+\"_DRAWER_LOCKER\""
ParamType = 2

[SF.Seq[3].Main[64].TS.SData.ActualArgs.SelectedTargetPosition]
UseDef = False
Expr = "100 //Home Position"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[3].Main[64].TS.SData.ActualArgs.LockName]
UseDef = False
Expr = "Locals.CHMB+\"_DRAWER_LOCKER_POST_UUT\""
ParamType = 2

[DEF, SF.Seq[3].Main[64]]
%NAME = "Unlock CHMB1 DRAWER "

[SF.Seq[3].Main[65].TS]
Id = "ID#:dKpM2FQ98BGtmsyCf35SiD"
IgnoreRTE = True
%HI: AdditionalResultsHints = [2]

[DEF, SF.Seq[3].Main[65].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"
%[1] = "TYPE, NI_CustomResult"
%[2] = "TYPE, NI_CustomResult"

[SF.Seq[3].Main[65].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"ALREADY_EXISTS_HINT\")"
ValueToLog = "Evaluate(Step.AlreadyExistsExpr)"

[SF.Seq[3].Main[65].TS.AdditionalResultsHints[1]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"RENDEZVOUS_REFERENCE_LIFETIME_HINT\")"
ValueToLog Line0001 = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", (Step.Lifetime == 0 ? \"LIFETIME_SEQUENCE\" :\n    Step.Lifetime == 1 ? \"LIFETIME_T"
ValueToLog Line0002 = "HREAD\" :\n    Step.Lifetime == 2 ? \"LIFETIME_REFERENCE\" :\n    Step.Lifetime == 3 ? \"LIFETIME_EXECUTION\" :\n    \"\"
ValueToLog Line0003 = ""))"

[SF.Seq[3].Main[65].TS.AdditionalResultsHints[2]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"NUMBER_OF_THREADS_PER_RENDEZVOUS_HINT\")"
ValueToLog = "Evaluate(Step.RendezvousCountExpr)"

[SF.Seq[3].Main[65]]
NameOrRefExpr = "\"OPEN\"+Locals.CHMB"
RendezvousCountExpr = "StationGlobals.Automation.NumberOfDUTsCHMB1"
Lifetime = 0
%COMMENT = "Wait for both sockets to get to POST UUT"

[DEF, SF.Seq[3].Main[65]]
%NAME = "Create rendezvous for POST UUT"

[SF.Seq[3].Main[66].TS]
Id = "ID#:dapM2FQ98BGtmsyCf35SiD"
IgnoreRTE = True
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[3].Main[66].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[3].Main[66].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"TIMEOUT\")"
ValueToLog = "Step.TimeoutEnabled ? Str(Evaluate(Step.TimeoutExpr)) : ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"DISABLED\")"

[DEF, SF.Seq[3].Main[66]]
Result = Obj
%NAME = "Wait POST UUT operation"

[DEF, SF.Seq[3].Main[66].Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"
TimeoutOccurred = Bool

[SF.Seq[3].Main[66].Result]
%FLG: Error = 4194304
%FLG: Status = 4194304
%FLG: ReportText = 4194304
%FLG: Common = 0

[SF.Seq[3].Main[66]]
%FLG: Result = 4194304
NameOrRefExpr = "\"OPEN\"+Locals.CHMB"
Operation = 1

[SF.Seq[3].Main[67].TS]
Id = "ID#:YaIh64M/8BGtm8yCf35SiD"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[3].Main[67].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[3].Main[67].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[3].Main[67]]
SeqCallName = "End"
TimeExpr = "0.5"

[DEF, SF.Seq[3].Main[67]]
%NAME = "Wait"

[SF.Seq[3].Main[68].TS]
Id = "ID#:7Y5FaN028BGtlMyCf35SiD"
CustExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] == Enums.SEQUENCE_STATE.ERROR"
CustTrueAct = "Goto"
CustTrueActTarget = "\"<Cleanup>\""

[DEF, SF.Seq[3].Main[68].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[68].TS.SData]
SeqName = "Lock Actuator POST UUT"
UseCurFile = True

[DEF, SF.Seq[3].Main[68].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[3].Main[68].TS.SData.ActualArgs]
SelectedActuatorName = "TYPE, SequenceArgument"
SelectedTargetPosition = "TYPE, SequenceArgument"
LockName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[68].TS.SData.ActualArgs.SelectedActuatorName]
UseDef = False
Expr = "Locals.CHMB+\"_DRAWER_OPENER\""
ParamType = 2

[SF.Seq[3].Main[68].TS.SData.ActualArgs.SelectedTargetPosition]
UseDef = False
Expr = "100 //Home Position"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[3].Main[68].TS.SData.ActualArgs.LockName]
UseDef = False
Expr = "Locals.CHMB+\"_DRAWER_LOCKER_POST_UUT\""
ParamType = 2

[SF.Seq[3].Main[68]]
%COMMENT = "TEMPORARY"

[DEF, SF.Seq[3].Main[68]]
%NAME = "OPEN DRAWER"

[SF.Seq[3].Main[69].TS]
Id = "ID#:mr3c1K/57xG53NQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[3].Main[70].TS]
Id = "ID#:ImWzYq/57xG53NQli0T1uC"

[DEF, SF.Seq[3].Main[70].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[70].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[3].Main[70].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[70].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[3].Main[70].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[70].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "ResStr(\"SPECIAL_UI_MESSAGES\", \"OPEN_DRAWER_FOR_CONTINUING_UNLOADING\")"
ParamType = 2
Flags = 0

[SF.Seq[3].Main[70].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Main[70].TS.SData.ActualArgs.FontSize]
Expr = "40"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[3].Main[70].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[3].Main[70].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[3].Main[70].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[3].Main[70].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[3].Main[70].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[3].Main[70].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[3].Main[70]]
%NAME = "Tell operator to open the DRAWER to continue UNLOADING"

[SF.Seq[3].Main[71].TS]
Id = "ID#:CInlrK/57xG53NQli0T1uC"

[DEF, SF.Seq[3].Main[71].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[71].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[3].Main[71].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[71].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[71].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.DrawerClosed"
ParamType = 16

[SF.Seq[3].Main[71].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_\"+Locals.CHMB+\"_DRAWER_SafetyOK\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[71].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[3].Main[71].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[3].Main[71]]
%NAME = "Read Status of the Drawer"

[SF.Seq[3].Main[72].TS]
Id = "ID#:CYnlrK/57xG53NQli0T1uC"

[SF.Seq[3].Main[72]]
ConditionExpr = "Locals.Automated.DrawerClosed == True\n"
%COMMENT = "Wainting for the opening of the Drawer"

[DEF, SF.Seq[3].Main[72]]
%NAME = "While"

[SF.Seq[3].Main[73].TS]
Id = "ID#:ConlrK/57xG53NQli0T1uC"

[DEF, SF.Seq[3].Main[73].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Main[73].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, SF.Seq[3].Main[73].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Main[73].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[3].Main[73].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "Locals.Automated.DrawerClosed"
ParamType = 16

[SF.Seq[3].Main[73].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DI_\"+Locals.CHMB+\"_DRAWER_SafetyOK\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Main[73].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[SF.Seq[3].Main[73].TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, SF.Seq[3].Main[73]]
%NAME = "Read Status of the Drawer"

[SF.Seq[3].Main[74].TS]
Id = "ID#:C4nlrK/57xG53NQli0T1uC"

[DEF, SF.Seq[3].Main[74]]
%NAME = "End"

[SF.Seq[3].Main[75].TS]
Id = "ID#:I2WzYq/57xG53NQli0T1uC"
Icon = "ni_blank.ico"
Mode = "Skip"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[3].Main[76].TS]
Id = "ID#:tXiqms8D8BG4eVB7nf4f8B"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[3].Main[77].TS]
Id = "ID#:cFMprwn57xG52tQli0T1uC"

[SF.Seq[3].Main[77]]
%COMMENT = "If we had TS ERROR, we will skip processing the ruslts"

[DEF, SF.Seq[3].Main[77]]
%NAME = "Else"

[SF.Seq[3].Main[78].TS]
Id = "ID#:cVMprwn57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[78]]
%NAME = "NO ACTION"

[SF.Seq[3].Main[79].TS]
Id = "ID#:clMprwn57xG52tQli0T1uC"

[DEF, SF.Seq[3].Main[79]]
%NAME = "End"

[DEF, SF.Seq[3].Setup]
%[0] = Step
%TYPE: %[0] = "NoffzUTP_TEF_Model_Station_GetOperationMode"
%[1] = Step
%TYPE: %[1] = "NoffzUTP_TEF_Model_TestSocket_GetTestSocketName"
%[2] = Step
%TYPE: %[2] = "Statement"
%[3] = Step
%TYPE: %[3] = "SequenceCall"
%[4] = Step
%TYPE: %[4] = "Statement"

[SF.Seq[3].Setup[0].TS]
Id = "ID#:SF4jVNME8BG4elB7nf4f8B"

[DEF, SF.Seq[3].Setup[0].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Setup[0].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.Station.GetOperationMode"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[3].Setup[0].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Setup[0].TS.SData.ActualArgs]
OperationMode = "TYPE, SequenceArgument"

[SF.Seq[3].Setup[0].TS.SData.ActualArgs.OperationMode]
UseDef = False
Expr = "Locals.OperationMode"
ParamType = 2

[DEF, SF.Seq[3].Setup[0].TS.SData.Prototype]
OperationMode = Str

[SF.Seq[3].Setup[0].TS.SData.Prototype]
%FLG: OperationMode = 4

[DEF, SF.Seq[3].Setup[0]]
%NAME = "Model.Station.GetOperationMode"

[SF.Seq[3].Setup[1].TS]
Id = "ID#:rGcBuAz57xG52tQli0T1uC"
PostExpr = "Locals.CHMB = Left(Locals.TestSocketName,5),\nLocals.DUT = Right(Locals.TestSocketName, 4)"

[DEF, SF.Seq[3].Setup[1].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Setup[1].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetTestSocketName"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[3].Setup[1].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Setup[1].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
TestSocketName = "TYPE, SequenceArgument"

[SF.Seq[3].Setup[1].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[3].Setup[1].TS.SData.ActualArgs.TestSocketName]
UseDef = False
Expr = "Locals.TestSocketName"
ParamType = 2

[DEF, SF.Seq[3].Setup[1].TS.SData.Prototype]
TestSocket = Num
TestSocketName = Str

[SF.Seq[3].Setup[1].TS.SData.Prototype]
TestSocket = Nan
%FLG: TestSocketName = 4

[SF.Seq[3].Setup[1].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number."

[SF.Seq[3].Setup[1].TS.SData.Prototype.TestSocketName]
%COMMENT = "Test Socket name."

[DEF, SF.Seq[3].Setup[1]]
%NAME = "Get Test Socket Name"

[SF.Seq[3].Setup[2].TS]
Id = "ID#:EuQvOQn57xG52tQli0T1uC"
PostExpr = "FileGlobals.SequenceFinished = False"

[DEF, SF.Seq[3].Setup[2]]
%NAME = "Send the signal that Parallel sequence needs to start"

[SF.Seq[3].Setup[3].TS]
Id = "ID#:E+QvOQn57xG52tQli0T1uC"

[DEF, SF.Seq[3].Setup[3].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Setup[3].TS.SData]
SeqName = "Checking of the operating mode"
UseCurFile = True
ThreadOpt = 1

[DEF, SF.Seq[3].Setup[3].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[3].Setup[3].TS.SData.ActualArgs]
Msg = "TYPE, SequenceArgument"

[SF.Seq[3].Setup[3].TS.SData.ActualArgs.Msg]
ParamType = 2

[DEF, SF.Seq[3].Setup[3]]
%NAME = "Start Operation mode monitornig in Parallel Thread"

[SF.Seq[3].Setup[4].TS]
Id = "ID#:zcpEE3488BGtmcyCf35SiD"
PreCond = "FileGlobals.MainSequenceSkipped"
PostExpr = "RunState.GotoCleanup = True"

[DEF, SF.Seq[3].Setup[4]]
%NAME = "Go to Cleanup if main sequence was skipped"

[DEF, SF.Seq[3].Cleanup]
%[0] = Step
%TYPE: %[0] = "NI_Rendezvous"
%[1] = Step
%TYPE: %[1] = "NI_Rendezvous"
%[2] = Step
%TYPE: %[2] = "SequenceCall"
%[3] = Step
%TYPE: %[3] = "Label"
%[4] = Step
%TYPE: %[4] = "NoffzUTP_IOPLCVariableBooleanWrite"
%[5] = Step
%TYPE: %[5] = "Statement"

[SF.Seq[3].Cleanup[0].TS]
Id = "ID#:2R/5hL/57xG53NQli0T1uC"
PreCond = "!StationGlobals.RestartRequested[RunState.TestSockets.MyIndex]"
IgnoreRTE = True
%HI: AdditionalResultsHints = [2]

[DEF, SF.Seq[3].Cleanup[0].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"
%[1] = "TYPE, NI_CustomResult"
%[2] = "TYPE, NI_CustomResult"

[SF.Seq[3].Cleanup[0].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"ALREADY_EXISTS_HINT\")"
ValueToLog = "Evaluate(Step.AlreadyExistsExpr)"

[SF.Seq[3].Cleanup[0].TS.AdditionalResultsHints[1]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"RENDEZVOUS_REFERENCE_LIFETIME_HINT\")"
ValueToLog Line0001 = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", (Step.Lifetime == 0 ? \"LIFETIME_SEQUENCE\" :\n    Step.Lifetime == 1 ? \"LIFETIME_T"
ValueToLog Line0002 = "HREAD\" :\n    Step.Lifetime == 2 ? \"LIFETIME_REFERENCE\" :\n    Step.Lifetime == 3 ? \"LIFETIME_EXECUTION\" :\n    \"\"
ValueToLog Line0003 = ""))"

[SF.Seq[3].Cleanup[0].TS.AdditionalResultsHints[2]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"NUMBER_OF_THREADS_PER_RENDEZVOUS_HINT\")"
ValueToLog = "Evaluate(Step.RendezvousCountExpr)"

[SF.Seq[3].Cleanup[0]]
NameOrRefExpr = "\"POST_UUT_END_\"+Locals.CHMB"
Lifetime = 0
%COMMENT = "Wait for both sockets to get to POST UUT END"

[DEF, SF.Seq[3].Cleanup[0]]
%NAME = "Create rendezvous for POST UUT END"

[SF.Seq[3].Cleanup[1].TS]
Id = "ID#:2h/5hL/57xG53NQli0T1uC"
PreCond = "!StationGlobals.RestartRequested[RunState.TestSockets.MyIndex]"
IgnoreRTE = True
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[3].Cleanup[1].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[3].Cleanup[1].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"TIMEOUT\")"
ValueToLog = "Step.TimeoutEnabled ? Str(Evaluate(Step.TimeoutExpr)) : ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"DISABLED\")"

[DEF, SF.Seq[3].Cleanup[1]]
Result = Obj
%NAME = "Wait POST UUT END operation"

[DEF, SF.Seq[3].Cleanup[1].Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"
TimeoutOccurred = Bool

[SF.Seq[3].Cleanup[1].Result]
%FLG: Error = 4194304
%FLG: Status = 4194304
%FLG: ReportText = 4194304
%FLG: Common = 0

[SF.Seq[3].Cleanup[1]]
%FLG: Result = 4194304
NameOrRefExpr = "\"POST_UUT_END_\"+Locals.CHMB"
Operation = 1

[SF.Seq[3].Cleanup[2].TS]
Id = "ID#:5uUEmHX67xG53dQli0T1uC"

[DEF, SF.Seq[3].Cleanup[2].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Cleanup[2].TS.SData]
SeqName = "Post Batch - ADDED"
UseCurFile = True

[DEF, SF.Seq[3].Cleanup[2].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[3].Cleanup[2].TS.SData.ActualArgs]
DUT = "TYPE, SequenceArgument"

[SF.Seq[3].Cleanup[2].TS.SData.ActualArgs.DUT]
UseDef = False
Expr = "Right(Locals.TestSocketName,4)"
ParamType = 2

[DEF, SF.Seq[3].Cleanup[2]]
%NAME = "POST BATCH"

[SF.Seq[3].Cleanup[3].TS]
Id = "ID#:mS1P1TyV8BGJ68yCf5KpWB"

[DEF, SF.Seq[3].Cleanup[3]]
%NAME = "Setting Running Signal to False in case of error"

[SF.Seq[3].Cleanup[4].TS]
Id = "ID#:mi1P1TyV8BGJ68yCf5KpWB"

[DEF, SF.Seq[3].Cleanup[4].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[3].Cleanup[4].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[3].Cleanup[4].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[3].Cleanup[4].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[3].Cleanup[4].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "False"
ParamType = 16
Flags = 0

[SF.Seq[3].Cleanup[4].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_\"+Locals.CHMB+\"_Running\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[3].Cleanup[4].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[3].Cleanup[4]]
%NAME = "Setting Running signal to False"

[SF.Seq[3].Cleanup[5].TS]
Id = "ID#:OCFEE7/57xG53NQli0T1uC"
PostExpr = "FileGlobals.SequenceFinished = True"

[DEF, SF.Seq[3].Cleanup[5]]
%NAME = "Send the signal that Parallel sequence needs to finish"

[DEF, SF.Seq[3].RTS]
Type = Num
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
CopyStepsOnOverriding = Bool
OptimizeNonReentrantCalls = Bool
Priority = Num
ShowEPAlways = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool

[SF.Seq[3].RTS]
%FLG: Type = 4194304
%FLG: EPNameExpr = 4194304
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: CopyStepsOnOverriding = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
Priority = 2953567917
%FLG: Priority = 4194304
%FLG: ShowEPAlways = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304

[DEF, SF.Seq[3].Requirements]
Links = Strs

[SF.Seq[3].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[4]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Board Marker"

[SF.Seq[4]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [0]
%FLG: Main = 4194304
%HI: Setup = [1]
%FLG: Setup = 4194304
%HI: Cleanup = [1]
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[4].Locals]
ResultList = Objs

[DEF, SF.Seq[4].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[4].Locals]
%FLG: ResultList = 4194304

[DEF, SF.Seq[4].Main]
%[0] = Step
%TYPE: %[0] = "NI_Wait"

[SF.Seq[4].Main[0].TS]
Id = "ID#:Z8Ug9A6S8BGJ5cyCf5KpWB"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[4].Main[0].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[4].Main[0].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[4].Main[0]]
SeqCallName = "Wait for Marker to mark device"
TimeExpr = "0.5"

[DEF, SF.Seq[4].Main[0]]
%NAME = "Wait for Marker to mark device"

[DEF, SF.Seq[4].Setup]
%[0] = Step
%TYPE: %[0] = "NoffzUTP_IOSwitchSPSTSet"
%[1] = Step
%TYPE: %[1] = "NoffzUTP_IOSwitchSPSTSet"

[SF.Seq[4].Setup[0].TS]
Id = "ID#:ZcUg9A6S8BGJ5cyCf5KpWB"

[DEF, SF.Seq[4].Setup[0].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[4].Setup[0].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.Switch.SPST.Position.Set"
Trace = "Off"

[DEF, SF.Seq[4].Setup[0].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[4].Setup[0].TS.SData.ActualArgs]
ChannelName = "TYPE, SequenceArgument"
SwitchPosition = "TYPE, SequenceArgument"

[SF.Seq[4].Setup[0].TS.SData.ActualArgs.ChannelName]
UseDef = False
Expr = "\"SCU_MARKER_GND_DUT\"+Str(RunState.TestSockets.MyIndex +1)"
ParamType = 2
Flags = 0

[SF.Seq[4].Setup[0].TS.SData.ActualArgs.SwitchPosition]
UseDef = False
Expr = "1"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[4].Setup[0].TS.SData.Prototype]
ChannelName = Str
SwitchPosition = Num

[SF.Seq[4].Setup[0].TS.SData.Prototype.SwitchPosition]
%COMMENT = "0:Open; 1:Closed"

[DEF, SF.Seq[4].Setup[0]]
%NAME = "Close Board Marker GND"

[SF.Seq[4].Setup[1].TS]
Id = "ID#:ZsUg9A6S8BGJ5cyCf5KpWB"

[DEF, SF.Seq[4].Setup[1].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[4].Setup[1].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.Switch.SPST.Position.Set"
Trace = "Off"

[DEF, SF.Seq[4].Setup[1].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[4].Setup[1].TS.SData.ActualArgs]
ChannelName = "TYPE, SequenceArgument"
SwitchPosition = "TYPE, SequenceArgument"

[SF.Seq[4].Setup[1].TS.SData.ActualArgs.ChannelName]
UseDef = False
Expr = "\"SCU_MARKER_V+_DUT\"+Str(RunState.TestSockets.MyIndex +1)"
ParamType = 2
Flags = 0

[SF.Seq[4].Setup[1].TS.SData.ActualArgs.SwitchPosition]
UseDef = False
Expr = "1"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[4].Setup[1].TS.SData.Prototype]
ChannelName = Str
SwitchPosition = Num

[SF.Seq[4].Setup[1].TS.SData.Prototype.SwitchPosition]
%COMMENT = "0:Open; 1:Closed"

[DEF, SF.Seq[4].Setup[1]]
%NAME = "Close Board Marker V+"

[DEF, SF.Seq[4].Cleanup]
%[0] = Step
%TYPE: %[0] = "NoffzUTP_IOSwitchSPSTSet"
%[1] = Step
%TYPE: %[1] = "NoffzUTP_IOSwitchSPSTSet"

[SF.Seq[4].Cleanup[0].TS]
Id = "ID#:aMUg9A6S8BGJ5cyCf5KpWB"

[DEF, SF.Seq[4].Cleanup[0].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[4].Cleanup[0].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.Switch.SPST.Position.Set"
Trace = "Off"

[DEF, SF.Seq[4].Cleanup[0].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[4].Cleanup[0].TS.SData.ActualArgs]
ChannelName = "TYPE, SequenceArgument"
SwitchPosition = "TYPE, SequenceArgument"

[SF.Seq[4].Cleanup[0].TS.SData.ActualArgs.ChannelName]
UseDef = False
Expr = "\"SCU_MARKER_V+_DUT\"+Str(RunState.TestSockets.MyIndex +1)"
ParamType = 2
Flags = 0

[SF.Seq[4].Cleanup[0].TS.SData.ActualArgs.SwitchPosition]
UseDef = False
Expr = "0"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[4].Cleanup[0].TS.SData.Prototype]
ChannelName = Str
SwitchPosition = Num

[SF.Seq[4].Cleanup[0].TS.SData.Prototype.SwitchPosition]
%COMMENT = "0:Open; 1:Closed"

[DEF, SF.Seq[4].Cleanup[0]]
%NAME = "Open Board Marker V+"

[SF.Seq[4].Cleanup[1].TS]
Id = "ID#:acUg9A6S8BGJ5cyCf5KpWB"

[DEF, SF.Seq[4].Cleanup[1].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[4].Cleanup[1].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.Switch.SPST.Position.Set"
Trace = "Off"

[DEF, SF.Seq[4].Cleanup[1].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[4].Cleanup[1].TS.SData.ActualArgs]
ChannelName = "TYPE, SequenceArgument"
SwitchPosition = "TYPE, SequenceArgument"

[SF.Seq[4].Cleanup[1].TS.SData.ActualArgs.ChannelName]
UseDef = False
Expr = "\"SCU_MARKER_GND_DUT\"+Str(RunState.TestSockets.MyIndex +1)"
ParamType = 2
Flags = 0

[SF.Seq[4].Cleanup[1].TS.SData.ActualArgs.SwitchPosition]
UseDef = False
Expr = "0"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[4].Cleanup[1].TS.SData.Prototype]
ChannelName = Str
SwitchPosition = Num

[SF.Seq[4].Cleanup[1].TS.SData.Prototype.SwitchPosition]
%COMMENT = "0:Open; 1:Closed"

[DEF, SF.Seq[4].Cleanup[1]]
%NAME = "Open Board Marker GND"

[DEF, SF.Seq[4].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[4].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[4].Requirements]
Links = Strs

[SF.Seq[4].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[5]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Post Batch - ADDED"

[DEF, SF.Seq[5].Parameters]
DUT = Str

[SF.Seq[5].Parameters]
%FLG: DUT = 4

[SF.Seq[5]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [7]
%FLG: Main = 4194304
%HI: Setup = [0]
%FLG: Setup = 4194304
%HI: Cleanup = [0]
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[5].Locals]
ResultList = Objs

[DEF, SF.Seq[5].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[5].Locals]
%FLG: ResultList = 4194304

[DEF, SF.Seq[5].Main]
%[0] = Step
%TYPE: %[0] = "NI_Flow_If"
%[1] = Step
%TYPE: %[1] = "Statement"
%[2] = Step
%TYPE: %[2] = "NI_Flow_If"
%[3] = Step
%TYPE: %[3] = "Statement"
%[4] = Step
%TYPE: %[4] = "NI_Flow_ElseIf"
%[5] = Step
%TYPE: %[5] = "Statement"
%[6] = Step
%TYPE: %[6] = "NI_Flow_End"
%[7] = Step
%TYPE: %[7] = "NI_Flow_End"

[SF.Seq[5].Main[0].TS]
Id = "ID#:L0ECI1n77xG53tQli0T1uC"

[SF.Seq[5].Main[0]]
ConditionExpr = "Parameters.DUT == \"DUT1\"//RunState.TestSockets.MyIndex == 0"
%COMMENT = "Let's say that Test Soscket 0 is Master, and Test Socket 1 will wait for him to finish this task"

[DEF, SF.Seq[5].Main[0]]
%NAME = "If"

[SF.Seq[5].Main[1].TS]
Id = "ID#:ULxiYnv67xG53dQli0T1uC"
PostExpr = "StationGlobals.Automation.TerminationInCHMB1 = False,\nStationGlobals.Automation.ErrorInCHMB1 = False"

[DEF, SF.Seq[5].Main[1]]
%NAME = "ResetTermintion and Error in Sequence to False"

[SF.Seq[5].Main[2].TS]
Id = "ID#:HAcp7HD67xG53dQli0T1uC"

[SF.Seq[5].Main[2]]
ConditionExpr Line0001 = "StationGlobals.SequenceStates[0] == Enums.SEQUENCE_STATE.ERROR || StationGlobals.SequenceStates[1] == Enums.SEQUENCE_STA"
ConditionExpr Line0002 = "TE.ERROR"
%COMMENT Line0001 = "StationGlobals.SequenceStates[\"CHMB1_DUT1\"] == Enums.SEQUENCE_STATE.ERROR || StationGlobals.SequenceStates[\"CHMB1_DUT"
%COMMENT Line0002 = "2\"] == Enums.SEQUENCE_STATE.ERROR"

[DEF, SF.Seq[5].Main[2]]
%NAME = "If"

[SF.Seq[5].Main[3].TS]
Id = "ID#:HQcp7HD67xG53dQli0T1uC"
PostExpr = "StationGlobals.Automation.ErrorInCHMB1= True"

[DEF, SF.Seq[5].Main[3]]
%NAME = "Set Error in Sequence to True (In one of the Operations ERROR happend)"

[SF.Seq[5].Main[4].TS]
Id = "ID#:Hgcp7HD67xG53dQli0T1uC"

[SF.Seq[5].Main[4]]
ConditionExpr Line0001 = "StationGlobals.SequenceStates[0] == Enums.SEQUENCE_STATE.Terminated || StationGlobals.SequenceStates[1] == Enums.SEQUENC"
ConditionExpr Line0002 = "E_STATE.Terminated"

[DEF, SF.Seq[5].Main[4]]
%NAME = "Else If"

[SF.Seq[5].Main[5].TS]
Id = "ID#:Hwcp7HD67xG53dQli0T1uC"
PostExpr = "StationGlobals.Automation.TerminationInCHMB1 = True"

[DEF, SF.Seq[5].Main[5]]
%NAME = "Set Termintion in Sequnce to True"

[SF.Seq[5].Main[6].TS]
Id = "ID#:IAcp7HD67xG53dQli0T1uC"

[DEF, SF.Seq[5].Main[6]]
%NAME = "End"

[SF.Seq[5].Main[7].TS]
Id = "ID#:MUECI1n77xG53tQli0T1uC"

[DEF, SF.Seq[5].Main[7]]
%NAME = "End"

[DEF, SF.Seq[5].Setup]
%[0] = Step
%TYPE: %[0] = "NI_Rendezvous"

[SF.Seq[5].Setup[0].TS]
Id = "ID#:MxFcDED77xG53tQli0T1uC"
Mode = "Skip"
IgnoreRTE = True
%HI: AdditionalResultsHints = [2]

[DEF, SF.Seq[5].Setup[0].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"
%[1] = "TYPE, NI_CustomResult"
%[2] = "TYPE, NI_CustomResult"

[SF.Seq[5].Setup[0].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"ALREADY_EXISTS_HINT\")"
ValueToLog = "Evaluate(Step.AlreadyExistsExpr)"

[SF.Seq[5].Setup[0].TS.AdditionalResultsHints[1]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"RENDEZVOUS_REFERENCE_LIFETIME_HINT\")"
ValueToLog Line0001 = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", (Step.Lifetime == 0 ? \"LIFETIME_SEQUENCE\" :\n    Step.Lifetime == 1 ? \"LIFETIME_T"
ValueToLog Line0002 = "HREAD\" :\n    Step.Lifetime == 2 ? \"LIFETIME_REFERENCE\" :\n    Step.Lifetime == 3 ? \"LIFETIME_EXECUTION\" :\n    \"\"
ValueToLog Line0003 = ""))"

[SF.Seq[5].Setup[0].TS.AdditionalResultsHints[2]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"NUMBER_OF_THREADS_PER_RENDEZVOUS_HINT\")"
ValueToLog = "Evaluate(Step.RendezvousCountExpr)"

[SF.Seq[5].Setup[0]]
NameOrRefExpr = "\"POST_BATCH\""
Lifetime = 0

[DEF, SF.Seq[5].Setup[0]]
%NAME = "Create rendezvous for POST BATCH for both TS"

[DEF, SF.Seq[5].Cleanup]
%[0] = Step
%TYPE: %[0] = "NI_Rendezvous"

[SF.Seq[5].Cleanup[0].TS]
Id = "ID#:NBFcDED77xG53tQli0T1uC"
Mode = "Skip"
IgnoreRTE = True
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[5].Cleanup[0].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[5].Cleanup[0].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"TIMEOUT\")"
ValueToLog = "Step.TimeoutEnabled ? Str(Evaluate(Step.TimeoutExpr)) : ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"DISABLED\")"

[DEF, SF.Seq[5].Cleanup[0]]
Result = Obj
%NAME = "Wait POST BATCH operation"

[DEF, SF.Seq[5].Cleanup[0].Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"
TimeoutOccurred = Bool

[SF.Seq[5].Cleanup[0].Result]
%FLG: Error = 4194304
%FLG: Status = 4194304
%FLG: ReportText = 4194304
%FLG: Common = 0

[SF.Seq[5].Cleanup[0]]
%FLG: Result = 4194304
NameOrRefExpr = "\"POST_BATCH\""
Operation = 1

[DEF, SF.Seq[5].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[5].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[5].Requirements]
Links = Strs

[SF.Seq[5].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[6]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "End"

[SF.Seq[6]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%FLG: Main = 4194304
%FLG: Setup = 4194304
%FLG: Cleanup = 4194304
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312
%COMMENT Line0001 = "This entry point is executed only once, when the Test Socket is closed. Put here the code for socket specific deinitiali"
%COMMENT Line0002 = "zation."

[DEF, SF.Seq[6].Locals]
ResultList = Objs

[DEF, SF.Seq[6].Locals.ResultList]
%EPTYPE = TEResult

[DEF, SF.Seq[6].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[6].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[6].Requirements]
Links = Strs

[SF.Seq[6].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[7]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Checking of the operating mode"

[DEF, SF.Seq[7].Parameters]
Msg = Str

[SF.Seq[7].Parameters]
%FLG: Msg = 4

[SF.Seq[7]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [11]
%FLG: Main = 4194304
%FLG: Setup = 4194304
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[7].Locals]
ResultList = Objs
E_STOP = Bool
TestSocketName = Str

[DEF, SF.Seq[7].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[7].Locals]
%FLG: ResultList = 4194304

[DEF, SF.Seq[7].Main]
%[0] = Step
%TYPE: %[0] = "NI_Flow_While"
%[1] = Step
%TYPE: %[1] = "NI_Flow_If"
%[2] = Step
%TYPE: %[2] = "Statement"
%[3] = Step
%TYPE: %[3] = "Statement"
%[4] = Step
%TYPE: %[4] = "NI_Flow_ElseIf"
%[5] = Step
%TYPE: %[5] = "Label"
%[6] = Step
%TYPE: %[6] = "NI_Flow_ElseIf"
%[7] = Step
%TYPE: %[7] = "Statement"
%[8] = Step
%TYPE: %[8] = "Statement"
%[9] = Step
%TYPE: %[9] = "NI_Flow_End"
%[10] = Step
%TYPE: %[10] = "NI_Wait"
%[11] = Step
%TYPE: %[11] = "NI_Flow_End"

[SF.Seq[7].Main[0].TS]
Id = "ID#:Y7qFa99G8BGtpMyCf35SiD"

[SF.Seq[7].Main[0]]
ConditionExpr = "FileGlobals.SequenceFinished != True"

[DEF, SF.Seq[7].Main[0]]
%NAME = "While"

[SF.Seq[7].Main[1].TS]
Id = "ID#:ZLqFa99G8BGtpMyCf35SiD"

[SF.Seq[7].Main[1]]
ConditionExpr = "StationGlobals.CurrentOperatingMode == 0 // Manual Mode"

[DEF, SF.Seq[7].Main[1]]
%NAME = "If"

[SF.Seq[7].Main[2].TS]
Id = "ID#:ZbqFa99G8BGtpMyCf35SiD"
PostExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] = Enums.SEQUENCE_STATE.Terminated"

[DEF, SF.Seq[7].Main[2]]
%NAME = "Change the Sequence State to Terminated"

[SF.Seq[7].Main[3].TS]
Id = "ID#:ZrqFa99G8BGtpMyCf35SiD"
PostExpr = "StationGlobals.RestartRequested[RunState.TestSockets.MyIndex] = True,\nRunState.Execution.Terminate()"

[DEF, SF.Seq[7].Main[3]]
%NAME = "Terminate Execution"

[SF.Seq[7].Main[4].TS]
Id = "ID#:Z7qFa99G8BGtpMyCf35SiD"

[SF.Seq[7].Main[4]]
ConditionExpr = "StationGlobals.CurrentOperatingMode == 1 //Automatic mode"

[DEF, SF.Seq[7].Main[4]]
%NAME = "Else If"

[SF.Seq[7].Main[5].TS]
Id = "ID#:aLqFa99G8BGtpMyCf35SiD"

[DEF, SF.Seq[7].Main[5]]
%NAME = "There is no product selection"

[SF.Seq[7].Main[6].TS]
Id = "ID#:abqFa99G8BGtpMyCf35SiD"

[SF.Seq[7].Main[6]]
ConditionExpr = "StationGlobals.CurrentOperatingMode == 100 //Alarm mode"

[DEF, SF.Seq[7].Main[6]]
%NAME = "Else If"

[SF.Seq[7].Main[7].TS]
Id = "ID#:arqFa99G8BGtpMyCf35SiD"
PostExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] = Enums.SEQUENCE_STATE.Terminated"

[DEF, SF.Seq[7].Main[7]]
%NAME = "Change the Sequence State to Terminated"

[SF.Seq[7].Main[8].TS]
Id = "ID#:a7qFa99G8BGtpMyCf35SiD"
PostExpr = "StationGlobals.RestartRequested[RunState.TestSockets.MyIndex] = True,\nRunState.Execution.Terminate()"

[DEF, SF.Seq[7].Main[8]]
%NAME = "Terminate Execution"

[SF.Seq[7].Main[9].TS]
Id = "ID#:bLqFa99G8BGtpMyCf35SiD"

[DEF, SF.Seq[7].Main[9]]
%NAME = "End"

[SF.Seq[7].Main[10].TS]
Id = "ID#:bbqFa99G8BGtpMyCf35SiD"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[7].Main[10].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[7].Main[10].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[7].Main[10]]
SeqCallName = "End"
TimeExpr = "0.1"

[DEF, SF.Seq[7].Main[10]]
%NAME = "Wait 100ms"

[SF.Seq[7].Main[11].TS]
Id = "ID#:brqFa99G8BGtpMyCf35SiD"

[DEF, SF.Seq[7].Main[11]]
%NAME = "End"

[DEF, SF.Seq[7].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[7].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[7].Requirements]
Links = Strs

[SF.Seq[7].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[8]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Collect Test Results"

[DEF, SF.Seq[8].Parameters]
MainSequenceResult = Ref
AcquireTesting = "TYPE, AquireTesting"
FailureSet = Strs
ResultPrint = Strs
SetpointPrint = Strs
Tx = Strs
Rx = Strs
Report = Obj

[SF.Seq[8].Parameters]
%FLG: AcquireTesting = 4
%FLG: FailureSet = 4
%FLG: ResultPrint = 4
%FLG: SetpointPrint = 4
%FLG: Tx = 4
%FLG: Rx = 4
%FLG: Report = 4

[DEF, SF.Seq[8].Parameters.Report]
TestNames = Strs
Statuses = Strs

[SF.Seq[8].Parameters.Report]
%HI: TestNames = [200]
%FLG: TestNames = 4
%HI: Statuses = [200]
%FLG: Statuses = 4

[SF.Seq[8]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [34]
%FLG: Main = 4194304
%FLG: Setup = 4194304
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[8].Locals]
ResultList = Objs
DUT_Results = Objs
SeqIndex = Num
CurrentSequence = TEResult
SubSeqIndex = Num
CurrentTestORSubSequence = TEResult
SubSubSeqIndex = Num
CurrentTest = TEResult
Name = Strs
Status = Strs
TSNumber = Strs
TSDescription = Strs
TSNominalValueSet = Nums
TSLowerToleranceSet = Nums
TSUpperToleranceSet = Nums
TSUnitSet = Strs
TSValueSet = Nums
FailureSet = Strs
FileAttachmentSet = Strs
ValidResults = Num
FailedTests = Num

[DEF, SF.Seq[8].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[8].Locals]
%FLG: ResultList = 4194304

[DEF, SF.Seq[8].Locals.DUT_Results]
%EPTYPE = TEResult

[DEF, SF.Seq[8].Main]
%[0] = Step
%TYPE: %[0] = "Statement"
%[1] = Step
%TYPE: %[1] = "Statement"
%[2] = Step
%TYPE: %[2] = "Label"
%[3] = Step
%TYPE: %[3] = "NI_Flow_ForEach"
%[4] = Step
%TYPE: %[4] = "NI_Flow_If"
%[5] = Step
%TYPE: %[5] = "NI_Flow_ForEach"
%[6] = Step
%TYPE: %[6] = "NI_Flow_If"
%[7] = Step
%TYPE: %[7] = "NI_Flow_If"
%[8] = Step
%TYPE: %[8] = "NI_Flow_ForEach"
%[9] = Step
%TYPE: %[9] = "NI_Flow_If"
%[10] = Step
%TYPE: %[10] = "SequenceCall"
%[11] = Step
%TYPE: %[11] = "NI_Flow_End"
%[12] = Step
%TYPE: %[12] = "NI_Flow_End"
%[13] = Step
%TYPE: %[13] = "NI_Flow_Else"
%[14] = Step
%TYPE: %[14] = "SequenceCall"
%[15] = Step
%TYPE: %[15] = "NI_Flow_End"
%[16] = Step
%TYPE: %[16] = "NI_Flow_End"
%[17] = Step
%TYPE: %[17] = "NI_Flow_End"
%[18] = Step
%TYPE: %[18] = "NI_Flow_End"
%[19] = Step
%TYPE: %[19] = "NI_Flow_End"
%[20] = Step
%TYPE: %[20] = "Label"
%[21] = Step
%TYPE: %[21] = "Statement"
%[22] = Step
%TYPE: %[22] = "Label"
%[23] = Step
%TYPE: %[23] = "Label"
%[24] = Step
%TYPE: %[24] = "NI_Flow_If"
%[25] = Step
%TYPE: %[25] = "Statement"
%[26] = Step
%TYPE: %[26] = "Statement"
%[27] = Step
%TYPE: %[27] = "NI_Flow_ElseIf"
%[28] = Step
%TYPE: %[28] = "Statement"
%[29] = Step
%TYPE: %[29] = "Statement"
%[30] = Step
%TYPE: %[30] = "NI_Flow_End"
%[31] = Step
%TYPE: %[31] = "Label"
%[32] = Step
%TYPE: %[32] = "Statement"
%[33] = Step
%TYPE: %[33] = "Statement"
%[34] = Step
%TYPE: %[34] = "Statement"

[SF.Seq[8].Main[0].TS]
Id = "ID#:J2v4H5T67xG53dQli0T1uC"
PostExpr = "Locals.DUT_Results = Parameters.MainSequenceResult.TS.SequenceCall.ResultList"

[SF.Seq[8].Main[0]]
%COMMENT = "Extract results from main sequence"

[DEF, SF.Seq[8].Main[0]]
%NAME = "Populate Result List"

[SF.Seq[8].Main[1].TS]
Id = "ID#:JwE+KZT67xG53dQli0T1uC"
PostExpr Line0001 = "// Set array size to maximum number of tests\nSetNumElements(Locals.Name , 600 ),\nSetNumElements(Locals.Status, 600),\n"
PostExpr Line0002 = "SetNumElements(Locals.TSNumber, 600),\nSetNumElements(Locals.TSDescription, 600),\nSetNumElements(Locals.TSNominalValueS"
PostExpr Line0003 = "et, 600),\nSetNumElements(Locals.TSLowerToleranceSet, 600),\nSetNumElements(Locals.TSUpperToleranceSet, 600),\nSetNumEle"
PostExpr Line0004 = "ments(Locals.TSUnitSet, 600),\nSetNumElements(Locals.TSValueSet, 600),\n\nLocals.ValidResults = 0,\nLocals.FailedTests ="
PostExpr Line0005 = " 0,\n\nSetNumElements(Parameters.ResultPrint, 0), \nSetNumElements(Parameters.SetpointPrint, 0),\nSetNumElements(Paramet"
PostExpr Line0006 = "ers.Tx, 0), \nSetNumElements(Parameters.Rx, 0)\n\n"

[SF.Seq[8].Main[1]]
%COMMENT = "Set size to maximum number of results"

[DEF, SF.Seq[8].Main[1]]
%NAME = "Init Arrays"

[SF.Seq[8].Main[2].TS]
Id = "ID#:JxF5Wpn67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[8].Main]
%FLG: %[2] = 67108864
%FLG: %[20] = 67108864
%FLG: %[22] = 67108864
%FLG: %[31] = 67108864

[SF.Seq[8].Main[3].TS]
Id = "ID#:mbE5Awr57xG52tQli0T1uC"

[SF.Seq[8].Main[3]]
ArrayExpr = "Locals.DUT_Results"
ArrayElementExpr = "Locals.CurrentSequence"
OffsetExpr = "Locals.SeqIndex"
%COMMENT = "Loop through every Sequence"

[DEF, SF.Seq[8].Main[3]]
%NAME = "For Each"

[SF.Seq[8].Main[4].TS]
Id = "ID#:mrE5Awr57xG52tQli0T1uC"

[SF.Seq[8].Main[4]]
ConditionExpr = "Locals.CurrentSequence.Status != \"Skipped\""
%COMMENT = "Skipped Sequence we won' t consider"

[DEF, SF.Seq[8].Main[4]]
%NAME = "If"

[SF.Seq[8].Main[5].TS]
Id = "ID#:m7E5Awr57xG52tQli0T1uC"

[SF.Seq[8].Main[5]]
ArrayExpr = "Locals.CurrentSequence.TS.SequenceCall.ResultList"
ArrayElementExpr = "Locals.CurrentTestORSubSequence"
OffsetExpr = "Locals.SubSeqIndex"
%COMMENT = "Loop through Test OR Subsequence inside Sequence"

[DEF, SF.Seq[8].Main[5]]
%NAME = "For Each"

[SF.Seq[8].Main[6].TS]
Id = "ID#:nLE5Awr57xG52tQli0T1uC"

[SF.Seq[8].Main[6]]
ConditionExpr = "Locals.CurrentTestORSubSequence.Status != \"Skipped\""
%COMMENT = "Skipped Test OR SubSequence we won' t consider"

[DEF, SF.Seq[8].Main[6]]
%NAME = "If"

[SF.Seq[8].Main[7].TS]
Id = "ID#:nbE5Awr57xG52tQli0T1uC"

[SF.Seq[8].Main[7]]
ConditionExpr = "Locals.CurrentTestORSubSequence.TS.StepType == \"SequenceCall\""

[DEF, SF.Seq[8].Main[7]]
%NAME = "If"

[SF.Seq[8].Main[8].TS]
Id = "ID#:nrE5Awr57xG52tQli0T1uC"

[SF.Seq[8].Main[8]]
ArrayExpr = "Locals.CurrentTestORSubSequence.TS.SequenceCall.ResultList"
ArrayElementExpr = "Locals.CurrentTest"
OffsetExpr = "Locals.SubSubSeqIndex"
%COMMENT = "Loop through every Test inside SubSequence"

[DEF, SF.Seq[8].Main[8]]
%NAME = "For Each"

[SF.Seq[8].Main[9].TS]
Id = "ID#:n7E5Awr57xG52tQli0T1uC"

[SF.Seq[8].Main[9]]
ConditionExpr = "Locals.CurrentTest.Status != \"Skipped\""
%COMMENT = "Skipped Test we won't consider"

[DEF, SF.Seq[8].Main[9]]
%NAME = "If"

[SF.Seq[8].Main[10].TS]
Id = "ID#:obE5Awr57xG52tQli0T1uC"

[DEF, SF.Seq[8].Main[10].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[8].Main[10].TS.SData]
SeqName = "Get Measurment Data from Test"
UseCurFile = True

[DEF, SF.Seq[8].Main[10].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[8].Main[10].TS.SData.ActualArgs]
Name = "TYPE, SequenceArgument"
Status = "TYPE, SequenceArgument"
TSNumber = "TYPE, SequenceArgument"
TSDescription = "TYPE, SequenceArgument"
TSNominalValueSet = "TYPE, SequenceArgument"
TSLowerToleranceSet = "TYPE, SequenceArgument"
TSUpperToleranceSet = "TYPE, SequenceArgument"
TSUnitSet = "TYPE, SequenceArgument"
TSValueSet = "TYPE, SequenceArgument"
FileAttachmentSet = "TYPE, SequenceArgument"
FailureSet = "TYPE, SequenceArgument"
ResultPrint = "TYPE, SequenceArgument"
SetpointPrint = "TYPE, SequenceArgument"
Tx = "TYPE, SequenceArgument"
Rx = "TYPE, SequenceArgument"
ValidResults = "TYPE, SequenceArgument"
FailedTests = "TYPE, SequenceArgument"
CurrentTest = "TYPE, SequenceArgument"

[SF.Seq[8].Main[10].TS.SData.ActualArgs.Name]
UseDef = False
Expr = "Locals.Name"
ParamType = 256

[SF.Seq[8].Main[10].TS.SData.ActualArgs.Status]
UseDef = False
Expr = "Locals.Status"
ParamType = 256

[SF.Seq[8].Main[10].TS.SData.ActualArgs.TSNumber]
UseDef = False
Expr = "Locals.TSNumber"
ParamType = 256

[SF.Seq[8].Main[10].TS.SData.ActualArgs.TSDescription]
UseDef = False
Expr = "Locals.TSDescription"
ParamType = 256

[SF.Seq[8].Main[10].TS.SData.ActualArgs.TSNominalValueSet]
UseDef = False
Expr = "Locals.TSNominalValueSet"
ParamType = 512
ParamRepresentation = 1

[SF.Seq[8].Main[10].TS.SData.ActualArgs.TSLowerToleranceSet]
UseDef = False
Expr = "Locals.TSLowerToleranceSet"
ParamType = 512
ParamRepresentation = 1

[SF.Seq[8].Main[10].TS.SData.ActualArgs.TSUpperToleranceSet]
UseDef = False
Expr = "Locals.TSUpperToleranceSet"
ParamType = 512
ParamRepresentation = 1

[SF.Seq[8].Main[10].TS.SData.ActualArgs.TSUnitSet]
UseDef = False
Expr = "Locals.TSUnitSet"
ParamType = 256

[SF.Seq[8].Main[10].TS.SData.ActualArgs.TSValueSet]
UseDef = False
Expr = "Locals.TSValueSet"
ParamType = 512
ParamRepresentation = 1

[SF.Seq[8].Main[10].TS.SData.ActualArgs.FileAttachmentSet]
UseDef = False
Expr = "Locals.FileAttachmentSet"
ParamType = 256

[SF.Seq[8].Main[10].TS.SData.ActualArgs.FailureSet]
UseDef = False
Expr = "Parameters.FailureSet"
ParamType = 256

[SF.Seq[8].Main[10].TS.SData.ActualArgs.ResultPrint]
UseDef = False
Expr = "Parameters.ResultPrint"
ParamType = 256

[SF.Seq[8].Main[10].TS.SData.ActualArgs.SetpointPrint]
UseDef = False
Expr = "Parameters.SetpointPrint"
ParamType = 256

[SF.Seq[8].Main[10].TS.SData.ActualArgs.Tx]
UseDef = False
Expr = "Parameters.Tx"
ParamType = 256

[SF.Seq[8].Main[10].TS.SData.ActualArgs.Rx]
UseDef = False
Expr = "Parameters.Rx"
ParamType = 256

[SF.Seq[8].Main[10].TS.SData.ActualArgs.ValidResults]
UseDef = False
Expr = "Locals.ValidResults"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[8].Main[10].TS.SData.ActualArgs.FailedTests]
UseDef = False
Expr = "Locals.FailedTests"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[8].Main[10].TS.SData.ActualArgs.CurrentTest]
UseDef = False
Expr = "Locals.CurrentTest"
ParamType = 1

[SF.Seq[8].Main[10]]
%COMMENT = "DECICDE WHAT TO DO FOR RESPONSES / ADD RESULTS"

[DEF, SF.Seq[8].Main[10]]
%NAME = "Get Measurment Data from Test"

[SF.Seq[8].Main[11].TS]
Id = "ID#:orE5Awr57xG52tQli0T1uC"

[DEF, SF.Seq[8].Main[11]]
%NAME = "End"

[SF.Seq[8].Main[12].TS]
Id = "ID#:o7E5Awr57xG52tQli0T1uC"

[DEF, SF.Seq[8].Main[12]]
%NAME = "End"

[SF.Seq[8].Main[13].TS]
Id = "ID#:pLE5Awr57xG52tQli0T1uC"

[DEF, SF.Seq[8].Main[13]]
%NAME = "Else"

[SF.Seq[8].Main[14].TS]
Id = "ID#:Y+4y+Jj67xG53dQli0T1uC"

[DEF, SF.Seq[8].Main[14].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[8].Main[14].TS.SData]
SeqName = "Get Measurment Data from Test"
UseCurFile = True

[DEF, SF.Seq[8].Main[14].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[8].Main[14].TS.SData.ActualArgs]
Name = "TYPE, SequenceArgument"
Status = "TYPE, SequenceArgument"
TSNumber = "TYPE, SequenceArgument"
TSDescription = "TYPE, SequenceArgument"
TSNominalValueSet = "TYPE, SequenceArgument"
TSLowerToleranceSet = "TYPE, SequenceArgument"
TSUpperToleranceSet = "TYPE, SequenceArgument"
TSUnitSet = "TYPE, SequenceArgument"
TSValueSet = "TYPE, SequenceArgument"
FileAttachmentSet = "TYPE, SequenceArgument"
FailureSet = "TYPE, SequenceArgument"
ResultPrint = "TYPE, SequenceArgument"
SetpointPrint = "TYPE, SequenceArgument"
Tx = "TYPE, SequenceArgument"
Rx = "TYPE, SequenceArgument"
ValidResults = "TYPE, SequenceArgument"
FailedTests = "TYPE, SequenceArgument"
CurrentTest = "TYPE, SequenceArgument"

[SF.Seq[8].Main[14].TS.SData.ActualArgs.Name]
UseDef = False
Expr = "Locals.Name"
ParamType = 256

[SF.Seq[8].Main[14].TS.SData.ActualArgs.Status]
UseDef = False
Expr = "Locals.Status"
ParamType = 256

[SF.Seq[8].Main[14].TS.SData.ActualArgs.TSNumber]
UseDef = False
Expr = "Locals.TSNumber"
ParamType = 256

[SF.Seq[8].Main[14].TS.SData.ActualArgs.TSDescription]
UseDef = False
Expr = "Locals.TSDescription"
ParamType = 256

[SF.Seq[8].Main[14].TS.SData.ActualArgs.TSNominalValueSet]
UseDef = False
Expr = "Locals.TSNominalValueSet"
ParamType = 512
ParamRepresentation = 1

[SF.Seq[8].Main[14].TS.SData.ActualArgs.TSLowerToleranceSet]
UseDef = False
Expr = "Locals.TSLowerToleranceSet"
ParamType = 512
ParamRepresentation = 1

[SF.Seq[8].Main[14].TS.SData.ActualArgs.TSUpperToleranceSet]
UseDef = False
Expr = "Locals.TSUpperToleranceSet"
ParamType = 512
ParamRepresentation = 1

[SF.Seq[8].Main[14].TS.SData.ActualArgs.TSUnitSet]
UseDef = False
Expr = "Locals.TSUnitSet"
ParamType = 256

[SF.Seq[8].Main[14].TS.SData.ActualArgs.TSValueSet]
UseDef = False
Expr = "Locals.TSValueSet"
ParamType = 512
ParamRepresentation = 1

[SF.Seq[8].Main[14].TS.SData.ActualArgs.FileAttachmentSet]
UseDef = False
Expr = "Locals.FileAttachmentSet"
ParamType = 256

[SF.Seq[8].Main[14].TS.SData.ActualArgs.FailureSet]
UseDef = False
Expr = "Parameters.FailureSet"
ParamType = 256

[SF.Seq[8].Main[14].TS.SData.ActualArgs.ResultPrint]
UseDef = False
Expr = "Parameters.ResultPrint"
ParamType = 256

[SF.Seq[8].Main[14].TS.SData.ActualArgs.SetpointPrint]
UseDef = False
Expr = "Parameters.SetpointPrint"
ParamType = 256

[SF.Seq[8].Main[14].TS.SData.ActualArgs.Tx]
UseDef = False
Expr = "Parameters.Tx"
ParamType = 256

[SF.Seq[8].Main[14].TS.SData.ActualArgs.Rx]
UseDef = False
Expr = "Parameters.Rx"
ParamType = 256

[SF.Seq[8].Main[14].TS.SData.ActualArgs.ValidResults]
UseDef = False
Expr = "Locals.ValidResults"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[8].Main[14].TS.SData.ActualArgs.FailedTests]
UseDef = False
Expr = "Locals.FailedTests"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[8].Main[14].TS.SData.ActualArgs.CurrentTest]
UseDef = False
Expr = "Locals.CurrentTestORSubSequence"
ParamType = 1

[SF.Seq[8].Main[14]]
%COMMENT = "DECICDE WHAT TO DO FOR RESPONSES / ADD RESULTS"

[DEF, SF.Seq[8].Main[14]]
%NAME = "Get Measurment Data from Test"

[SF.Seq[8].Main[15].TS]
Id = "ID#:p7E5Awr57xG52tQli0T1uC"

[DEF, SF.Seq[8].Main[15]]
%NAME = "End"

[SF.Seq[8].Main[16].TS]
Id = "ID#:qLE5Awr57xG52tQli0T1uC"

[DEF, SF.Seq[8].Main[16]]
%NAME = "End"

[SF.Seq[8].Main[17].TS]
Id = "ID#:qbE5Awr57xG52tQli0T1uC"

[DEF, SF.Seq[8].Main[17]]
%NAME = "End"

[SF.Seq[8].Main[18].TS]
Id = "ID#:qrE5Awr57xG52tQli0T1uC"

[DEF, SF.Seq[8].Main[18]]
%NAME = "End"

[SF.Seq[8].Main[19].TS]
Id = "ID#:q7E5Awr57xG52tQli0T1uC"

[DEF, SF.Seq[8].Main[19]]
%NAME = "End"

[SF.Seq[8].Main[20].TS]
Id = "ID#:Dhz0BJn67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[8].Main[21].TS]
Id = "ID#:Dxz0BJn67xG53dQli0T1uC"
PostExpr Line0001 = "RemoveElements(Locals.Name, \"[\" + Str(Locals.ValidResults) + \"]\", (GetNumElements(Locals.Name)-Locals.ValidResults))"
PostExpr Line0002 = ",\nRemoveElements(Locals.Status, \"[\" + Str(Locals.ValidResults) + \"]\", (GetNumElements(Locals.Status)-Locals.ValidRe"
PostExpr Line0003 = "sults)),\nRemoveElements(Locals.TSNumber, \"[\" + Str(Locals.ValidResults) + \"]\", (GetNumElements(Locals.TSNumber)-Loc"
PostExpr Line0004 = "als.ValidResults)),\nRemoveElements(Locals.TSDescription, \"[\" + Str(Locals.ValidResults) + \"]\", (GetNumElements(Loca"
PostExpr Line0005 = "ls.TSDescription)-Locals.ValidResults)),\nRemoveElements(Locals.TSNominalValueSet, \"[\" + Str(Locals.ValidResults) + \""
PostExpr Line0006 = "]\", (GetNumElements(Locals.TSNominalValueSet)-Locals.ValidResults)),\nRemoveElements(Locals.TSLowerToleranceSet, \"[\" "
PostExpr Line0007 = "+ Str(Locals.ValidResults) + \"]\", (GetNumElements(Locals.TSLowerToleranceSet)-Locals.ValidResults)),\nRemoveElements(L"
PostExpr Line0008 = "ocals.TSUpperToleranceSet, \"[\" + Str(Locals.ValidResults) + \"]\", (GetNumElements(Locals.TSUpperToleranceSet)-Locals."
PostExpr Line0009 = "ValidResults)),\nRemoveElements(Locals.TSUnitSet, \"[\" + Str(Locals.ValidResults) + \"]\", (GetNumElements(Locals.TSUni"
PostExpr Line0010 = "tSet)-Locals.ValidResults)),\nRemoveElements(Locals.TSValueSet, \"[\" + Str(Locals.ValidResults) + \"]\", (GetNumElement"
PostExpr Line0011 = "s(Locals.TSValueSet)-Locals.ValidResults))"

[DEF, SF.Seq[8].Main[21]]
%NAME = "Cut Arrays"

[SF.Seq[8].Main[22].TS]
Id = "ID#:iXXnJJn67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[8].Main[23].TS]
Id = "ID#:fXXnJJn67xG53dQli0T1uC"

[DEF, SF.Seq[8].Main[23]]
%NAME = "-------------------Teminate and Error ------------"

[SF.Seq[8].Main[24].TS]
Id = "ID#:fnXnJJn67xG53dQli0T1uC"

[SF.Seq[8].Main[24]]
ConditionExpr = "Parameters.MainSequenceResult.Status == \"Terminated\" "

[DEF, SF.Seq[8].Main[24]]
%NAME = "If"

[SF.Seq[8].Main[25].TS]
Id = "ID#:f3XnJJn67xG53dQli0T1uC"
PostExpr Line0001 = "SetNumElements( Parameters.ResultPrint , Locals.FailedTests+1  ) , \nSetNumElements( Parameters.SetpointPrint , Locals.F"
PostExpr Line0002 = "ailedTests+1  ) ,\nSetNumElements( Parameters.Rx , Locals.FailedTests+1  ) , \nSetNumElements( Parameters.Tx , Locals.Fa"
PostExpr Line0003 = "iledTests+1  ) ,\n\n\nParameters.ResultPrint[Locals.FailedTests] = \"Test\",\nParameters.SetpointPrint[Locals.FailedTest"
PostExpr Line0004 = "s] =\"Sequence\",\nParameters.Tx[Locals.FailedTests] =  \"Terminated\" ,\nParameters.Rx[Locals.FailedTests] =  \"!!!!!\""
PostExpr Line0005 = " ,\n\nLocals.FailedTests ++ "

[DEF, SF.Seq[8].Main[25]]
%NAME = "Set Failure step"

[SF.Seq[8].Main[26].TS]
Id = "ID#:gHXnJJn67xG53dQli0T1uC"
PostExpr = "Parameters.FailureSet += {Locals.TSNumber[Locals.TSNumber.GetNumElements() - 2] + \"|\" + \"Termination in Sequence\"}"

[DEF, SF.Seq[8].Main[26]]
%NAME = "Set Failure step TCMES"

[SF.Seq[8].Main[27].TS]
Id = "ID#:gXXnJJn67xG53dQli0T1uC"

[SF.Seq[8].Main[27]]
ConditionExpr = "Parameters.MainSequenceResult.Status == \"Error\" "

[DEF, SF.Seq[8].Main[27]]
%NAME = "Else If"

[SF.Seq[8].Main[28].TS]
Id = "ID#:gnXnJJn67xG53dQli0T1uC"
PostExpr Line0001 = "SetNumElements( Parameters.ResultPrint , Locals.FailedTests+1  ) , \nSetNumElements( Parameters.SetpointPrint , Locals.F"
PostExpr Line0002 = "ailedTests+1  ) ,\nSetNumElements( Parameters.Rx , Locals.FailedTests+1  ) , \nSetNumElements( Parameters.Tx , Locals.Fa"
PostExpr Line0003 = "iledTests+1  ) ,\n\n\nParameters.ResultPrint[Locals.FailedTests] = \"Test\",\nParameters.SetpointPrint[Locals.FailedTest"
PostExpr Line0004 = "s] =\"Sequence\",\nParameters.Tx[Locals.FailedTests] =  \"has\" ,\nParameters.Rx[Locals.FailedTests] =  \"Error\" ,\n\nL"
PostExpr Line0005 = "ocals.FailedTests ++ "

[DEF, SF.Seq[8].Main[28]]
%NAME = "Set Failure step"

[SF.Seq[8].Main[29].TS]
Id = "ID#:g3XnJJn67xG53dQli0T1uC"
PostExpr = "Parameters.FailureSet += {Locals.TSNumber[Locals.TSNumber.GetNumElements() - 2] + \"|\" + \"Error in Sequence\"}"

[DEF, SF.Seq[8].Main[29]]
%NAME = "Set Failure step TCMES"

[SF.Seq[8].Main[30].TS]
Id = "ID#:hHXnJJn67xG53dQli0T1uC"

[DEF, SF.Seq[8].Main[30]]
%NAME = "End"

[SF.Seq[8].Main[31].TS]
Id = "ID#:IYpXOZn67xG53dQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[8].Main[32].TS]
Id = "ID#:GopXOZn67xG53dQli0T1uC"
PostExpr = "Locals.FailureSet = Parameters.FailureSet"

[DEF, SF.Seq[8].Main[32]]
%NAME = "Get Failure Set"

[SF.Seq[8].Main[33].TS]
Id = "ID#:G4pXOZn67xG53dQli0T1uC"
PostExpr Line0001 = "Parameters.AcquireTesting.AttributeSet = {},\nParameters.AcquireTesting.TSNumber = Locals.TSNumber,\nParameters.AcquireT"
PostExpr Line0002 = "esting.TSDescription = Locals.TSDescription,\nParameters.AcquireTesting.TSNominalValueSet = Locals.TSNominalValueSet,\nP"
PostExpr Line0003 = "arameters.AcquireTesting.TSLowerToleranceSet = Locals.TSLowerToleranceSet,\nParameters.AcquireTesting.TSUpperToleranceSe"
PostExpr Line0004 = "t = Locals.TSUpperToleranceSet,\nParameters.AcquireTesting.TSUnitSet = Locals.TSUnitSet,\nParameters.AcquireTesting.TSVa"
PostExpr Line0005 = "lueSet = Locals.TSValueSet,\nParameters.AcquireTesting.FailureSet = Locals.FailureSet"

[DEF, SF.Seq[8].Main[33]]
%NAME = "Set Attributes for AcquireTesting "

[SF.Seq[8].Main[34].TS]
Id = "ID#:7Xmoog6S8BGJ5cyCf5KpWB"
PostExpr = "Parameters.Report.TestNames = Locals.Name,\nParameters.Report.Statuses = Locals.Status"

[DEF, SF.Seq[8].Main[34]]
%NAME = "Save data for report"

[DEF, SF.Seq[8].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[8].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[8].Requirements]
Links = Strs

[SF.Seq[8].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[9]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Get Measurment Data from Test"

[DEF, SF.Seq[9].Parameters]
Name = Strs
Status = Strs
TSNumber = Strs
TSDescription = Strs
TSNominalValueSet = Nums
TSLowerToleranceSet = Nums
TSUpperToleranceSet = Nums
TSUnitSet = Strs
TSValueSet = Nums
FileAttachmentSet = Strs
FailureSet = Strs
ResultPrint = Strs
SetpointPrint = Strs
Tx = Strs
Rx = Strs
ValidResults = Num
FailedTests = Num
CurrentTest = TEResult

[SF.Seq[9].Parameters]
%FLG: Name = 4
%FLG: Status = 4
%FLG: TSNumber = 4
%FLG: TSDescription = 4
%FLG: TSNominalValueSet = 4
%FLG: TSLowerToleranceSet = 4
%FLG: TSUpperToleranceSet = 4
%FLG: TSUnitSet = 4
%FLG: TSValueSet = 4
%FLG: FileAttachmentSet = 4
%FLG: FailureSet = 4
%FLG: ResultPrint = 4
%FLG: SetpointPrint = 4
%FLG: Tx = 4
%FLG: Rx = 4
%FLG: ValidResults = 4
%FLG: FailedTests = 4
%FLG: CurrentTest = 4

[SF.Seq[9]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [56]
%FLG: Main = 4194304
%FLG: Setup = 4194304
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[9].Locals]
ResultList = Objs
SplitString = Strs
SplitLoopIndex = Num
RX = Str
TX = Str
CANmessage = "TYPE, CAN_Response"
TEMP = Obj
CurrentAdditionalResult = Num
Additional = Str

[DEF, SF.Seq[9].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[9].Locals]
%FLG: ResultList = 4194304
%FLG: TEMP = 4

[DEF, SF.Seq[9].Locals.TEMP]
TS = Obj
Comp = Str
Status = Str
Units = Str
Numeric = Num
Limits = Obj
AdditionalResults = Nums
PassFail = Bool

[DEF, SF.Seq[9].Locals.TEMP.TS]
StepType = Str
StepName = Str

[SF.Seq[9].Locals.TEMP.TS]
%FLG: StepType = 4
%FLG: StepName = 4

[SF.Seq[9].Locals.TEMP]
%FLG: TS = 4
%FLG: Comp = 4
%FLG: Status = 4
%FLG: Units = 4
%FLG: Numeric = 4
%FLG: Limits = 4
%LO: AdditionalResults = [0][0]
%HI: AdditionalResults = [2][2]
%FLG: AdditionalResults = 4
%FLG: PassFail = 4

[DEF, SF.Seq[9].Locals.TEMP.Limits]
Low = Num
High = Num

[SF.Seq[9].Locals.TEMP.Limits]
%FLG: Low = 4
%FLG: High = 4

[DEF, SF.Seq[9].Main]
%[0] = Step
%TYPE: %[0] = "NI_Flow_If"
%[1] = Step
%TYPE: %[1] = "Statement"
%[2] = Step
%TYPE: %[2] = "NI_Flow_If"
%[3] = Step
%TYPE: %[3] = "Statement"
%[4] = Step
%TYPE: %[4] = "NI_Flow_Else"
%[5] = Step
%TYPE: %[5] = "Statement"
%[6] = Step
%TYPE: %[6] = "NI_Flow_End"
%[7] = Step
%TYPE: %[7] = "Statement"
%[8] = Step
%TYPE: %[8] = "NI_Flow_For"
%[9] = Step
%TYPE: %[9] = "Statement"
%[10] = Step
%TYPE: %[10] = "NI_Flow_End"
%[11] = Step
%TYPE: %[11] = "NI_Flow_If"
%[12] = Step
%TYPE: %[12] = "Statement"
%[13] = Step
%TYPE: %[13] = "NI_Flow_If"
%[14] = Step
%TYPE: %[14] = "NI_Flow_If"
%[15] = Step
%TYPE: %[15] = "NI_Flow_For"
%[16] = Step
%TYPE: %[16] = "Action"
%[17] = Step
%TYPE: %[17] = "Statement"
%[18] = Step
%TYPE: %[18] = "NI_Flow_End"
%[19] = Step
%TYPE: %[19] = "Statement"
%[20] = Step
%TYPE: %[20] = "NI_Flow_Else"
%[21] = Step
%TYPE: %[21] = "Statement"
%[22] = Step
%TYPE: %[22] = "NI_Flow_End"
%[23] = Step
%TYPE: %[23] = "NI_Flow_Else"
%[24] = Step
%TYPE: %[24] = "NI_Flow_If"
%[25] = Step
%TYPE: %[25] = "NI_Flow_For"
%[26] = Step
%TYPE: %[26] = "Action"
%[27] = Step
%TYPE: %[27] = "Statement"
%[28] = Step
%TYPE: %[28] = "NI_Flow_End"
%[29] = Step
%TYPE: %[29] = "Statement"
%[30] = Step
%TYPE: %[30] = "NI_Flow_Else"
%[31] = Step
%TYPE: %[31] = "Statement"
%[32] = Step
%TYPE: %[32] = "NI_Flow_End"
%[33] = Step
%TYPE: %[33] = "NI_Flow_End"
%[34] = Step
%TYPE: %[34] = "NI_Flow_End"
%[35] = Step
%TYPE: %[35] = "Statement"
%[36] = Step
%TYPE: %[36] = "NI_Flow_ElseIf"
%[37] = Step
%TYPE: %[37] = "Statement"
%[38] = Step
%TYPE: %[38] = "Statement"
%[39] = Step
%TYPE: %[39] = "Statement"
%[40] = Step
%TYPE: %[40] = "NI_Flow_For"
%[41] = Step
%TYPE: %[41] = "Statement"
%[42] = Step
%TYPE: %[42] = "NI_Flow_End"
%[43] = Step
%TYPE: %[43] = "NI_Flow_If"
%[44] = Step
%TYPE: %[44] = "Statement"
%[45] = Step
%TYPE: %[45] = "NI_Flow_If"
%[46] = Step
%TYPE: %[46] = "NI_Flow_For"
%[47] = Step
%TYPE: %[47] = "Action"
%[48] = Step
%TYPE: %[48] = "Statement"
%[49] = Step
%TYPE: %[49] = "NI_Flow_End"
%[50] = Step
%TYPE: %[50] = "Statement"
%[51] = Step
%TYPE: %[51] = "NI_Flow_Else"
%[52] = Step
%TYPE: %[52] = "Statement"
%[53] = Step
%TYPE: %[53] = "NI_Flow_End"
%[54] = Step
%TYPE: %[54] = "NI_Flow_End"
%[55] = Step
%TYPE: %[55] = "Statement"
%[56] = Step
%TYPE: %[56] = "NI_Flow_End"

[SF.Seq[9].Main[0].TS]
Id = "ID#:3+ZM0Yr67xG53dQli0T1uC"

[SF.Seq[9].Main[0]]
ConditionExpr = "Parameters.CurrentTest.TS.StepType == \"NumericLimitTest\""
%COMMENT = "For Numeric Limit tests"

[DEF, SF.Seq[9].Main[0]]
%NAME = "If"

[SF.Seq[9].Main[1].TS]
Id = "ID#:4OZM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "Parameters.Name[Parameters.ValidResults] = Parameters.CurrentTest.TS.StepName,\nParameters.Status[Parameters.ValidResult"
PostExpr Line0002 = "s] = Parameters.CurrentTest.Status,\nLocals.SplitString = Split(Parameters.CurrentTest.TS.StepName, \" \"), // Get just "
PostExpr Line0003 = "TSNumber from Step Name\nParameters.TSNumber[Parameters.ValidResults] = Locals.SplitString[0],\nParameters.TSUnitSet[Par"
PostExpr Line0004 = "ameters.ValidResults] = Parameters.CurrentTest.Status != \"Error\" ? Parameters.CurrentTest.Units : \"-\",\nParameters.T"
PostExpr Line0005 = "SValueSet[Parameters.ValidResults] = Parameters.CurrentTest.Numeric"

[DEF, SF.Seq[9].Main[1]]
%NAME = "Assign Results"

[SF.Seq[9].Main[2].TS]
Id = "ID#:4eZM0Yr67xG53dQli0T1uC"

[SF.Seq[9].Main[2]]
ConditionExpr = "Parameters.CurrentTest.Comp == \"GELE\""
%COMMENT = "Check Comparison Type"

[DEF, SF.Seq[9].Main[2]]
%NAME = "If"

[SF.Seq[9].Main[3].TS]
Id = "ID#:4uZM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "Parameters.TSLowerToleranceSet[Parameters.ValidResults] = Parameters.CurrentTest.Limits.Low,\nParameters.TSUpperToleranc"
PostExpr Line0002 = "eSet[Parameters.ValidResults] = Parameters.CurrentTest.Limits.High"

[DEF, SF.Seq[9].Main[3]]
%NAME = "Assign Limits If \"GELE\""

[SF.Seq[9].Main[4].TS]
Id = "ID#:4+ZM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[4]]
%NAME = "Else"

[SF.Seq[9].Main[5].TS]
Id = "ID#:5OZM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "Parameters.TSLowerToleranceSet[Parameters.ValidResults] = Parameters.CurrentTest.Limits.Low,\nParameters.TSUpperToleranc"
PostExpr Line0002 = "eSet[Parameters.ValidResults] = Parameters.CurrentTest.Limits.Low"

[DEF, SF.Seq[9].Main[5]]
%NAME = "Assign Limits If not \"GELE\""

[SF.Seq[9].Main[6].TS]
Id = "ID#:5eZM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[6]]
%NAME = "End"

[SF.Seq[9].Main[7].TS]
Id = "ID#:5uZM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "Parameters.TSNominalValueSet[Parameters.ValidResults] = (Parameters.TSLowerToleranceSet[Parameters.ValidResults]+Paramet"
PostExpr Line0002 = "ers.TSUpperToleranceSet[Parameters.ValidResults])/2,"

[DEF, SF.Seq[9].Main[7]]
%NAME = "Assign Nominal Value"

[SF.Seq[9].Main[8].TS]
Id = "ID#:5+ZM0Yr67xG53dQli0T1uC"

[SF.Seq[9].Main[8]]
InitializationExpr = "Locals.SplitLoopIndex = 1"
ConditionExpr = "Locals.SplitLoopIndex < GetNumElements(Locals.SplitString)"
IncrementExpr = "Locals.SplitLoopIndex += 1"
CustomLoop = True
%COMMENT = "Get Description"

[DEF, SF.Seq[9].Main[8]]
%NAME = "For"

[SF.Seq[9].Main[9].TS]
Id = "ID#:6OZM0Yr67xG53dQli0T1uC"
PostExpr = "Parameters.TSDescription[Parameters.ValidResults] += Locals.SplitString[Locals.SplitLoopIndex]+\" \""

[DEF, SF.Seq[9].Main[9]]
%NAME = "Get Description"

[SF.Seq[9].Main[10].TS]
Id = "ID#:6eZM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[10]]
%NAME = "End"

[SF.Seq[9].Main[11].TS]
Id = "ID#:6uZM0Yr67xG53dQli0T1uC"

[SF.Seq[9].Main[11]]
ConditionExpr = "Parameters.CurrentTest.Status == \"Failed\""
%COMMENT = "Test failed"

[DEF, SF.Seq[9].Main[11]]
%NAME = "If"

[SF.Seq[9].Main[12].TS]
Id = "ID#:6+ZM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "Parameters.FailureSet += {Parameters.TSNumber[Parameters.ValidResults] + \" | \" + Parameters.TSDescription[Parameters.V"
PostExpr Line0002 = "alidResults] +\" = \" + Str(Parameters.CurrentTest.Numeric)+Parameters.CurrentTest.Units}"

[DEF, SF.Seq[9].Main[12]]
%NAME = "Set Failure step TCMES"

[SF.Seq[9].Main[13].TS]
Id = "ID#:7OZM0Yr67xG53dQli0T1uC"

[SF.Seq[9].Main[13]]
ConditionExpr = "Parameters.CurrentTest.Comp == \"GELE\""
%COMMENT = "Check Comparison Type"

[DEF, SF.Seq[9].Main[13]]
%NAME = "If"

[SF.Seq[9].Main[14].TS]
Id = "ID#:7eZM0Yr67xG53dQli0T1uC"

[SF.Seq[9].Main[14]]
ConditionExpr = "Parameters.GetNumSubProperties (\"CurrentTest\") == 11"
%COMMENT = "In case NumSubProperties == 11 -> We have Additional Result"

[DEF, SF.Seq[9].Main[14]]
%NAME = "If"

[SF.Seq[9].Main[15].TS]
Id = "ID#:5c6+3v2O8BGJ3syCf5KpWB"

[SF.Seq[9].Main[15]]
InitializationExpr = "Locals.CurrentAdditionalResult = 0"
ConditionExpr = "Locals.CurrentAdditionalResult < GetNumElements(Parameters.CurrentTest.AdditionalResults)"
IncrementExpr = "Locals.CurrentAdditionalResult += 1"

[DEF, SF.Seq[9].Main[15]]
%NAME = "For"

[SF.Seq[9].Main[16].TS]
Id = "ID#:5s6+3v2O8BGJ3syCf5KpWB"

[DEF, SF.Seq[9].Main[16].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[9].Main[16].TS.SData.ViCall]
ProjectPath = "..\\..\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Sequence SubVIs\\Get Additional data.vi"
VIDescription Line0001 = "Converting data from Variant to defined data types and converting them to Formated string.\nPossible formats CAN message"
VIDescription Line0002 = ", Number, Array of numbers, String"
TDChecksum = 1276658057
%HI: Parms = [1]

[DEF, SF.Seq[9].Main[16].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"

[SF.Seq[9].Main[16].TS.SData.ViCall.Parms[0]]
Label = "Additional Data"
ArgVal = "Parameters.CurrentTest.AdditionalResults[Locals.CurrentAdditionalResult]"
Type = 7
WireRequirement = 1
DisplayType = "Anything"
ConnectorNumber = 11

[DEF, SF.Seq[9].Main[16].TS.SData.ViCall.Parms[0]]
%NAME = "Additional Data"

[SF.Seq[9].Main[16].TS.SData.ViCall.Parms[1]]
Label = "Formated Additional data"
ArgVal = "Locals.Additional"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[9].Main[16].TS.SData.ViCall.Parms[1]]
%NAME = "Formated Additional data"

[SF.Seq[9].Main[16]]
%COMMENT = "Parameters.CurrentTest.AdditionalResults[x]"

[DEF, SF.Seq[9].Main[16]]
%NAME = "Get RX"

[SF.Seq[9].Main[17].TS]
Id = "ID#:586+3v2O8BGJ3syCf5KpWB"
PostExpr = "Locals.RX = Locals.RX + \" \" + Locals.Additional"

[DEF, SF.Seq[9].Main[17]]
%NAME = "Concatenate Additional results"

[SF.Seq[9].Main[18].TS]
Id = "ID#:6M6+3v2O8BGJ3syCf5KpWB"

[DEF, SF.Seq[9].Main[18]]
%NAME = "End"

[SF.Seq[9].Main[19].TS]
Id = "ID#:7+ZM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "SetNumElements( Parameters.ResultPrint , Parameters.FailedTests+1  ) , \nSetNumElements( Parameters.SetpointPrint , Para"
PostExpr Line0002 = "meters.FailedTests+1  ) ,\nSetNumElements( Parameters.Rx , Parameters.FailedTests+1  ) , \nSetNumElements( Parameters.Tx"
PostExpr Line0003 = " , Parameters.FailedTests+1  ) ,\n\nParameters.ResultPrint[Parameters.FailedTests] =  Str(Parameters.CurrentTest.Numeric"
PostExpr Line0004 = ") + Parameters.CurrentTest.Units,\nParameters.SetpointPrint[Parameters.FailedTests] = Str(Parameters.CurrentTest.Limits."
PostExpr Line0005 = "Low) + \"  -  \" +  Str(Parameters.CurrentTest.Limits.High) ,\nParameters.Rx [Parameters.FailedTests] =  Locals.RX ,\nPa"
PostExpr Line0006 = "rameters.Tx[Parameters.FailedTests] = Locals.TX,\n\nParameters.FailedTests++ \n\n"

[SF.Seq[9].Main[19]]
%COMMENT = "GELE\nAdditional result"

[DEF, SF.Seq[9].Main[19]]
%NAME = "Set Failure step"

[SF.Seq[9].Main[20].TS]
Id = "ID#:8OZM0Yr67xG53dQli0T1uC"

[SF.Seq[9].Main[20]]
%COMMENT = "In this case we don' t have Additional Result"

[DEF, SF.Seq[9].Main[20]]
%NAME = "Else"

[SF.Seq[9].Main[21].TS]
Id = "ID#:8eZM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "SetNumElements( Parameters.ResultPrint , Parameters.FailedTests+1  ) , \nSetNumElements( Parameters.SetpointPrint , Para"
PostExpr Line0002 = "meters.FailedTests+1  ) ,\nSetNumElements( Parameters.Rx , Parameters.FailedTests+1  ) , \nSetNumElements( Parameters.Tx"
PostExpr Line0003 = " , Parameters.FailedTests+1  ) ,\n\nParameters.ResultPrint[Parameters.FailedTests] =  Str(Parameters.CurrentTest.Numeric"
PostExpr Line0004 = ") + Parameters.CurrentTest.Units,\nParameters.SetpointPrint[Parameters.FailedTests] = Str(Parameters.CurrentTest.Limits."
PostExpr Line0005 = "Low) + \"  -  \" +  Str(Parameters.CurrentTest.Limits.High) ,\nParameters.Rx [Parameters.FailedTests] =  \"-\" ,\nParame"
PostExpr Line0006 = "ters.Tx[Parameters.FailedTests] = \"-\",\n\nParameters.FailedTests ++ "

[SF.Seq[9].Main[21]]
%COMMENT = "GELE\n"

[DEF, SF.Seq[9].Main[21]]
%NAME = "Set Failure step"

[SF.Seq[9].Main[22].TS]
Id = "ID#:8uZM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[22]]
%NAME = "End"

[SF.Seq[9].Main[23].TS]
Id = "ID#:8+ZM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[23]]
%NAME = "Else"

[SF.Seq[9].Main[24].TS]
Id = "ID#:9OZM0Yr67xG53dQli0T1uC"

[SF.Seq[9].Main[24]]
ConditionExpr = "Parameters.GetNumSubProperties (\"CurrentTest\") == 11"

[DEF, SF.Seq[9].Main[24]]
%NAME = "If"

[SF.Seq[9].Main[25].TS]
Id = "ID#:Ss7WsP2O8BGJ3syCf5KpWB"

[SF.Seq[9].Main[25]]
InitializationExpr = "Locals.CurrentAdditionalResult = 0"
ConditionExpr = "Locals.CurrentAdditionalResult < GetNumElements(Parameters.CurrentTest.AdditionalResults)"
IncrementExpr = "Locals.CurrentAdditionalResult += 1"

[DEF, SF.Seq[9].Main[25]]
%NAME = "For"

[SF.Seq[9].Main[26].TS]
Id = "ID#:S87WsP2O8BGJ3syCf5KpWB"

[DEF, SF.Seq[9].Main[26].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[9].Main[26].TS.SData.ViCall]
ProjectPath = "..\\..\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Sequence SubVIs\\Get Additional data.vi"
VIDescription Line0001 = "Converting data from Variant to defined data types and converting them to Formated string.\nPossible formats CAN message"
VIDescription Line0002 = ", Number, Array of numbers, String"
TDChecksum = 1276658057
%HI: Parms = [1]

[DEF, SF.Seq[9].Main[26].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"

[SF.Seq[9].Main[26].TS.SData.ViCall.Parms[0]]
Label = "Additional Data"
ArgVal = "Parameters.CurrentTest.AdditionalResults[Locals.CurrentAdditionalResult]"
Type = 7
WireRequirement = 1
DisplayType = "Anything"
ConnectorNumber = 11

[DEF, SF.Seq[9].Main[26].TS.SData.ViCall.Parms[0]]
%NAME = "Additional Data"

[SF.Seq[9].Main[26].TS.SData.ViCall.Parms[1]]
Label = "Formated Additional data"
ArgVal = "Locals.Additional"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[9].Main[26].TS.SData.ViCall.Parms[1]]
%NAME = "Formated Additional data"

[SF.Seq[9].Main[26]]
%COMMENT = "Parameters.CurrentTest.AdditionalResults[x]"

[DEF, SF.Seq[9].Main[26]]
%NAME = "Get RX"

[SF.Seq[9].Main[27].TS]
Id = "ID#:TM7WsP2O8BGJ3syCf5KpWB"
PostExpr = "Locals.RX = Locals.RX + \" \" + Locals.Additional"

[DEF, SF.Seq[9].Main[27]]
%NAME = "Concatenate Additional results"

[SF.Seq[9].Main[28].TS]
Id = "ID#:Tc7WsP2O8BGJ3syCf5KpWB"

[DEF, SF.Seq[9].Main[28]]
%NAME = "End"

[SF.Seq[9].Main[29].TS]
Id = "ID#:9uZM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "SetNumElements( Parameters.ResultPrint , Parameters.FailedTests+1  ) , \nSetNumElements( Parameters.SetpointPrint , Para"
PostExpr Line0002 = "meters.FailedTests+1  ) ,\nSetNumElements( Parameters.Rx , Parameters.FailedTests+1  ) , \nSetNumElements( Parameters.Tx"
PostExpr Line0003 = " , Parameters.FailedTests+1  ) ,\n\nParameters.ResultPrint[Parameters.FailedTests] = Str(Parameters.CurrentTest.Numeric)"
PostExpr Line0004 = " + Parameters.CurrentTest.Units,\nParameters.SetpointPrint[Parameters.FailedTests] = Str(Parameters.CurrentTest.Limits.L"
PostExpr Line0005 = "ow) + \"  -  \" +  Str(Parameters.CurrentTest.Limits.Low) ,\nParameters.Rx [Parameters.FailedTests] =  Locals.RX ,\nPara"
PostExpr Line0006 = "meters.Tx[Parameters.FailedTests] =  Locals.TX,\n\nParameters.FailedTests ++ "

[SF.Seq[9].Main[29]]
%COMMENT = "NOT GELE\nAdditional result"

[DEF, SF.Seq[9].Main[29]]
%NAME = "Set Failure step"

[SF.Seq[9].Main[30].TS]
Id = "ID#:9+ZM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[30]]
%NAME = "Else"

[SF.Seq[9].Main[31].TS]
Id = "ID#:+OZM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "SetNumElements( Parameters.ResultPrint , Parameters.FailedTests+1  ) , \nSetNumElements( Parameters.SetpointPrint , Para"
PostExpr Line0002 = "meters.FailedTests+1  ) ,\nSetNumElements( Parameters.Rx , Parameters.FailedTests+1  ) , \nSetNumElements( Parameters.Tx"
PostExpr Line0003 = " , Parameters.FailedTests+1  ) ,\n\nParameters.ResultPrint[Parameters.FailedTests] =  Str(Parameters.CurrentTest.Numeric"
PostExpr Line0004 = ") + Parameters.CurrentTest.Units,\nParameters.SetpointPrint[Parameters.FailedTests] = Str(Parameters.CurrentTest.Limits."
PostExpr Line0005 = "Low) + \"  -  \" +  Str(Parameters.CurrentTest.Limits.Low) ,\nParameters.Rx [Parameters.FailedTests] =  \"-\",\nParamete"
PostExpr Line0006 = "rs.Tx[Parameters.FailedTests] =  \"-\",\n\nParameters.FailedTests ++ "

[SF.Seq[9].Main[31]]
%COMMENT = "NOT GELE"

[DEF, SF.Seq[9].Main[31]]
%NAME = "Set Failure step"

[SF.Seq[9].Main[32].TS]
Id = "ID#:+eZM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[32]]
%NAME = "End"

[SF.Seq[9].Main[33].TS]
Id = "ID#:+uZM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[33]]
%NAME = "End"

[SF.Seq[9].Main[34].TS]
Id = "ID#:++ZM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[34]]
%NAME = "End"

[SF.Seq[9].Main[35].TS]
Id = "ID#:/OZM0Yr67xG53dQli0T1uC"
PostExpr = "Parameters.ValidResults++"

[DEF, SF.Seq[9].Main[35]]
%NAME = "Increment Valid Results"

[SF.Seq[9].Main[36].TS]
Id = "ID#:/eZM0Yr67xG53dQli0T1uC"

[SF.Seq[9].Main[36]]
ConditionExpr = "Parameters.CurrentTest.TS.StepType == \"PassFailTest\""
%COMMENT = "For Pass/Fail tests"

[DEF, SF.Seq[9].Main[36]]
%NAME = "Else If"

[SF.Seq[9].Main[37].TS]
Id = "ID#:/uZM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "Parameters.Name[Parameters.ValidResults] = Parameters.CurrentTest.TS.StepName,\nParameters.Status[Parameters.ValidResult"
PostExpr Line0002 = "s] = Parameters.CurrentTest.Status,\nLocals.SplitString = Split(Parameters.CurrentTest.TS.StepName, \" \"), // Get just "
PostExpr Line0003 = "TSNumber from Step Name\nParameters.TSNumber[Parameters.ValidResults] = Locals.SplitString[0],\nParameters.TSUnitSet[Par"
PostExpr Line0004 = "ameters.ValidResults] = \"Boolean\",\nParameters.TSValueSet[Parameters.ValidResults] = Parameters.CurrentTest.PassFail? "
PostExpr Line0005 = "1 : 0"

[DEF, SF.Seq[9].Main[37]]
%NAME = "Assign Pass/Fail Results"

[SF.Seq[9].Main[38].TS]
Id = "ID#:/+ZM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "Parameters.TSLowerToleranceSet[Parameters.ValidResults] = 0,\nParameters.TSUpperToleranceSet[Parameters.ValidResults] = "
PostExpr Line0002 = "1,"

[DEF, SF.Seq[9].Main[38]]
%NAME = "Assign Limits"

[SF.Seq[9].Main[39].TS]
Id = "ID#:AOdM0Yr67xG53dQli0T1uC"
PostExpr = "Parameters.TSNominalValueSet[Parameters.ValidResults] =1,"

[DEF, SF.Seq[9].Main[39]]
%NAME = "Assign Nominal Value"

[SF.Seq[9].Main[40].TS]
Id = "ID#:AedM0Yr67xG53dQli0T1uC"

[SF.Seq[9].Main[40]]
InitializationExpr = "Locals.SplitLoopIndex = 1"
ConditionExpr = "Locals.SplitLoopIndex < GetNumElements(Locals.SplitString)"
IncrementExpr = "Locals.SplitLoopIndex += 1"
CustomLoop = True
%COMMENT = "Get Description"

[DEF, SF.Seq[9].Main[40]]
%NAME = "For"

[SF.Seq[9].Main[41].TS]
Id = "ID#:AudM0Yr67xG53dQli0T1uC"
PostExpr = "Parameters.TSDescription[Parameters.ValidResults] += Locals.SplitString[Locals.SplitLoopIndex]+\" \""

[DEF, SF.Seq[9].Main[41]]
%NAME = "Get Description"

[SF.Seq[9].Main[42].TS]
Id = "ID#:A+dM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[42]]
%NAME = "End"

[SF.Seq[9].Main[43].TS]
Id = "ID#:BOdM0Yr67xG53dQli0T1uC"

[SF.Seq[9].Main[43]]
ConditionExpr = "Parameters.CurrentTest.Status == \"Failed\""
%COMMENT = "Test failed"

[DEF, SF.Seq[9].Main[43]]
%NAME = "If"

[SF.Seq[9].Main[44].TS]
Id = "ID#:BedM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "Parameters.FailureSet += {Parameters.TSNumber[Parameters.ValidResults] + \" | \" + Parameters.TSDescription[Parameters.V"
PostExpr Line0002 = "alidResults] +\" = \" + (Parameters.CurrentTest.PassFail ? \"1\":\"0\") + Parameters.TSUnitSet[Parameters.ValidResults]}"

[DEF, SF.Seq[9].Main[44]]
%NAME = "Set Failure step TCMES"

[SF.Seq[9].Main[45].TS]
Id = "ID#:BudM0Yr67xG53dQli0T1uC"

[SF.Seq[9].Main[45]]
ConditionExpr = "Parameters.GetNumSubProperties (\"CurrentTest\") == 7"

[DEF, SF.Seq[9].Main[45]]
%NAME = "If"

[SF.Seq[9].Main[46].TS]
Id = "ID#:bbn10v2O8BGJ3syCf5KpWB"

[SF.Seq[9].Main[46]]
InitializationExpr = "Locals.CurrentAdditionalResult = 0"
ConditionExpr = "Locals.CurrentAdditionalResult < GetNumElements(Parameters.CurrentTest.AdditionalResults)"
IncrementExpr = "Locals.CurrentAdditionalResult += 1"

[DEF, SF.Seq[9].Main[46]]
%NAME = "For"

[SF.Seq[9].Main[47].TS]
Id = "ID#:brn10v2O8BGJ3syCf5KpWB"

[DEF, SF.Seq[9].Main[47].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[9].Main[47].TS.SData.ViCall]
ProjectPath = "..\\..\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Sequence SubVIs\\Get Additional data.vi"
VIDescription Line0001 = "Converting data from Variant to defined data types and converting them to Formated string.\nPossible formats CAN message"
VIDescription Line0002 = ", Number, Array of numbers, String"
TDChecksum = 1276658057
%HI: Parms = [1]

[DEF, SF.Seq[9].Main[47].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"

[SF.Seq[9].Main[47].TS.SData.ViCall.Parms[0]]
Label = "Additional Data"
ArgVal = "Parameters.CurrentTest.AdditionalResults[Locals.CurrentAdditionalResult]"
Type = 7
WireRequirement = 1
DisplayType = "Anything"
ConnectorNumber = 11

[DEF, SF.Seq[9].Main[47].TS.SData.ViCall.Parms[0]]
%NAME = "Additional Data"

[SF.Seq[9].Main[47].TS.SData.ViCall.Parms[1]]
Label = "Formated Additional data"
ArgVal = "Locals.Additional"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[9].Main[47].TS.SData.ViCall.Parms[1]]
%NAME = "Formated Additional data"

[SF.Seq[9].Main[47]]
%COMMENT = "Parameters.CurrentTest.AdditionalResults[x]"

[DEF, SF.Seq[9].Main[47]]
%NAME = "Get RX"

[SF.Seq[9].Main[48].TS]
Id = "ID#:b7n10v2O8BGJ3syCf5KpWB"
PostExpr = "Locals.RX = Locals.RX + \" \" + Locals.Additional"

[DEF, SF.Seq[9].Main[48]]
%NAME = "Concatenate Additional results"

[SF.Seq[9].Main[49].TS]
Id = "ID#:cLn10v2O8BGJ3syCf5KpWB"

[DEF, SF.Seq[9].Main[49]]
%NAME = "End"

[SF.Seq[9].Main[50].TS]
Id = "ID#:COdM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "SetNumElements( Parameters.ResultPrint , Parameters.FailedTests+1  ) , \nSetNumElements( Parameters.SetpointPrint , Para"
PostExpr Line0002 = "meters.FailedTests+1  ) ,\nSetNumElements( Parameters.Rx , Parameters.FailedTests+1  ) , \nSetNumElements( Parameters.Tx"
PostExpr Line0003 = " , Parameters.FailedTests+1  ) ,\n\nParameters.ResultPrint[Parameters.FailedTests] = Parameters.CurrentTest.PassFail ? \"
PostExpr Line0004 = ""1\":\"0\" + \"Boolean\",\nParameters.SetpointPrint[Parameters.FailedTests] =\"1\",\nParameters.Rx[Parameters.FailedTest"
PostExpr Line0005 = "s] =  Locals.RX,\nParameters.Tx[Parameters.FailedTests] =  Locals.TX,  // there will be no Tx\n\nParameters.FailedTests "
PostExpr Line0006 = "++ \n"

[SF.Seq[9].Main[50]]
%COMMENT = "Additional Result"

[DEF, SF.Seq[9].Main[50]]
%NAME = "Set Failure step"

[SF.Seq[9].Main[51].TS]
Id = "ID#:CedM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[51]]
%NAME = "Else"

[SF.Seq[9].Main[52].TS]
Id = "ID#:CudM0Yr67xG53dQli0T1uC"
PostExpr Line0001 = "SetNumElements( Parameters.ResultPrint , Parameters.FailedTests+1  ) , \nSetNumElements( Parameters.SetpointPrint , Para"
PostExpr Line0002 = "meters.FailedTests+1  ) ,\nSetNumElements( Parameters.Rx , Parameters.FailedTests+1  ) , \nSetNumElements( Parameters.Tx"
PostExpr Line0003 = " , Parameters.FailedTests+1  ) ,\n\nParameters.ResultPrint[Parameters.FailedTests] = Parameters.CurrentTest.PassFail ?  "
PostExpr Line0004 = "\"1\" : \"0\" + \"Boolean\",\nParameters.SetpointPrint[Parameters.FailedTests] =\"1\",\nParameters.Rx[Parameters.FailedT"
PostExpr Line0005 = "ests] =  \"-\",\nParameters.Tx[Parameters.FailedTests] =  \"-\",\n\nParameters.FailedTests ++ "

[SF.Seq[9].Main[52]]
%COMMENT = "No Additional Result"

[DEF, SF.Seq[9].Main[52]]
%NAME = "Set Failure step"

[SF.Seq[9].Main[53].TS]
Id = "ID#:C+dM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[53]]
%NAME = "End"

[SF.Seq[9].Main[54].TS]
Id = "ID#:DOdM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[54]]
%NAME = "End"

[SF.Seq[9].Main[55].TS]
Id = "ID#:DedM0Yr67xG53dQli0T1uC"
PostExpr = "Parameters.ValidResults++"

[DEF, SF.Seq[9].Main[55]]
%NAME = "Increment Valid Results"

[SF.Seq[9].Main[56].TS]
Id = "ID#:DudM0Yr67xG53dQli0T1uC"

[DEF, SF.Seq[9].Main[56]]
%NAME = "End"

[DEF, SF.Seq[9].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[9].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[9].Requirements]
Links = Strs

[SF.Seq[9].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[10]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Get Number of DUTs that are testing"

[DEF, SF.Seq[10].Parameters]
NumberOfDUTs = Num

[SF.Seq[10].Parameters]
%FLG: NumberOfDUTs = 4

[SF.Seq[10]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [0]
%FLG: Main = 4194304
%FLG: Setup = 4194304
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[10].Locals]
ResultList = Objs

[DEF, SF.Seq[10].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[10].Locals]
%FLG: ResultList = 4194304

[DEF, SF.Seq[10].Main]
%[0] = Step
%TYPE: %[0] = "Statement"

[SF.Seq[10].Main[0].TS]
Id = "ID#:QfwWxcL57xG53NQli0T1uC"
PostExpr = "Parameters.NumberOfDUTs = FileGlobals.NumberOfDUTs"

[DEF, SF.Seq[10].Main[0]]
%NAME = "Get number of DUTs that are testing"

[DEF, SF.Seq[10].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[10].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[10].Requirements]
Links = Strs

[SF.Seq[10].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[11]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "----Actuators"

[SF.Seq[11]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%FLG: Main = 4194304
%FLG: Setup = 4194304
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[11].Locals]
ResultList = Objs

[DEF, SF.Seq[11].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[11].Locals]
%FLG: ResultList = 4194304

[DEF, SF.Seq[11].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[11].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[11].Requirements]
Links = Strs

[SF.Seq[11].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[12]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Lock Actuator PRE UUT"

[DEF, SF.Seq[12].Parameters]
SelectedActuatorName = Str
SelectedTargetPosition = Num
LockName = Str

[SF.Seq[12].Parameters]
%FLG: SelectedActuatorName = 4
%FLG: SelectedTargetPosition = 4
%FLG: LockName = 4

[SF.Seq[12]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [4]
%FLG: Main = 4194304
%HI: Setup = [0]
%FLG: Setup = 4194304
%HI: Cleanup = [0]
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[12].Locals]
ResultList = Objs
SELECTED_ACTUATOR_Error = Bool
SELECTED_ACTUATOR_ErrorCode = Num
SELECTED_ACTUATOR_ErrorText = Str
SELECTED_ACTUATOR_Result = Num

[DEF, SF.Seq[12].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[12].Locals]
%FLG: ResultList = 4194304

[DEF, SF.Seq[12].Main]
%[0] = Step
%TYPE: %[0] = "NoffzUTP_TEF_Model_TestSocket_SkipProductSequence"
%[1] = Step
%TYPE: %[1] = "Label"
%[2] = Step
%TYPE: %[2] = "SequenceCall"
%[3] = Step
%TYPE: %[3] = "SequenceCall"
%[4] = Step
%TYPE: %[4] = "NoffzUTP_TEF_Model_TestSocket_SkipProductSequence"

[SF.Seq[12].Main[0].TS]
Id = "ID#:zI8odOf57xG53NQli0T1uC"
PreCond = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] == Enums.SEQUENCE_STATE.ERROR"
PostExpr = "RunState.GotoCleanup = True"

[SF.Seq[12].Main[0]]
%COMMENT Line0001 = "Skip Product Sequence in case that Test Socket is alredy in ERROR state\n(This can be true if previous thread that enter"
%COMMENT Line0002 = "ed Lock first, run into error on the actuator)"

[DEF, SF.Seq[12].Main[0]]
%NAME = "Model.TestSocket.SkipProductSequence"

[SF.Seq[12].Main[1].TS]
Id = "ID#:21viEuf57xG53NQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[12].Main]
%FLG: %[1] = 67108864

[SF.Seq[12].Main[2].TS]
Id = "ID#:3FviEuf57xG53NQli0T1uC"

[DEF, SF.Seq[12].Main[2].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[12].Main[2].TS.SData]
SeqName = "Trigger Actuator"
UseCurFile = True

[DEF, SF.Seq[12].Main[2].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[12].Main[2].TS.SData.ActualArgs]
Actuator_Name = "TYPE, SequenceArgument"
Actuator_Target = "TYPE, SequenceArgument"
Actuator_Error = "TYPE, SequenceArgument"
Actuator_ErrorCode = "TYPE, SequenceArgument"
Actuator_ErrorText = "TYPE, SequenceArgument"
Actuator_Result = "TYPE, SequenceArgument"

[SF.Seq[12].Main[2].TS.SData.ActualArgs.Actuator_Name]
UseDef = False
Expr = "Parameters.SelectedActuatorName"
ParamType = 2

[SF.Seq[12].Main[2].TS.SData.ActualArgs.Actuator_Target]
UseDef = False
Expr = "Parameters.SelectedTargetPosition"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[12].Main[2].TS.SData.ActualArgs.Actuator_Error]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_Error"
ParamType = 16

[SF.Seq[12].Main[2].TS.SData.ActualArgs.Actuator_ErrorCode]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_ErrorCode"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[12].Main[2].TS.SData.ActualArgs.Actuator_ErrorText]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_ErrorText"
ParamType = 2

[SF.Seq[12].Main[2].TS.SData.ActualArgs.Actuator_Result]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_Result"
ParamType = 4
ParamRepresentation = 1

[DEF, SF.Seq[12].Main[2]]
%NAME = "Trigger Selected Actuator"

[SF.Seq[12].Main[3].TS]
Id = "ID#:3VviEuf57xG53NQli0T1uC"
PreCond = "Locals.SELECTED_ACTUATOR_Error"

[DEF, SF.Seq[12].Main[3].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[12].Main[3].TS.SData]
SeqName = "Check if Actuator is in Error BOTH TS"
UseCurFile = True

[DEF, SF.Seq[12].Main[3].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[12].Main[3].TS.SData.ActualArgs]
Actuator_Name = "TYPE, SequenceArgument"
Actuator_Error = "TYPE, SequenceArgument"
Actuator_ErrorCode = "TYPE, SequenceArgument"
Actuator_ErrorText = "TYPE, SequenceArgument"

[SF.Seq[12].Main[3].TS.SData.ActualArgs.Actuator_Name]
UseDef = False
Expr = "Parameters.SelectedActuatorName"
ParamType = 2

[SF.Seq[12].Main[3].TS.SData.ActualArgs.Actuator_Error]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_Error"
ParamType = 16

[SF.Seq[12].Main[3].TS.SData.ActualArgs.Actuator_ErrorCode]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_ErrorCode"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[12].Main[3].TS.SData.ActualArgs.Actuator_ErrorText]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_ErrorText"
ParamType = 2

[DEF, SF.Seq[12].Main[3]]
%NAME = "Check if Selected Actuator is in ERROR"

[SF.Seq[12].Main[4].TS]
Id = "ID#:XC28gOf57xG53NQli0T1uC"
PreCond = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] == Enums.SEQUENCE_STATE.ERROR"
PostExpr = "RunState.GotoCleanup = True"

[SF.Seq[12].Main[4]]
%COMMENT = "Skip Product Sequence in case of Acutator ERROR"

[DEF, SF.Seq[12].Main[4]]
%NAME = "Model.TestSocket.SkipProductSequence"

[DEF, SF.Seq[12].Setup]
%[0] = Step
%TYPE: %[0] = "NI_Lock"

[SF.Seq[12].Setup[0].TS]
Id = "ID#:2VviEuf57xG53NQli0T1uC"
%HI: AdditionalResultsHints = [2]

[DEF, SF.Seq[12].Setup[0].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"
%[1] = "TYPE, NI_CustomResult"
%[2] = "TYPE, NI_CustomResult"

[SF.Seq[12].Setup[0].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_MUTEX_STEP_TYPE\", \"CREATE_LOCK_HINT\")"
ValueToLog = "Step.CreateIfDoesNotExist"

[SF.Seq[12].Setup[0].TS.AdditionalResultsHints[1]]
Name = "ResStr(\"NI_MUTEX_STEP_TYPE\", \"LOCK_OPERATION_LIFETIME_HINT\")"
ValueToLog Line0001 = "ResStr(\"NI_MUTEX_STEP_TYPE\", (Step.LockLifetime == 0 ? \"LIFETIME_SEQUENCE\" :\n    Step.LockLifetime == 1 ? \"LIFETIM"
ValueToLog Line0002 = "E_THREAD\" :\n    Step.LockLifetime == 2 ? \"LIFETIME_REFERENCE\" :\n    \"\"))"

[SF.Seq[12].Setup[0].TS.AdditionalResultsHints[2]]
Name = "ResStr(\"NI_MUTEX_STEP_TYPE\", \"TIMEOUT\")"
ValueToLog = "Step.TimeoutEnabled ? Str(Evaluate(Step.TimeoutExpr)) : ResStr(\"NI_MUTEX_STEP_TYPE\", \"DISABLED\")"

[DEF, SF.Seq[12].Setup[0]]
Result = Obj
%NAME = "---------------------Lock"

[DEF, SF.Seq[12].Setup[0].Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"
TimeoutOccurred = Bool

[SF.Seq[12].Setup[0].Result]
%FLG: Error = 4194304
%FLG: Status = 4194304
%FLG: ReportText = 4194304
%FLG: Common = 0

[SF.Seq[12].Setup[0]]
%FLG: Result = 4194304
NameOrRefExpr = "Parameters.LockName"
Operation = 1
CreateIfDoesNotExist = True
%COMMENT Line0001 = "We use Lock function to perform next actuation only once:\nWhen first thread come here it will perform the action\nThen "
%COMMENT Line0002 = "if second comes after first, it will see that the actuator is alredy in Target position\nAdditionaly, we don't need to u"
%COMMENT Line0003 = "se IF TestScoket == CHMB1_LEFT. for example, do the actuation\nWho comes first it will perform it, and the other one wil"
%COMMENT Line0004 = "l wait, or just go through because it has been performed\n"

[DEF, SF.Seq[12].Cleanup]
%[0] = Step
%TYPE: %[0] = "NI_Lock"

[SF.Seq[12].Cleanup[0].TS]
Id = "ID#:3lviEuf57xG53NQli0T1uC"

[SF.Seq[12].Cleanup[0]]
NameOrRefExpr = "Parameters.LockName"
Operation = 2
CreateIfDoesNotExist = True

[DEF, SF.Seq[12].Cleanup[0]]
%NAME = "---------------------Unlock"

[DEF, SF.Seq[12].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[12].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[12].Requirements]
Links = Strs

[SF.Seq[12].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[13]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Lock Actuator POST UUT"

[DEF, SF.Seq[13].Parameters]
SelectedActuatorName = Str
SelectedTargetPosition = Num
LockName = Str

[SF.Seq[13].Parameters]
%FLG: SelectedActuatorName = 4
%FLG: SelectedTargetPosition = 4
%FLG: LockName = 4

[SF.Seq[13]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [3]
%FLG: Main = 4194304
%HI: Setup = [0]
%FLG: Setup = 4194304
%HI: Cleanup = [0]
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[13].Locals]
ResultList = Objs
SELECTED_ACTUATOR_Error = Bool
SELECTED_ACTUATOR_ErrorCode = Num
SELECTED_ACTUATOR_ErrorText = Str
SELECTED_ACTUATOR_Result = Num

[DEF, SF.Seq[13].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[13].Locals]
%FLG: ResultList = 4194304

[DEF, SF.Seq[13].Main]
%[0] = Step
%TYPE: %[0] = "Statement"
%[1] = Step
%TYPE: %[1] = "Label"
%[2] = Step
%TYPE: %[2] = "SequenceCall"
%[3] = Step
%TYPE: %[3] = "SequenceCall"

[SF.Seq[13].Main[0].TS]
Id = "ID#:SpfcMOn57xG53NQli0T1uC"
PreCond = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] == Enums.SEQUENCE_STATE.ERROR"
PostExpr = "RunState.GotoCleanup = True"

[SF.Seq[13].Main[0]]
%COMMENT Line0001 = "Go to cleanup in case that Test Socket is alredy in ERROR state\n(This can be true if previous thread that entered Lock "
%COMMENT Line0002 = "first, run into error on the actuator)"

[DEF, SF.Seq[13].Main[0]]
%NAME = "Go to cleanup"

[SF.Seq[13].Main[1].TS]
Id = "ID#:QLrTJOn57xG53NQli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[13].Main]
%FLG: %[1] = 67108864

[SF.Seq[13].Main[2].TS]
Id = "ID#:QbrTJOn57xG53NQli0T1uC"

[DEF, SF.Seq[13].Main[2].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[13].Main[2].TS.SData]
SeqName = "Trigger Actuator"
UseCurFile = True

[DEF, SF.Seq[13].Main[2].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[13].Main[2].TS.SData.ActualArgs]
Actuator_Name = "TYPE, SequenceArgument"
Actuator_Target = "TYPE, SequenceArgument"
Actuator_Error = "TYPE, SequenceArgument"
Actuator_ErrorCode = "TYPE, SequenceArgument"
Actuator_ErrorText = "TYPE, SequenceArgument"
Actuator_Result = "TYPE, SequenceArgument"

[SF.Seq[13].Main[2].TS.SData.ActualArgs.Actuator_Name]
UseDef = False
Expr = "Parameters.SelectedActuatorName"
ParamType = 2

[SF.Seq[13].Main[2].TS.SData.ActualArgs.Actuator_Target]
UseDef = False
Expr = "Parameters.SelectedTargetPosition"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[13].Main[2].TS.SData.ActualArgs.Actuator_Error]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_Error"
ParamType = 16

[SF.Seq[13].Main[2].TS.SData.ActualArgs.Actuator_ErrorCode]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_ErrorCode"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[13].Main[2].TS.SData.ActualArgs.Actuator_ErrorText]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_ErrorText"
ParamType = 2

[SF.Seq[13].Main[2].TS.SData.ActualArgs.Actuator_Result]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_Result"
ParamType = 4
ParamRepresentation = 1

[DEF, SF.Seq[13].Main[2]]
%NAME = "Trigger Selected Actuator"

[SF.Seq[13].Main[3].TS]
Id = "ID#:QrrTJOn57xG53NQli0T1uC"
PreCond = "Locals.SELECTED_ACTUATOR_Error"
PostExpr = "RunState.GotoCleanup = True"

[DEF, SF.Seq[13].Main[3].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[13].Main[3].TS.SData]
SeqName = "Check if Actuator is in Error BOTH TS"
UseCurFile = True

[DEF, SF.Seq[13].Main[3].TS.SData]
ActualArgs = Arguments

[DEF, SF.Seq[13].Main[3].TS.SData.ActualArgs]
Actuator_Name = "TYPE, SequenceArgument"
Actuator_Error = "TYPE, SequenceArgument"
Actuator_ErrorCode = "TYPE, SequenceArgument"
Actuator_ErrorText = "TYPE, SequenceArgument"

[SF.Seq[13].Main[3].TS.SData.ActualArgs.Actuator_Name]
UseDef = False
Expr = "Parameters.SelectedActuatorName"
ParamType = 2

[SF.Seq[13].Main[3].TS.SData.ActualArgs.Actuator_Error]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_Error"
ParamType = 16

[SF.Seq[13].Main[3].TS.SData.ActualArgs.Actuator_ErrorCode]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_ErrorCode"
ParamType = 4
ParamRepresentation = 1

[SF.Seq[13].Main[3].TS.SData.ActualArgs.Actuator_ErrorText]
UseDef = False
Expr = "Locals.SELECTED_ACTUATOR_ErrorText"
ParamType = 2

[DEF, SF.Seq[13].Main[3]]
%NAME = "Check if Selected Actuator is in ERROR"

[DEF, SF.Seq[13].Setup]
%[0] = Step
%TYPE: %[0] = "NI_Lock"

[SF.Seq[13].Setup[0].TS]
Id = "ID#:PrrTJOn57xG53NQli0T1uC"
%HI: AdditionalResultsHints = [2]

[DEF, SF.Seq[13].Setup[0].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"
%[1] = "TYPE, NI_CustomResult"
%[2] = "TYPE, NI_CustomResult"

[SF.Seq[13].Setup[0].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_MUTEX_STEP_TYPE\", \"CREATE_LOCK_HINT\")"
ValueToLog = "Step.CreateIfDoesNotExist"

[SF.Seq[13].Setup[0].TS.AdditionalResultsHints[1]]
Name = "ResStr(\"NI_MUTEX_STEP_TYPE\", \"LOCK_OPERATION_LIFETIME_HINT\")"
ValueToLog Line0001 = "ResStr(\"NI_MUTEX_STEP_TYPE\", (Step.LockLifetime == 0 ? \"LIFETIME_SEQUENCE\" :\n    Step.LockLifetime == 1 ? \"LIFETIM"
ValueToLog Line0002 = "E_THREAD\" :\n    Step.LockLifetime == 2 ? \"LIFETIME_REFERENCE\" :\n    \"\"))"

[SF.Seq[13].Setup[0].TS.AdditionalResultsHints[2]]
Name = "ResStr(\"NI_MUTEX_STEP_TYPE\", \"TIMEOUT\")"
ValueToLog = "Step.TimeoutEnabled ? Str(Evaluate(Step.TimeoutExpr)) : ResStr(\"NI_MUTEX_STEP_TYPE\", \"DISABLED\")"

[DEF, SF.Seq[13].Setup[0]]
Result = Obj
%NAME = "---------------------Lock"

[DEF, SF.Seq[13].Setup[0].Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"
TimeoutOccurred = Bool

[SF.Seq[13].Setup[0].Result]
%FLG: Error = 4194304
%FLG: Status = 4194304
%FLG: ReportText = 4194304
%FLG: Common = 0

[SF.Seq[13].Setup[0]]
%FLG: Result = 4194304
NameOrRefExpr = "Parameters.LockName"
Operation = 1
CreateIfDoesNotExist = True
%COMMENT Line0001 = "We use Lock function to perform next actuation only once:\nWhen first thread come here it will perform the action\nThen "
%COMMENT Line0002 = "if second comes after first, it will see that the actuator is alredy in Target position\nAdditionaly, we don't need to u"
%COMMENT Line0003 = "se IF TestScoket == CHMB1_LEFT. for example, do the actuation\nWho comes first it will perform it, and the other one wil"
%COMMENT Line0004 = "l wait, or just go through because it has been performed\n"

[DEF, SF.Seq[13].Cleanup]
%[0] = Step
%TYPE: %[0] = "NI_Lock"

[SF.Seq[13].Cleanup[0].TS]
Id = "ID#:RLrTJOn57xG53NQli0T1uC"

[SF.Seq[13].Cleanup[0]]
NameOrRefExpr = "Parameters.LockName"
Operation = 2
CreateIfDoesNotExist = True

[DEF, SF.Seq[13].Cleanup[0]]
%NAME = "---------------------Unlock"

[DEF, SF.Seq[13].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[13].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[13].Requirements]
Links = Strs

[SF.Seq[13].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[14]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Trigger Actuator"

[DEF, SF.Seq[14].Parameters]
Actuator_Name = Str
Actuator_Target = Num
Actuator_Error = Bool
Actuator_ErrorCode = Num
Actuator_ErrorText = Str
Actuator_Result = Num

[SF.Seq[14].Parameters]
%FLG: Actuator_Name = 4
%FLG: Actuator_Target = 4
%FLG: Actuator_Error = 4
%FLG: Actuator_ErrorCode = 4
%FLG: Actuator_ErrorText = 4
%FLG: Actuator_Result = 4

[SF.Seq[14]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [57]
%FLG: Main = 4194304
%FLG: Setup = 4194304
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[14].Locals]
ResultList = Objs
Rework = Num
ActuatorWasReady = Bool
TargetPositionReached = Bool
ExpiredTimeToWait = Bool
Actuator_Error = Bool
Actuator_ErrorCode = Num
Actuator_ErrorText = Str
Actuator_Result = Num
Actuator_ResetFailed = Bool
TwoSecondesElapsed = Bool
Counter = Num

[DEF, SF.Seq[14].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[14].Locals]
%FLG: ResultList = 4194304

[DEF, SF.Seq[14].Main]
%[0] = Step
%TYPE: %[0] = "Action"
%[1] = Step
%TYPE: %[1] = "Label"
%[2] = Step
%TYPE: %[2] = "NI_Flow_If"
%[3] = Step
%TYPE: %[3] = "Label"
%[4] = Step
%TYPE: %[4] = "Statement"
%[5] = Step
%TYPE: %[5] = "Label"
%[6] = Step
%TYPE: %[6] = "NI_Flow_Else"
%[7] = Step
%TYPE: %[7] = "Label"
%[8] = Step
%TYPE: %[8] = "Action"
%[9] = Step
%TYPE: %[9] = "NI_Flow_If"
%[10] = Step
%TYPE: %[10] = "Action"
%[11] = Step
%TYPE: %[11] = "NI_Flow_End"
%[12] = Step
%TYPE: %[12] = "Label"
%[13] = Step
%TYPE: %[13] = "NI_Flow_If"
%[14] = Step
%TYPE: %[14] = "Statement"
%[15] = Step
%TYPE: %[15] = "Action"
%[16] = Step
%TYPE: %[16] = "Action"
%[17] = Step
%TYPE: %[17] = "Action"
%[18] = Step
%TYPE: %[18] = "Label"
%[19] = Step
%TYPE: %[19] = "NI_Flow_If"
%[20] = Step
%TYPE: %[20] = "NI_Flow_If"
%[21] = Step
%TYPE: %[21] = "Action"
%[22] = Step
%TYPE: %[22] = "Action"
%[23] = Step
%TYPE: %[23] = "Statement"
%[24] = Step
%TYPE: %[24] = "NI_Flow_Else"
%[25] = Step
%TYPE: %[25] = "Action"
%[26] = Step
%TYPE: %[26] = "NI_Flow_End"
%[27] = Step
%TYPE: %[27] = "NI_Flow_End"
%[28] = Step
%TYPE: %[28] = "NI_Flow_Else"
%[29] = Step
%TYPE: %[29] = "Action"
%[30] = Step
%TYPE: %[30] = "Action"
%[31] = Step
%TYPE: %[31] = "Action"
%[32] = Step
%TYPE: %[32] = "Statement"
%[33] = Step
%TYPE: %[33] = "NI_Flow_While"
%[34] = Step
%TYPE: %[34] = "Action"
%[35] = Step
%TYPE: %[35] = "NI_Wait"
%[36] = Step
%TYPE: %[36] = "Statement"
%[37] = Step
%TYPE: %[37] = "NI_Flow_If"
%[38] = Step
%TYPE: %[38] = "Statement"
%[39] = Step
%TYPE: %[39] = "NI_Flow_End"
%[40] = Step
%TYPE: %[40] = "NI_Flow_End"
%[41] = Step
%TYPE: %[41] = "Action"
%[42] = Step
%TYPE: %[42] = "Action"
%[43] = Step
%TYPE: %[43] = "Statement"
%[44] = Step
%TYPE: %[44] = "NI_Flow_End"
%[45] = Step
%TYPE: %[45] = "Label"
%[46] = Step
%TYPE: %[46] = "NI_Flow_If"
%[47] = Step
%TYPE: %[47] = "Action"
%[48] = Step
%TYPE: %[48] = "Statement"
%[49] = Step
%TYPE: %[49] = "NI_Flow_ElseIf"
%[50] = Step
%TYPE: %[50] = "Statement"
%[51] = Step
%TYPE: %[51] = "NI_Flow_ElseIf"
%[52] = Step
%TYPE: %[52] = "Statement"
%[53] = Step
%TYPE: %[53] = "NI_Flow_Else"
%[54] = Step
%TYPE: %[54] = "Statement"
%[55] = Step
%TYPE: %[55] = "NI_Flow_End"
%[56] = Step
%TYPE: %[56] = "Label"
%[57] = Step
%TYPE: %[57] = "NI_Flow_End"

[SF.Seq[14].Main[0].TS]
Id = "ID#:0ySpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[0].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[0].TS.SData.ViCall]
VIPath = "..\\..\\LabView\\Actuators\\Check if Actuator is in Target position.vi"
Namespace = "Actuators.lvlib"
TDChecksum = 1527109532
%HI: Parms = [6]

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"
%[6] = "TYPE, VIParameter"

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 11

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[1]]
Label = "Actuator name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator name"

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[2]]
Label = "Target"
ArgVal = "Parameters.Actuator_Target"
Type = 0
WireRequirement = 1
NumType = 2
DisplayType = "Number (I16)"
ConnectorNumber = 9

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[2]]
%NAME = "Target"

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[3]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[3].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[3]]
%NAME = "error in "

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[4]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[4]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[5]]
Label = "Target Position Reached?"
ArgVal = "Locals.TargetPositionReached"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[5]]
%NAME = "Target Position Reached?"

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[6]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[6].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[0].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[0].TS.SData.ViCall.Parms[6]]
%NAME = "error out"

[DEF, SF.Seq[14].Main[0]]
%NAME = "Check if actuator is in Target position and there is no need for actuating"

[SF.Seq[14].Main[1].TS]
Id = "ID#:1CSpbOD17xG519Qli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[14].Main]
%FLG: %[1] = 67108864
%FLG: %[3] = 67108864
%FLG: %[5] = 67108864
%FLG: %[7] = 67108864
%FLG: %[12] = 67108864
%FLG: %[18] = 67108864
%FLG: %[45] = 67108864
%FLG: %[56] = 67108864

[SF.Seq[14].Main[2].TS]
Id = "ID#:1SSpbOD17xG519Qli0T1uC"

[SF.Seq[14].Main[2]]
ConditionExpr = "Locals.TargetPositionReached == True"
%COMMENT = "In case that Actuator is alredy located in target postion we don't need to actuate him"

[DEF, SF.Seq[14].Main[2]]
%NAME = "If"

[SF.Seq[14].Main[3].TS]
Id = "ID#:1iSpbOD17xG519Qli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[14].Main[4].TS]
Id = "ID#:1ySpbOD17xG519Qli0T1uC"
PostExpr Line0001 = "Parameters.Actuator_Error = False,\nParameters.Actuator_ErrorCode = 0,\nParameters.Actuator_ErrorText = \"\",\nParameter"
PostExpr Line0002 = "s.Actuator_Result = 0"

[DEF, SF.Seq[14].Main[4]]
%NAME = "Set Result Parameters"

[SF.Seq[14].Main[5].TS]
Id = "ID#:2CSpbOD17xG519Qli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[14].Main[6].TS]
Id = "ID#:2SSpbOD17xG519Qli0T1uC"

[SF.Seq[14].Main[6]]
%COMMENT = "In case that Actuator is in diffrent postion from target we need to perform actuation"

[DEF, SF.Seq[14].Main[6]]
%NAME = "Else"

[SF.Seq[14].Main[7].TS]
Id = "ID#:2iSpbOD17xG519Qli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[14].Main[8].TS]
Id = "ID#:2ySpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[8].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[8].TS.SData.ViCall]
VIPath = "Check if Actuator has Error.vi"
Namespace = "Actuators.lvlib"
VIDescription = "Check if Actuator has Error"
TDChecksum = 925771036
%HI: Parms = [5]

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"

[SF.Seq[14].Main[8].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[8].TS.SData.ViCall.Parms[1]]
Label = "Actuator Name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 9

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator Name"

[SF.Seq[14].Main[8].TS.SData.ViCall.Parms[2]]
Label = "error in (no error)"
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 7

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[8].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[8].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[8].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[2]]
%NAME = "error in (no error)"

[SF.Seq[14].Main[8].TS.SData.ViCall.Parms[3]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[3]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[8].TS.SData.ViCall.Parms[4]]
Label = "Actuator has Error?"
ArgVal = "Locals.Actuator_Error"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[4]]
%NAME = "Actuator has Error?"

[SF.Seq[14].Main[8].TS.SData.ViCall.Parms[5]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[5].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[8].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[8].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[8].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[8].TS.SData.ViCall.Parms[5]]
%NAME = "error out"

[DEF, SF.Seq[14].Main[8]]
%NAME = "Check actuator Error"

[SF.Seq[14].Main[9].TS]
Id = "ID#:3CSpbOD17xG519Qli0T1uC"

[SF.Seq[14].Main[9]]
ConditionExpr = "Locals.Actuator_Error"

[DEF, SF.Seq[14].Main[9]]
%NAME = "If"

[SF.Seq[14].Main[10].TS]
Id = "ID#:3SSpbOD17xG519Qli0T1uC"
CustExpr = "Locals.Actuator_ResetFailed == True"
CustTrueAct = "Goto"
CustTrueActTarget = "\"ID#:ASWpbOD17xG519Qli0T1uC\""

[DEF, SF.Seq[14].Main[10].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[10].TS.SData.ViCall]
VIPath = "C:\\UTP\\LabView\\Actuators\\Reset Actuator.vi"
Namespace = "Actuators.lvlib"
VIDescription = "Reset Actuator"
TDChecksum = -884018803
%HI: Parms = [6]

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"
%[6] = "TYPE, VIParameter"

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 11

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[1]]
Label = "Actuator Name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator Name"

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[2]]
Label = "Time to wait"
ArgVal = "1000 //10s"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
ConnectorNumber = 9

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[2]]
%NAME = "Time to wait"

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[3]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[3].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[3]]
%NAME = "error in "

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[4]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[4]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[5]]
Label = "ExpiredTimeToWait?"
ArgVal = "Locals.Actuator_ResetFailed"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[5]]
%NAME = "ExpiredTimeToWait?"

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[6]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[6].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[10].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[10].TS.SData.ViCall.Parms[6]]
%NAME = "error out"

[SF.Seq[14].Main[10]]
%COMMENT = "If Reset Failed, immediately stop reworking"

[DEF, SF.Seq[14].Main[10]]
%NAME = "Reset Actuator"

[SF.Seq[14].Main[11].TS]
Id = "ID#:3iSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[11]]
%NAME = "End"

[SF.Seq[14].Main[12].TS]
Id = "ID#:3ySpbOD17xG519Qli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[14].Main[13].TS]
Id = "ID#:4CSpbOD17xG519Qli0T1uC"

[SF.Seq[14].Main[13]]
ConditionExpr = "Parameters.Actuator_Name != \"DRAWER_LOCK\" // ADD THE FAST ACTUATORS IF THE SYSTEM HAS ONES"
%COMMENT = "FOR THE NORMAL ACTUATORS"

[DEF, SF.Seq[14].Main[13]]
%NAME = "If"

[SF.Seq[14].Main[14].TS]
Id = "ID#:4SSpbOD17xG519Qli0T1uC"
PostExpr = "Locals.Rework = 2"

[DEF, SF.Seq[14].Main[14]]
%NAME = "Set value of the Rework to 2"

[SF.Seq[14].Main[15].TS]
Id = "ID#:4iSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[15].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[15].TS.SData.ViCall]
VIPath = "Trigger Actuator.vi"
Namespace = "Actuators.lvlib"
VIDescription Line0001 = "Target 100 - Home position\nTarget 101 - Work position\nExpiredTimeToWait? => Rising/Falling edge wasn't detected\nThis "
VIDescription Line0002 = "VI will perform actuator action, if actutor is Ready (No errors)\nReading period is 10ms\n"
TDChecksum = -346225533
%HI: Parms = [8]

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"
%[6] = "TYPE, VIParameter"
%[7] = "TYPE, VIParameter"
%[8] = "TYPE, VIParameter"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[1]]
Label = "Actuator name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 9

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator name"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[2]]
Label = "Target"
ArgVal = "Parameters.Actuator_Target"
Type = 0
WireRequirement = 1
NumType = 2
DisplayType = "Number (I16)"
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[2]]
%NAME = "Target"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[3]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 7

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[3].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[3]]
%NAME = "error in "

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[4]]
Label = "Time to wait"
ArgVal = "1000 // 20s/10s"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
ConnectorNumber = 5

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[4]]
%NAME = "Time to wait"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[5]]
Label = "UTP IO Session out "
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[5]]
%NAME = "UTP IO Session out "

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[6]]
Label = "Actuator was Ready?"
ArgVal = "Locals.ActuatorWasReady"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[6]]
%NAME = "Actuator was Ready?"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[7]]
Label = "ExpiredTimeToWait?"
ArgVal = "Locals.ExpiredTimeToWait"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
Direction = 1
ConnectorNumber = 1

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[7]]
%NAME = "ExpiredTimeToWait?"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[8]]
Label = "error out "
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[8].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[8].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[8].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[8].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[8].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[15].TS.SData.ViCall.Parms[8].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[8].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[15].TS.SData.ViCall.Parms[8]]
%NAME = "error out "

[DEF, SF.Seq[14].Main[15]]
%NAME = "Activate actuator"

[SF.Seq[14].Main[16].TS]
Id = "ID#:4ySpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[16].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[16].TS.SData.ViCall]
VIPath = "Check if Actuator is in Target position.vi"
Namespace = "Actuators.lvlib"
TDChecksum = 1527109532
%HI: Parms = [6]

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"
%[6] = "TYPE, VIParameter"

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 11

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[1]]
Label = "Actuator name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator name"

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[2]]
Label = "Target"
ArgVal = "Parameters.Actuator_Target"
Type = 0
WireRequirement = 1
NumType = 2
DisplayType = "Number (I16)"
ConnectorNumber = 9

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[2]]
%NAME = "Target"

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[3]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[3].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[3]]
%NAME = "error in "

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[4]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[4]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[5]]
Label = "Target Position Reached?"
ArgVal = "Locals.TargetPositionReached"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[5]]
%NAME = "Target Position Reached?"

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[6]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[6].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[16].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[16].TS.SData.ViCall.Parms[6]]
%NAME = "error out"

[DEF, SF.Seq[14].Main[16]]
%NAME = "Check if actuator is in Target position"

[SF.Seq[14].Main[17].TS]
Id = "ID#:5CSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[17].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[17].TS.SData.ViCall]
VIPath = "Check if Actuator has Error.vi"
Namespace = "Actuators.lvlib"
VIDescription = "Check if Actuator has Error"
TDChecksum = 925771036
%HI: Parms = [5]

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"

[SF.Seq[14].Main[17].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[17].TS.SData.ViCall.Parms[1]]
Label = "Actuator Name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 9

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator Name"

[SF.Seq[14].Main[17].TS.SData.ViCall.Parms[2]]
Label = "error in (no error)"
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 7

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[17].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[17].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[17].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[2]]
%NAME = "error in (no error)"

[SF.Seq[14].Main[17].TS.SData.ViCall.Parms[3]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[3]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[17].TS.SData.ViCall.Parms[4]]
Label = "Actuator has Error?"
ArgVal = "Locals.Actuator_Error"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[4]]
%NAME = "Actuator has Error?"

[SF.Seq[14].Main[17].TS.SData.ViCall.Parms[5]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[5].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[17].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[17].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[17].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[17].TS.SData.ViCall.Parms[5]]
%NAME = "error out"

[DEF, SF.Seq[14].Main[17]]
%NAME = "Check actuator Error"

[SF.Seq[14].Main[18].TS]
Id = "ID#:5SSpbOD17xG519Qli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[14].Main[19].TS]
Id = "ID#:5iSpbOD17xG519Qli0T1uC"

[SF.Seq[14].Main[19]]
ConditionExpr = "Locals.ExpiredTimeToWait != True"
%COMMENT Line0001 = "In case that TimeToWait was not expired continue;\nElse, stop working => Something is wrong with communication between P"
%COMMENT Line0002 = "LC and PC"

[DEF, SF.Seq[14].Main[19]]
%NAME = "If"

[SF.Seq[14].Main[20].TS]
Id = "ID#:5ySpbOD17xG519Qli0T1uC"

[SF.Seq[14].Main[20]]
ConditionExpr = "Locals.Actuator_Error == True && Locals.Rework > 0"
%COMMENT = "In case that we have an error, we will try to execute actuator action 2 more times"

[DEF, SF.Seq[14].Main[20]]
%NAME = "If"

[SF.Seq[14].Main[21].TS]
Id = "ID#:6CSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[21].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[21].TS.SData.ViCall]
VIPath = "Read Error Code.vi"
Namespace = "Actuators.lvlib"
VIDescription = "Read Error Code and Error Text"
TDChecksum = 800915831
%HI: Parms = [5]

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"

[SF.Seq[14].Main[21].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 11

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[21].TS.SData.ViCall.Parms[1]]
Label = "Actuator Name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator Name"

[SF.Seq[14].Main[21].TS.SData.ViCall.Parms[2]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[21].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[21].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[21].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[2]]
%NAME = "error in "

[SF.Seq[14].Main[21].TS.SData.ViCall.Parms[3]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[3]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[21].TS.SData.ViCall.Parms[4]]
Label = "Error Code"
ArgVal = "Locals.Actuator_ErrorCode"
Type = 0
WireRequirement = 1
NumType = 2
DisplayType = "Number (I16)"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[4]]
%NAME = "Error Code"

[SF.Seq[14].Main[21].TS.SData.ViCall.Parms[5]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[5].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[21].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[21].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[21].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[21].TS.SData.ViCall.Parms[5]]
%NAME = "error out"

[DEF, SF.Seq[14].Main[21]]
%NAME = "Read Error Code"

[SF.Seq[14].Main[22].TS]
Id = "ID#:6SSpbOD17xG519Qli0T1uC"
CustExpr = "Locals.Actuator_ResetFailed == True"
CustTrueAct = "Goto"
CustTrueActTarget = "\"ID#:7SSpbOD17xG519Qli0T1uC\""

[DEF, SF.Seq[14].Main[22].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[22].TS.SData.ViCall]
VIPath = "Reset Actuator.vi"
Namespace = "Actuators.lvlib"
VIDescription = "Reset Actuator"
TDChecksum = -884018803
%HI: Parms = [6]

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"
%[6] = "TYPE, VIParameter"

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 11

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[1]]
Label = "Actuator Name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator Name"

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[2]]
Label = "Time to wait"
ArgVal = "1000 //10s"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
ConnectorNumber = 9

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[2]]
%NAME = "Time to wait"

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[3]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[3].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[3]]
%NAME = "error in "

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[4]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[4]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[5]]
Label = "ExpiredTimeToWait?"
ArgVal = "Locals.Actuator_ResetFailed"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[5]]
%NAME = "ExpiredTimeToWait?"

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[6]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[6].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[22].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[22].TS.SData.ViCall.Parms[6]]
%NAME = "error out"

[SF.Seq[14].Main[22]]
%COMMENT = "If Reset Failed, immediately stop reworking"

[DEF, SF.Seq[14].Main[22]]
%NAME = "Reset Actuator"

[SF.Seq[14].Main[23].TS]
Id = "ID#:6iSpbOD17xG519Qli0T1uC"
CustExpr = "True"
CustTrueAct = "Goto"
CustTrueActTarget = "\"ID#:4iSpbOD17xG519Qli0T1uC\""
PostExpr = "Locals.Rework = Locals.Rework - 1"

[SF.Seq[14].Main[23]]
%COMMENT = "Post Action goes again to try to Activate actuator"

[DEF, SF.Seq[14].Main[23]]
%NAME = "Decrease Rework by one"

[SF.Seq[14].Main[24].TS]
Id = "ID#:6ySpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[24]]
%NAME = "Else"

[SF.Seq[14].Main[25].TS]
Id = "ID#:7CSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[25].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[25].TS.SData.ViCall]
VIPath = "Check Result of the actuation.vi"
Namespace = "Actuators.lvlib"
VIDescription = "Check result of the actuation"
TDChecksum = -27966825
%HI: Parms = [5]

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"

[SF.Seq[14].Main[25].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 11

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[25].TS.SData.ViCall.Parms[1]]
Label = "Actuator name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator name"

[SF.Seq[14].Main[25].TS.SData.ViCall.Parms[2]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[25].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[25].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[25].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[2]]
%NAME = "error in "

[SF.Seq[14].Main[25].TS.SData.ViCall.Parms[3]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[3]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[25].TS.SData.ViCall.Parms[4]]
Label = "Result"
ArgVal = "Locals.Actuator_Result"
Type = 0
WireRequirement = 1
NumType = 2
DisplayType = "Number (I16)"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[4]]
%NAME = "Result"

[SF.Seq[14].Main[25].TS.SData.ViCall.Parms[5]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[5].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[25].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[25].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[25].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[25].TS.SData.ViCall.Parms[5]]
%NAME = "error out"

[DEF, SF.Seq[14].Main[25]]
%NAME = "Check Result of the actuation"

[SF.Seq[14].Main[26].TS]
Id = "ID#:7SSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[26]]
%NAME = "End"

[SF.Seq[14].Main[27].TS]
Id = "ID#:7iSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[27]]
%NAME = "End"

[SF.Seq[14].Main[28].TS]
Id = "ID#:7ySpbOD17xG519Qli0T1uC"

[SF.Seq[14].Main[28]]
%COMMENT = "FOR THE FAST ACTUATORS"

[DEF, SF.Seq[14].Main[28]]
%NAME = "Else"

[SF.Seq[14].Main[29].TS]
Id = "ID#:8CSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[29].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[29].TS.SData.ViCall]
VIPath = "Set Target.vi"
Namespace = "Actuators.lvlib"
VIDescription Line0001 = "Target 100 - Home position\nTarget 101 - Work position\nExpiredTimeToWait? => Rising/Falling edge wasn't detected\nThis "
VIDescription Line0002 = "VI will perform actuator action, if actutor is Ready (No errors)\nReading period is 10ms\n"
TDChecksum = 602567706
%HI: Parms = [6]

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"
%[6] = "TYPE, VIParameter"

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[1]]
Label = "Actuator name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 9

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator name"

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[2]]
Label = "Target"
ArgVal = "Parameters.Actuator_Target"
Type = 0
WireRequirement = 1
NumType = 2
DisplayType = "Number (I16)"
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[2]]
%NAME = "Target"

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[3]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 7

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[3].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[3]]
%NAME = "error in "

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[4]]
Label = "UTP IO Session out "
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[4]]
%NAME = "UTP IO Session out "

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[5]]
Label = "Actuator was Ready?"
ArgVal = "Locals.ActuatorWasReady"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[5]]
%NAME = "Actuator was Ready?"

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[6]]
Label = "error out "
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[6].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[29].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[29].TS.SData.ViCall.Parms[6]]
%NAME = "error out "

[DEF, SF.Seq[14].Main[29]]
%NAME = "Set Target"

[SF.Seq[14].Main[30].TS]
Id = "ID#:8SSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[30].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[30].TS.SData.ViCall]
VIPath = "Processing the actuator action without wait for Running Signal.vi"
Namespace = "Actuators.lvlib"
VIDescription = "Processing actutor action\nPeriod for reading is 10ms"
TDChecksum = -1346249713
%HI: Parms = [3]

[DEF, SF.Seq[14].Main[30].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"

[SF.Seq[14].Main[30].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[30].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[30].TS.SData.ViCall.Parms[1]]
Label = "Time to wait"
ArgVal = "999"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True
ConnectorNumber = 9

[DEF, SF.Seq[14].Main[30].TS.SData.ViCall.Parms[1]]
%NAME = "Time to wait"

[SF.Seq[14].Main[30].TS.SData.ViCall.Parms[2]]
Label = "Actuator Name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[30].TS.SData.ViCall.Parms[2]]
%NAME = "Actuator Name"

[SF.Seq[14].Main[30].TS.SData.ViCall.Parms[3]]
Label = "error in (no error)"
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 7

[DEF, SF.Seq[14].Main[30].TS.SData.ViCall.Parms[3].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[30].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[30].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[30].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[30].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[30].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[30].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[30].TS.SData.ViCall.Parms[3]]
%NAME = "error in (no error)"

[DEF, SF.Seq[14].Main[30]]
%NAME = "Send Execute Signal"

[SF.Seq[14].Main[31].TS]
Id = "ID#:8iSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[31].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[31].TS.SData.ViCall]
VIPath = "Check if Actuator is in Target position.vi"
Namespace = "Actuators.lvlib"
TDChecksum = 1527109532
%HI: Parms = [6]

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"
%[6] = "TYPE, VIParameter"

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 11

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[1]]
Label = "Actuator name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator name"

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[2]]
Label = "Target"
ArgVal = "Parameters.Actuator_Target"
Type = 0
WireRequirement = 1
NumType = 2
DisplayType = "Number (I16)"
ConnectorNumber = 9

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[2]]
%NAME = "Target"

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[3]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[3].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[3]]
%NAME = "error in "

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[4]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[4]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[5]]
Label = "Target Position Reached?"
ArgVal = "Locals.TargetPositionReached"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[5]]
%NAME = "Target Position Reached?"

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[6]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[6].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[31].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[31].TS.SData.ViCall.Parms[6]]
%NAME = "error out"

[DEF, SF.Seq[14].Main[31]]
%NAME = "Check if actuator is in Target position"

[SF.Seq[14].Main[32].TS]
Id = "ID#:8ySpbOD17xG519Qli0T1uC"
PostExpr = "Locals.TwoSecondesElapsed = False,\nLocals.Counter = 0"

[DEF, SF.Seq[14].Main[32]]
%NAME = "Set Error Parameters"

[SF.Seq[14].Main[33].TS]
Id = "ID#:9CSpbOD17xG519Qli0T1uC"

[SF.Seq[14].Main[33]]
ConditionExpr = "Locals.TargetPositionReached == False && Locals.TwoSecondesElapsed == False"

[DEF, SF.Seq[14].Main[33]]
%NAME = "While"

[SF.Seq[14].Main[34].TS]
Id = "ID#:9SSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[34].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[34].TS.SData.ViCall]
VIPath = "Check if Actuator is in Target position.vi"
Namespace = "Actuators.lvlib"
TDChecksum = 1527109532
%HI: Parms = [6]

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"
%[6] = "TYPE, VIParameter"

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 11

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[1]]
Label = "Actuator name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator name"

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[2]]
Label = "Target"
ArgVal = "Parameters.Actuator_Target"
Type = 0
WireRequirement = 1
NumType = 2
DisplayType = "Number (I16)"
ConnectorNumber = 9

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[2]]
%NAME = "Target"

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[3]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[3].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[3].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[3].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[3].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[3]]
%NAME = "error in "

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[4]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[4]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[5]]
Label = "Target Position Reached?"
ArgVal = "Locals.TargetPositionReached"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[5]]
%NAME = "Target Position Reached?"

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[6]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[6].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[6].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[6].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[34].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[6].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[34].TS.SData.ViCall.Parms[6]]
%NAME = "error out"

[DEF, SF.Seq[14].Main[34]]
%NAME = "Check if actuator is in Target position"

[SF.Seq[14].Main[35].TS]
Id = "ID#:9iSpbOD17xG519Qli0T1uC"
%HI: AdditionalResultsHints = [0]

[DEF, SF.Seq[14].Main[35].TS.AdditionalResultsHints]
%[0] = "TYPE, NI_CustomResult"

[SF.Seq[14].Main[35].TS.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"TIME_TO_WAIT\")"
ValueToLog = "Evaluate(Step.TimeExpr)"

[SF.Seq[14].Main[35]]
SeqCallName = "End"
TimeExpr = "0.05"

[DEF, SF.Seq[14].Main[35]]
%NAME = "Wait 50ms"

[SF.Seq[14].Main[36].TS]
Id = "ID#:9ySpbOD17xG519Qli0T1uC"
PostExpr = "Locals.Counter++"

[DEF, SF.Seq[14].Main[36]]
%NAME = "Increase Counter"

[SF.Seq[14].Main[37].TS]
Id = "ID#:+CSpbOD17xG519Qli0T1uC"

[SF.Seq[14].Main[37]]
ConditionExpr = "Locals.Counter > 40"

[DEF, SF.Seq[14].Main[37]]
%NAME = "If"

[SF.Seq[14].Main[38].TS]
Id = "ID#:+SSpbOD17xG519Qli0T1uC"
PostExpr = "Locals.TwoSecondesElapsed = True"

[DEF, SF.Seq[14].Main[38]]
%NAME = "Increase Counter"

[SF.Seq[14].Main[39].TS]
Id = "ID#:+iSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[39]]
%NAME = "End"

[SF.Seq[14].Main[40].TS]
Id = "ID#:+ySpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[40]]
%NAME = "End"

[SF.Seq[14].Main[41].TS]
Id = "ID#:/CSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[41].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[41].TS.SData.ViCall]
VIPath = "Check if Actuator has Error.vi"
Namespace = "Actuators.lvlib"
VIDescription = "Check if Actuator has Error"
TDChecksum = 925771036
%HI: Parms = [5]

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"

[SF.Seq[14].Main[41].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[41].TS.SData.ViCall.Parms[1]]
Label = "Actuator Name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 9

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator Name"

[SF.Seq[14].Main[41].TS.SData.ViCall.Parms[2]]
Label = "error in (no error)"
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 7

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[41].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[41].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[41].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[2]]
%NAME = "error in (no error)"

[SF.Seq[14].Main[41].TS.SData.ViCall.Parms[3]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[3]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[41].TS.SData.ViCall.Parms[4]]
Label = "Actuator has Error?"
ArgVal = "Locals.Actuator_Error"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[4]]
%NAME = "Actuator has Error?"

[SF.Seq[14].Main[41].TS.SData.ViCall.Parms[5]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[5].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[41].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[41].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[41].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[41].TS.SData.ViCall.Parms[5]]
%NAME = "error out"

[DEF, SF.Seq[14].Main[41]]
%NAME = "Check actuator Error"

[SF.Seq[14].Main[42].TS]
Id = "ID#:/SSpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[42].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[42].TS.SData.ViCall]
VIPath = "Read Error Code.vi"
Namespace = "Actuators.lvlib"
VIDescription = "Read Error Code and Error Text"
TDChecksum = 800915831
%HI: Parms = [5]

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"

[SF.Seq[14].Main[42].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 11

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[42].TS.SData.ViCall.Parms[1]]
Label = "Actuator Name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator Name"

[SF.Seq[14].Main[42].TS.SData.ViCall.Parms[2]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[42].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[42].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[42].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[2]]
%NAME = "error in "

[SF.Seq[14].Main[42].TS.SData.ViCall.Parms[3]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[3]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[42].TS.SData.ViCall.Parms[4]]
Label = "Error Code"
ArgVal = "Locals.Actuator_ErrorCode"
Type = 0
WireRequirement = 1
NumType = 2
DisplayType = "Number (I16)"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[4]]
%NAME = "Error Code"

[SF.Seq[14].Main[42].TS.SData.ViCall.Parms[5]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[5].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[42].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[42].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[42].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[42].TS.SData.ViCall.Parms[5]]
%NAME = "error out"

[DEF, SF.Seq[14].Main[42]]
%NAME = "Read Error Code"

[SF.Seq[14].Main[43].TS]
Id = "ID#:/iSpbOD17xG519Qli0T1uC"
PostExpr = "Locals.Rework = 0"

[DEF, SF.Seq[14].Main[43]]
%NAME = "Set Rework to 0"

[SF.Seq[14].Main[44].TS]
Id = "ID#:/ySpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[44]]
%NAME = "End"

[SF.Seq[14].Main[45].TS]
Id = "ID#:ACWpbOD17xG519Qli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[14].Main[46].TS]
Id = "ID#:ASWpbOD17xG519Qli0T1uC"

[SF.Seq[14].Main[46]]
ConditionExpr = "(Locals.Actuator_Error == True && Locals.Rework == 0)  || (Locals.ActuatorWasReady == False)"
%COMMENT = "In case that we have an error after rework 2 times => Complete Error"

[DEF, SF.Seq[14].Main[46]]
%NAME = "If"

[SF.Seq[14].Main[47].TS]
Id = "ID#:AiWpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[47].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[14].Main[47].TS.SData.ViCall]
VIPath = "Read Error Code.vi"
Namespace = "Actuators.lvlib"
VIDescription = "Read Error Code and Error Text"
TDChecksum = 800915831
%HI: Parms = [5]

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"
%[5] = "TYPE, VIParameter"

[SF.Seq[14].Main[47].TS.SData.ViCall.Parms[0]]
Label = "UTP IO Session in"
ArgVal = "StationGlobals.UTPIOSession"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
ConnectorNumber = 11

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[0]]
%NAME = "UTP IO Session in"

[SF.Seq[14].Main[47].TS.SData.ViCall.Parms[1]]
Label = "Actuator Name"
ArgVal = "Parameters.Actuator_Name"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator Name"

[SF.Seq[14].Main[47].TS.SData.ViCall.Parms[2]]
Label = "error in "
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[47].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[47].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[47].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[2]]
%NAME = "error in "

[SF.Seq[14].Main[47].TS.SData.ViCall.Parms[3]]
Label = "UTP IO Session out"
Type = 4
WireRequirement = 1
ReferenceType = 3
DisplayType = "Number (U32)"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[3]]
%NAME = "UTP IO Session out"

[SF.Seq[14].Main[47].TS.SData.ViCall.Parms[4]]
Label = "Error Code"
ArgVal = "Locals.Actuator_ErrorCode"
Type = 0
WireRequirement = 1
NumType = 2
DisplayType = "Number (I16)"
Direction = 1
ConnectorNumber = 2

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[4]]
%NAME = "Error Code"

[SF.Seq[14].Main[47].TS.SData.ViCall.Parms[5]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[5].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[14].Main[47].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[5].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[14].Main[47].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[5].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[14].Main[47].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[5].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[14].Main[47].TS.SData.ViCall.Parms[5]]
%NAME = "error out"

[DEF, SF.Seq[14].Main[47]]
%NAME = "Read Error Code"

[SF.Seq[14].Main[48].TS]
Id = "ID#:AyWpbOD17xG519Qli0T1uC"
PostExpr Line0001 = "Parameters.Actuator_Error = True,\nParameters.Actuator_ErrorCode = Locals.Actuator_ErrorCode,\nParameters.Actuator_Error"
PostExpr Line0002 = "Text = Locals.Actuator_ErrorText,\nParameters.Actuator_Result = -1"

[DEF, SF.Seq[14].Main[48]]
%NAME = "Set Error Parameters"

[SF.Seq[14].Main[49].TS]
Id = "ID#:BCWpbOD17xG519Qli0T1uC"

[SF.Seq[14].Main[49]]
ConditionExpr = "Locals.ExpiredTimeToWait== True"

[DEF, SF.Seq[14].Main[49]]
%NAME = "Else If"

[SF.Seq[14].Main[50].TS]
Id = "ID#:BSWpbOD17xG519Qli0T1uC"
PostExpr Line0001 = "Parameters.Actuator_Error = True,\nParameters.Actuator_ErrorCode = -9998,\nParameters.Actuator_ErrorText = \"Communicati"
PostExpr Line0002 = "on between PC and PLC failed\",\nParameters.Actuator_Result = -1"

[DEF, SF.Seq[14].Main[50]]
%NAME = "Set Error Parameters"

[SF.Seq[14].Main[51].TS]
Id = "ID#:BiWpbOD17xG519Qli0T1uC"

[SF.Seq[14].Main[51]]
ConditionExpr = "Locals.Actuator_ResetFailed == True"

[DEF, SF.Seq[14].Main[51]]
%NAME = "Else If"

[SF.Seq[14].Main[52].TS]
Id = "ID#:ByWpbOD17xG519Qli0T1uC"
PostExpr Line0001 = "Parameters.Actuator_Error = True,\nParameters.Actuator_ErrorCode = -9999,\nParameters.Actuator_ErrorText = \"Reset Faile"
PostExpr Line0002 = "d\",\nParameters.Actuator_Result = -1"

[DEF, SF.Seq[14].Main[52]]
%NAME = "Set Error Parameters"

[SF.Seq[14].Main[53].TS]
Id = "ID#:CCWpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[53]]
%NAME = "Else"

[SF.Seq[14].Main[54].TS]
Id = "ID#:CSWpbOD17xG519Qli0T1uC"
PostExpr Line0001 = "Parameters.Actuator_Error = False,\nParameters.Actuator_ErrorCode = 0,\nParameters.Actuator_ErrorText = \"\",\nParameter"
PostExpr Line0002 = "s.Actuator_Result = Locals.Actuator_Result"

[DEF, SF.Seq[14].Main[54]]
%NAME = "Set Result Parameters"

[SF.Seq[14].Main[55].TS]
Id = "ID#:CiWpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[55]]
%NAME = "End"

[SF.Seq[14].Main[56].TS]
Id = "ID#:CyWpbOD17xG519Qli0T1uC"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[14].Main[57].TS]
Id = "ID#:DCWpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[14].Main[57]]
%NAME = "End"

[DEF, SF.Seq[14].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[14].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[14].Requirements]
Links = Strs

[SF.Seq[14].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[15]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Check if Actuator is in Error BOTH TS"

[DEF, SF.Seq[15].Parameters]
Actuator_Name = Str
Actuator_Error = Bool
Actuator_ErrorCode = Num
Actuator_ErrorText = Str

[SF.Seq[15].Parameters]
%FLG: Actuator_Name = 4
%FLG: Actuator_Error = 4
Actuator_ErrorCode = 100
%FLG: Actuator_ErrorCode = 4
%FLG: Actuator_ErrorText = 4

[SF.Seq[15]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [9]
%FLG: Main = 4194304
%FLG: Setup = 4194304
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[15].Locals]
ResultList = Objs

[DEF, SF.Seq[15].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[15].Locals]
%FLG: ResultList = 4194304

[DEF, SF.Seq[15].Main]
%[0] = Step
%TYPE: %[0] = "Statement"
%[1] = Step
%TYPE: %[1] = "Action"
%[2] = Step
%TYPE: %[2] = "Statement"
%[3] = Step
%TYPE: %[3] = "NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog"
%[4] = Step
%TYPE: %[4] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[5] = Step
%TYPE: %[5] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[6] = Step
%TYPE: %[6] = "Action"
%[7] = Step
%TYPE: %[7] = "Label"
%[8] = Step
%TYPE: %[8] = "Label"
%[9] = Step
%TYPE: %[9] = "NoffzUTP_IOPLCVariableBooleanWrite"

[SF.Seq[15].Main[0].TS]
Id = "ID#:DiWpbOD17xG519Qli0T1uC"
PostExpr Line0001 = "StationGlobals.SequenceStates[0] = Enums.SEQUENCE_STATE.ERROR,\nStationGlobals.SequenceStates[1] = Enums.SEQUENCE_STATE."
PostExpr Line0002 = "ERROR"

[SF.Seq[15].Main[0]]
%COMMENT Line0001 = "StationGlobals.SequenceStates[\"CHMB1_LEFT\"] = Enums.SEQUENCE_STATE.ERROR,\nStationGlobals.SequenceStates[\"CHMB1_RIGHT"
%COMMENT Line0002 = "\"] = Enums.SEQUENCE_STATE.ERROR"

[DEF, SF.Seq[15].Main[0]]
%NAME = "Change the both Socket States to ERROR"

[SF.Seq[15].Main[1].TS]
Id = "ID#:ECWpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[15].Main[1].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[15].Main[1].TS.SData.ViCall]
ProjectPath = "..\\..\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Station\\Get Error Message.vi"
TDChecksum = -1043381443
%HI: Parms = [4]

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"

[SF.Seq[15].Main[1].TS.SData.ViCall.Parms[0]]
Label = "Error Code"
ArgVal = "Parameters.Actuator_ErrorCode"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
ConnectorNumber = 11

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[0]]
%NAME = "Error Code"

[SF.Seq[15].Main[1].TS.SData.ViCall.Parms[1]]
Label = "Actuator Type"
ArgVal = "Parameters.Actuator_Name == \"NOK_UNLOADING_GRIPPER\" ? \"AnaGripper\" : \"Valves\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator Type"

[SF.Seq[15].Main[1].TS.SData.ViCall.Parms[2]]
Label = "Error In"
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[15].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[15].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[15].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[2]]
%NAME = "Error In"

[SF.Seq[15].Main[1].TS.SData.ViCall.Parms[3]]
Label = "Error Message"
ArgVal = "Parameters.Actuator_ErrorText"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[3]]
%NAME = "Error Message"

[SF.Seq[15].Main[1].TS.SData.ViCall.Parms[4]]
Label = "Error Out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[15].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[15].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[15].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[15].Main[1].TS.SData.ViCall.Parms[4]]
%NAME = "Error Out"

[DEF, SF.Seq[15].Main[1]]
%NAME = "Get Error Text //TODO"

[SF.Seq[15].Main[2].TS]
Id = "ID#:EiWpbOD17xG519Qli0T1uC"
PostExpr Line0001 = "StationGlobals.SequenceErrorDescriptions[0] = \"ERROR(\"+Str(Parameters.Actuator_ErrorCode)+\"): \" + ResStr(\"SPECIAL_U"
PostExpr Line0002 = "I_MESSAGES\", \"ERROR_FAIL\") + \" \" + Parameters.Actuator_Name + \" ; \" + Parameters.Actuator_ErrorText,\nStationGlob"
PostExpr Line0003 = "als.SequenceErrorDescriptions[1] = \"ERROR(\"+Str(Parameters.Actuator_ErrorCode)+\"): \" + ResStr(\"SPECIAL_UI_MESSAGES\"
PostExpr Line0004 = "", \"ERROR_FAIL\") + \" \" + Parameters.Actuator_Name + \" ; \" + Parameters.Actuator_ErrorText"

[DEF, SF.Seq[15].Main[2]]
%NAME = "Configre for both Sockets Error Description"

[SF.Seq[15].Main[3].TS]
Id = "ID#:EyWpbOD17xG519Qli0T1uC"
Mode = "Skip"

[DEF, SF.Seq[15].Main[3].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[15].Main[3].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowPopupMessageDialog"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[15].Main[3].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[15].Main[3].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Title = "TYPE, SequenceArgument"
CenterPosition = "TYPE, SequenceArgument"
XPosition = "TYPE, SequenceArgument"
YPosition = "TYPE, SequenceArgument"
IsModal = "TYPE, SequenceArgument"
ShowOkButton = "TYPE, SequenceArgument"
ShowCancelButton = "TYPE, SequenceArgument"
DialogTimeout = "TYPE, SequenceArgument"
OkButtonPressed = "TYPE, SequenceArgument"
CancelButtonPressed = "TYPE, SequenceArgument"

[SF.Seq[15].Main[3].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "StationGlobals.SequenceErrorDescriptions[RunState.TestSockets.MyIndex]"
ParamType = 2
Flags = 0

[SF.Seq[15].Main[3].TS.SData.ActualArgs.Title]
UseDef = False
Expr = "\"CHMB1\""
ParamType = 2
Flags = 0

[SF.Seq[15].Main[3].TS.SData.ActualArgs.CenterPosition]
ParamType = 16
Flags = 0

[SF.Seq[15].Main[3].TS.SData.ActualArgs.XPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[15].Main[3].TS.SData.ActualArgs.YPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[15].Main[3].TS.SData.ActualArgs.IsModal]
ParamType = 16
Flags = 0

[SF.Seq[15].Main[3].TS.SData.ActualArgs.ShowOkButton]
ParamType = 16
Flags = 0

[SF.Seq[15].Main[3].TS.SData.ActualArgs.ShowCancelButton]
ParamType = 16
Flags = 0

[SF.Seq[15].Main[3].TS.SData.ActualArgs.DialogTimeout]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[15].Main[3].TS.SData.ActualArgs.OkButtonPressed]
ParamType = 16

[SF.Seq[15].Main[3].TS.SData.ActualArgs.CancelButtonPressed]
ParamType = 16

[DEF, SF.Seq[15].Main[3].TS.SData.Prototype]
Message = Str
Title = Str
CenterPosition = Bool
XPosition = Num
YPosition = Num
IsModal = Bool
ShowOkButton = Bool
ShowCancelButton = Bool
DialogTimeout = Num
OkButtonPressed = Bool
CancelButtonPressed = Bool

[SF.Seq[15].Main[3].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[15].Main[3].TS.SData.Prototype.Title]
%COMMENT = "Dialog title. (Default: Empty)"

[SF.Seq[15].Main[3].TS.SData.Prototype]
CenterPosition = True
ShowOkButton = True
%FLG: OkButtonPressed = 4
%FLG: CancelButtonPressed = 4

[SF.Seq[15].Main[3].TS.SData.Prototype.CenterPosition]
%COMMENT = "If True, the dialog is positioned in the center of the screen. (Default: True)"

[SF.Seq[15].Main[3].TS.SData.Prototype.XPosition]
%COMMENT = "Position of the dialog, X coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[15].Main[3].TS.SData.Prototype.YPosition]
%COMMENT = "Position of the dialog, Y coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[15].Main[3].TS.SData.Prototype.IsModal]
%COMMENT = "If True, the dialog is modal to UTP TEF or Sequence Editor. (Default: False)"

[SF.Seq[15].Main[3].TS.SData.Prototype.ShowOkButton]
%COMMENT = "Show OK button in the dialog. (Default: True)"

[SF.Seq[15].Main[3].TS.SData.Prototype.ShowCancelButton]
%COMMENT = "Show Cancel button in the dialog. (Default: False)"

[SF.Seq[15].Main[3].TS.SData.Prototype.DialogTimeout]
%COMMENT Line0001 = "Optional. Dialog timeout in seconds. If 0, the timeout is not used and the dialog is shown until operator press a button"
%COMMENT Line0002 = ". (Default: 0)"

[SF.Seq[15].Main[3].TS.SData.Prototype.OkButtonPressed]
%COMMENT = "Returns True, if OK button was pressed."

[SF.Seq[15].Main[3].TS.SData.Prototype.CancelButtonPressed]
%COMMENT = "Returns True, if Cancel button was pressed."

[DEF, SF.Seq[15].Main[3]]
%NAME = "Inform operator about ERROR"

[SF.Seq[15].Main[4].TS]
Id = "ID#:FCWpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[15].Main[4].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[15].Main[4].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[15].Main[4].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[15].Main[4].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[15].Main[4].TS.SData.ActualArgs.TestSocket]
UseDef = False
Expr = "0"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[15].Main[4].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "StationGlobals.SequenceErrorDescriptions[0]"
ParamType = 2
Flags = 0

[SF.Seq[15].Main[4].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[15].Main[4].TS.SData.ActualArgs.FontSize]
Expr = "40"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[15].Main[4].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[15].Main[4].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[15].Main[4].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[15].Main[4].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[15].Main[4].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[15].Main[4].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[15].Main[4]]
%NAME = "Leave message on Test Socket 0 about ERROR"

[SF.Seq[15].Main[5].TS]
Id = "ID#:H4BlXTr47xG52NQli0T1uC"

[DEF, SF.Seq[15].Main[5].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[15].Main[5].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[15].Main[5].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[15].Main[5].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[15].Main[5].TS.SData.ActualArgs.TestSocket]
UseDef = False
Expr = "1"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[15].Main[5].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "StationGlobals.SequenceErrorDescriptions[1]"
ParamType = 2
Flags = 0

[SF.Seq[15].Main[5].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[15].Main[5].TS.SData.ActualArgs.FontSize]
Expr = "40"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[15].Main[5].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[15].Main[5].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[15].Main[5].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[15].Main[5].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[15].Main[5].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[15].Main[5].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[15].Main[5]]
%NAME = "Leave message on Test Socket 1 about ERROR"

[SF.Seq[15].Main[6].TS]
Id = "ID#:FSWpbOD17xG519Qli0T1uC"

[DEF, SF.Seq[15].Main[6].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[15].Main[6].TS.SData.ViCall]
ProjectPath = "..\\..\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Station\\Add alarm to archive.vi"
TDChecksum = 607386436
%HI: Parms = [2]

[DEF, SF.Seq[15].Main[6].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"

[SF.Seq[15].Main[6].TS.SData.ViCall.Parms[0]]
Label = "Alarm messege"
ArgVal = "StationGlobals.SequenceErrorDescriptions[RunState.TestSockets.MyIndex]"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 11

[DEF, SF.Seq[15].Main[6].TS.SData.ViCall.Parms[0]]
%NAME = "Alarm messege"

[SF.Seq[15].Main[6].TS.SData.ViCall.Parms[1]]
Label = "error in"
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[15].Main[6].TS.SData.ViCall.Parms[1].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[15].Main[6].TS.SData.ViCall.Parms[1].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[15].Main[6].TS.SData.ViCall.Parms[1].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[15].Main[6].TS.SData.ViCall.Parms[1].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[15].Main[6].TS.SData.ViCall.Parms[1].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[15].Main[6].TS.SData.ViCall.Parms[1].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[15].Main[6].TS.SData.ViCall.Parms[1].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[15].Main[6].TS.SData.ViCall.Parms[1]]
%NAME = "error in"

[SF.Seq[15].Main[6].TS.SData.ViCall.Parms[2]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[15].Main[6].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[15].Main[6].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[15].Main[6].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[15].Main[6].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[15].Main[6].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[15].Main[6].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[15].Main[6].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[15].Main[6].TS.SData.ViCall.Parms[2]]
%NAME = "error out"

[DEF, SF.Seq[15].Main[6]]
%NAME = "Add alarm to archive //TODO"

[SF.Seq[15].Main[7].TS]
Id = "ID#:GIQB9jqV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[15].Main]
%FLG: %[7] = 67108864

[SF.Seq[15].Main[8].TS]
Id = "ID#:PURH4TqV8BGJ68yCf5KpWB"

[DEF, SF.Seq[15].Main[8]]
%NAME = "Set that CHMB is in error"

[SF.Seq[15].Main[9].TS]
Id = "ID#:qg8bITqV8BGJ68yCf5KpWB"

[DEF, SF.Seq[15].Main[9].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[15].Main[9].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[15].Main[9].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[15].Main[9].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[15].Main[9].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[15].Main[9].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_CHMB1_Error\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[15].Main[9].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[15].Main[9]]
%NAME = "Write that CHMB is in error"

[DEF, SF.Seq[15].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[15].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[15].Requirements]
Links = Strs

[SF.Seq[15].Requirements]
%FLG: Links = 71303168

[DEF, SF.Seq[16]]
Parameters = Obj
Locals = Obj
Main = Objs
Setup = Objs
Cleanup = Objs
RecordResults = Bool
RTS = Obj
Requirements = Obj
FailureAction = Num
%NAME = "Check if Actuator is in Error ONE TS"

[DEF, SF.Seq[16].Parameters]
Actuator_Name = Str
Actuator_Error = Bool
Actuator_ErrorCode = Num
Actuator_ErrorText = Str

[SF.Seq[16].Parameters]
%FLG: Actuator_Name = 4
%FLG: Actuator_Error = 4
Actuator_ErrorCode = 100
%FLG: Actuator_ErrorCode = 4
%FLG: Actuator_ErrorText = 4

[SF.Seq[16]]
%FLG: Parameters = 4456448
%FLG: Locals = 4194304
%HI: Main = [8]
%FLG: Main = 4194304
%HI: Setup = [0]
%FLG: Setup = 4194304
%FLG: Cleanup = 4194304
RecordResults = True
%FLG: RecordResults = 4194312
%FLG: RTS = 4456456
%FLG: Requirements = 4456456
FailureAction = 2
%FLG: FailureAction = 4194312

[DEF, SF.Seq[16].Locals]
ResultList = Objs
TestSocketName = Str

[DEF, SF.Seq[16].Locals.ResultList]
%EPTYPE = TEResult

[SF.Seq[16].Locals]
%FLG: ResultList = 4194304

[DEF, SF.Seq[16].Main]
%[0] = Step
%TYPE: %[0] = "Statement"
%[1] = Step
%TYPE: %[1] = "Action"
%[2] = Step
%TYPE: %[2] = "Statement"
%[3] = Step
%TYPE: %[3] = "NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog"
%[4] = Step
%TYPE: %[4] = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
%[5] = Step
%TYPE: %[5] = "Action"
%[6] = Step
%TYPE: %[6] = "Label"
%[7] = Step
%TYPE: %[7] = "Label"
%[8] = Step
%TYPE: %[8] = "NoffzUTP_IOPLCVariableBooleanWrite"

[SF.Seq[16].Main[0].TS]
Id = "ID#:Cn1fJOX47xG52tQli0T1uC"
PostExpr = "StationGlobals.SequenceStates[RunState.TestSockets.MyIndex] = Enums.SEQUENCE_STATE.ERROR"

[DEF, SF.Seq[16].Main[0]]
%NAME = "Change the both Socket States to ERROR"

[SF.Seq[16].Main[1].TS]
Id = "ID#:C31fJOX47xG52tQli0T1uC"

[DEF, SF.Seq[16].Main[1].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[16].Main[1].TS.SData.ViCall]
ProjectPath = "..\\..\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Station\\Get Error Message.vi"
TDChecksum = -1043381443
%HI: Parms = [4]

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"
%[3] = "TYPE, VIParameter"
%[4] = "TYPE, VIParameter"

[SF.Seq[16].Main[1].TS.SData.ViCall.Parms[0]]
Label = "Error Code"
ArgVal = "Parameters.Actuator_ErrorCode"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
ConnectorNumber = 11

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[0]]
%NAME = "Error Code"

[SF.Seq[16].Main[1].TS.SData.ViCall.Parms[1]]
Label = "Actuator Type"
ArgVal = "Parameters.Actuator_Name == \"NOK_UNLOADING_GRIPPER\" ? \"AnaGripper\" : \"Valves\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 10

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[1]]
%NAME = "Actuator Type"

[SF.Seq[16].Main[1].TS.SData.ViCall.Parms[2]]
Label = "Error In"
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[16].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[16].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[16].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[2]]
%NAME = "Error In"

[SF.Seq[16].Main[1].TS.SData.ViCall.Parms[3]]
Label = "Error Message"
ArgVal = "Parameters.Actuator_ErrorText"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
Direction = 1
ConnectorNumber = 3

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[3]]
%NAME = "Error Message"

[SF.Seq[16].Main[1].TS.SData.ViCall.Parms[4]]
Label = "Error Out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[16].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[16].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[16].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[4].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[16].Main[1].TS.SData.ViCall.Parms[4]]
%NAME = "Error Out"

[DEF, SF.Seq[16].Main[1]]
%NAME = "Get Error Text //TODO"

[SF.Seq[16].Main[2].TS]
Id = "ID#:DH1fJOX47xG52tQli0T1uC"
PostExpr Line0001 = "StationGlobals.SequenceErrorDescriptions[RunState.TestSockets.MyIndex] = \"ERROR(\"+Str(Parameters.Actuator_ErrorCode)+\"
PostExpr Line0002 = ""): \" + ResStr(\"SPECIAL_UI_MESSAGES\", \"ERROR_FAIL\") + \" \" + Parameters.Actuator_Name + \" ; \" + Parameters.Actua"
PostExpr Line0003 = "tor_ErrorText"

[DEF, SF.Seq[16].Main[2]]
%NAME = "Configre for both Sockets Error Description"

[SF.Seq[16].Main[3].TS]
Id = "ID#:DX1fJOX47xG52tQli0T1uC"
Mode = "Skip"

[DEF, SF.Seq[16].Main[3].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[16].Main[3].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowPopupMessageDialog"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[16].Main[3].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[16].Main[3].TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Title = "TYPE, SequenceArgument"
CenterPosition = "TYPE, SequenceArgument"
XPosition = "TYPE, SequenceArgument"
YPosition = "TYPE, SequenceArgument"
IsModal = "TYPE, SequenceArgument"
ShowOkButton = "TYPE, SequenceArgument"
ShowCancelButton = "TYPE, SequenceArgument"
DialogTimeout = "TYPE, SequenceArgument"
OkButtonPressed = "TYPE, SequenceArgument"
CancelButtonPressed = "TYPE, SequenceArgument"

[SF.Seq[16].Main[3].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "StationGlobals.SequenceErrorDescriptions[RunState.TestSockets.MyIndex]"
ParamType = 2
Flags = 0

[SF.Seq[16].Main[3].TS.SData.ActualArgs.Title]
UseDef = False
Expr = "Locals.TestSocketName"
ParamType = 2
Flags = 0

[SF.Seq[16].Main[3].TS.SData.ActualArgs.CenterPosition]
ParamType = 16
Flags = 0

[SF.Seq[16].Main[3].TS.SData.ActualArgs.XPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[16].Main[3].TS.SData.ActualArgs.YPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[16].Main[3].TS.SData.ActualArgs.IsModal]
ParamType = 16
Flags = 0

[SF.Seq[16].Main[3].TS.SData.ActualArgs.ShowOkButton]
ParamType = 16
Flags = 0

[SF.Seq[16].Main[3].TS.SData.ActualArgs.ShowCancelButton]
ParamType = 16
Flags = 0

[SF.Seq[16].Main[3].TS.SData.ActualArgs.DialogTimeout]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[16].Main[3].TS.SData.ActualArgs.OkButtonPressed]
ParamType = 16

[SF.Seq[16].Main[3].TS.SData.ActualArgs.CancelButtonPressed]
ParamType = 16

[DEF, SF.Seq[16].Main[3].TS.SData.Prototype]
Message = Str
Title = Str
CenterPosition = Bool
XPosition = Num
YPosition = Num
IsModal = Bool
ShowOkButton = Bool
ShowCancelButton = Bool
DialogTimeout = Num
OkButtonPressed = Bool
CancelButtonPressed = Bool

[SF.Seq[16].Main[3].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[16].Main[3].TS.SData.Prototype.Title]
%COMMENT = "Dialog title. (Default: Empty)"

[SF.Seq[16].Main[3].TS.SData.Prototype]
CenterPosition = True
ShowOkButton = True
%FLG: OkButtonPressed = 4
%FLG: CancelButtonPressed = 4

[SF.Seq[16].Main[3].TS.SData.Prototype.CenterPosition]
%COMMENT = "If True, the dialog is positioned in the center of the screen. (Default: True)"

[SF.Seq[16].Main[3].TS.SData.Prototype.XPosition]
%COMMENT = "Position of the dialog, X coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[16].Main[3].TS.SData.Prototype.YPosition]
%COMMENT = "Position of the dialog, Y coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[SF.Seq[16].Main[3].TS.SData.Prototype.IsModal]
%COMMENT = "If True, the dialog is modal to UTP TEF or Sequence Editor. (Default: False)"

[SF.Seq[16].Main[3].TS.SData.Prototype.ShowOkButton]
%COMMENT = "Show OK button in the dialog. (Default: True)"

[SF.Seq[16].Main[3].TS.SData.Prototype.ShowCancelButton]
%COMMENT = "Show Cancel button in the dialog. (Default: False)"

[SF.Seq[16].Main[3].TS.SData.Prototype.DialogTimeout]
%COMMENT Line0001 = "Optional. Dialog timeout in seconds. If 0, the timeout is not used and the dialog is shown until operator press a button"
%COMMENT Line0002 = ". (Default: 0)"

[SF.Seq[16].Main[3].TS.SData.Prototype.OkButtonPressed]
%COMMENT = "Returns True, if OK button was pressed."

[SF.Seq[16].Main[3].TS.SData.Prototype.CancelButtonPressed]
%COMMENT = "Returns True, if Cancel button was pressed."

[DEF, SF.Seq[16].Main[3]]
%NAME = "Inform operator about ERROR"

[SF.Seq[16].Main[4].TS]
Id = "ID#:Dn1fJOX47xG52tQli0T1uC"

[DEF, SF.Seq[16].Main[4].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[16].Main[4].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[16].Main[4].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[16].Main[4].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[SF.Seq[16].Main[4].TS.SData.ActualArgs.TestSocket]
Expr = "0"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[16].Main[4].TS.SData.ActualArgs.Message]
UseDef = False
Expr = "StationGlobals.SequenceErrorDescriptions[RunState.TestSockets.MyIndex]"
ParamType = 2
Flags = 0

[SF.Seq[16].Main[4].TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[16].Main[4].TS.SData.ActualArgs.FontSize]
UseDef = False
Expr = "40"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, SF.Seq[16].Main[4].TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[SF.Seq[16].Main[4].TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[SF.Seq[16].Main[4].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[SF.Seq[16].Main[4].TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[SF.Seq[16].Main[4].TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[SF.Seq[16].Main[4].TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, SF.Seq[16].Main[4]]
%NAME = "Leave message on Test Socket about ERROR"

[SF.Seq[16].Main[5].TS]
Id = "ID#:EH1fJOX47xG52tQli0T1uC"

[DEF, SF.Seq[16].Main[5].TS]
SData = "TYPE, FlexGStepAdditions"

[SF.Seq[16].Main[5].TS.SData.ViCall]
ProjectPath = "..\\..\\LabView\\nexteer.lvproj"
VIPath = "My Computer\\Station\\Add alarm to archive.vi"
TDChecksum = 607386436
%HI: Parms = [2]

[DEF, SF.Seq[16].Main[5].TS.SData.ViCall.Parms]
%[0] = "TYPE, VIParameter"
%[1] = "TYPE, VIParameter"
%[2] = "TYPE, VIParameter"

[SF.Seq[16].Main[5].TS.SData.ViCall.Parms[0]]
Label = "Alarm messege"
ArgVal = "StationGlobals.SequenceErrorDescriptions[RunState.TestSockets.MyIndex]"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
ConnectorNumber = 11

[DEF, SF.Seq[16].Main[5].TS.SData.ViCall.Parms[0]]
%NAME = "Alarm messege"

[SF.Seq[16].Main[5].TS.SData.ViCall.Parms[1]]
Label = "error in"
Type = 3
WireRequirement = 1
DisplayType = "Container"
UseDefaultValues = True
%HI: ArrayClusterEls = [2]
ConnectorNumber = 8

[DEF, SF.Seq[16].Main[5].TS.SData.ViCall.Parms[1].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[16].Main[5].TS.SData.ViCall.Parms[1].ArrayClusterEls[0]]
Label = "status"
ArgVal = "False"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"
UseDefaultValues = True

[DEF, SF.Seq[16].Main[5].TS.SData.ViCall.Parms[1].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[16].Main[5].TS.SData.ViCall.Parms[1].ArrayClusterEls[1]]
Label = "code"
ArgVal = "0"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"
UseDefaultValues = True

[DEF, SF.Seq[16].Main[5].TS.SData.ViCall.Parms[1].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[16].Main[5].TS.SData.ViCall.Parms[1].ArrayClusterEls[2]]
Label = "source"
ArgVal = "\"\""
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"
UseDefaultValues = True

[DEF, SF.Seq[16].Main[5].TS.SData.ViCall.Parms[1].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[16].Main[5].TS.SData.ViCall.Parms[1]]
%NAME = "error in"

[SF.Seq[16].Main[5].TS.SData.ViCall.Parms[2]]
Label = "error out"
ArgVal = "Step.Result.Error"
Type = 3
WireRequirement = 1
DisplayType = "Container"
%HI: ArrayClusterEls = [2]
Direction = 1
ConnectorNumber = 0
LegacyClusterType = 2

[DEF, SF.Seq[16].Main[5].TS.SData.ViCall.Parms[2].ArrayClusterEls]
%[0] = "TYPE, VIParameterElement"
%[1] = "TYPE, VIParameterElement"
%[2] = "TYPE, VIParameterElement"

[SF.Seq[16].Main[5].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
Label = "status"
ArgVal = "Step.Result.Error.Occurred"
Type = 2
WireRequirement = 1
DisplayType = "Boolean"

[DEF, SF.Seq[16].Main[5].TS.SData.ViCall.Parms[2].ArrayClusterEls[0]]
%NAME = "status"

[SF.Seq[16].Main[5].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
Label = "code"
ArgVal = "Step.Result.Error.Code"
Type = 0
WireRequirement = 1
NumType = 4
DisplayType = "Number (I32)"

[DEF, SF.Seq[16].Main[5].TS.SData.ViCall.Parms[2].ArrayClusterEls[1]]
%NAME = "code"

[SF.Seq[16].Main[5].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
Label = "source"
ArgVal = "Step.Result.Error.Msg"
Type = 1
WireRequirement = 1
DisplayType = "ASCII String"

[DEF, SF.Seq[16].Main[5].TS.SData.ViCall.Parms[2].ArrayClusterEls[2]]
%NAME = "source"

[DEF, SF.Seq[16].Main[5].TS.SData.ViCall.Parms[2]]
%NAME = "error out"

[DEF, SF.Seq[16].Main[5]]
%NAME = "Add alarm to archive //TODO"

[SF.Seq[16].Main[6].TS]
Id = "ID#:/d05/TqV8BGJ68yCf5KpWB"
Icon = "ni_blank.ico"
StatusExpr = "\"\""
%FLG: StatusExpr = 1

[SF.Seq[16].Main]
%FLG: %[6] = 67108864

[SF.Seq[16].Main[7].TS]
Id = "ID#:+N05/TqV8BGJ68yCf5KpWB"

[DEF, SF.Seq[16].Main[7]]
%NAME = "Set that CHMB is in error"

[SF.Seq[16].Main[8].TS]
Id = "ID#:+d05/TqV8BGJ68yCf5KpWB"

[DEF, SF.Seq[16].Main[8].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[16].Main[8].TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, SF.Seq[16].Main[8].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[16].Main[8].TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[SF.Seq[16].Main[8].TS.SData.ActualArgs.VariableValue]
UseDef = False
Expr = "True"
ParamType = 16
Flags = 0

[SF.Seq[16].Main[8].TS.SData.ActualArgs.VariableName]
UseDef = False
Expr = "\"IOs_DQ_SIGNALS_TO_MASTER_PLC_CHMB1_Error\""
ParamType = 2
Flags = 0

[DEF, SF.Seq[16].Main[8].TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, SF.Seq[16].Main[8]]
%NAME = "Write that CHMB is in error"

[DEF, SF.Seq[16].Setup]
%[0] = Step
%TYPE: %[0] = "NoffzUTP_TEF_Model_TestSocket_GetTestSocketName"

[SF.Seq[16].Setup[0].TS]
Id = "ID#:Q7B3WOX47xG52tQli0T1uC"

[DEF, SF.Seq[16].Setup[0].TS]
SData = "TYPE, SeqCallStepAdditions"

[SF.Seq[16].Setup[0].TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetTestSocketName"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, SF.Seq[16].Setup[0].TS.SData]
ActualArgs = Arguments
Prototype = Obj

[DEF, SF.Seq[16].Setup[0].TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
TestSocketName = "TYPE, SequenceArgument"

[SF.Seq[16].Setup[0].TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[SF.Seq[16].Setup[0].TS.SData.ActualArgs.TestSocketName]
UseDef = False
Expr = "Locals.TestSocketName"
ParamType = 2

[DEF, SF.Seq[16].Setup[0].TS.SData.Prototype]
TestSocket = Num
TestSocketName = Str

[SF.Seq[16].Setup[0].TS.SData.Prototype]
TestSocket = Nan
%FLG: TestSocketName = 4

[SF.Seq[16].Setup[0].TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number."

[SF.Seq[16].Setup[0].TS.SData.Prototype.TestSocketName]
%COMMENT = "Test Socket name."

[DEF, SF.Seq[16].Setup[0]]
%NAME = "Model.TestSocket.GetTestSocketName"

[DEF, SF.Seq[16].RTS]
Type = Num
OptimizeNonReentrantCalls = Bool
EPNameExpr = Str
EPEnabledExpr = Str
EPMenuHint = Str
EPIgnoreClient = Bool
EPInitiallyHidden = Bool
EPCheckToSaveTitledFile = Bool
ShowEPAlways = Bool
ShowEPForFileWin = Bool
ShowEPForExeWin = Bool
ShowEPForEditorOnly = Bool
AllowIntExeOfEP = Bool
CopyStepsOnOverriding = Bool
Priority = Num

[SF.Seq[16].RTS]
%FLG: Type = 4194304
OptimizeNonReentrantCalls = True
%FLG: OptimizeNonReentrantCalls = 4194304
EPNameExpr = "\"Unnamed Entry Point\""
%FLG: EPNameExpr = 4194304
EPEnabledExpr = "True"
%FLG: EPEnabledExpr = 4194304
%FLG: EPMenuHint = 4194304
%FLG: EPIgnoreClient = 4194304
%FLG: EPInitiallyHidden = 4194304
EPCheckToSaveTitledFile = True
%FLG: EPCheckToSaveTitledFile = 4194304
%FLG: ShowEPAlways = 4194304
ShowEPForFileWin = True
%FLG: ShowEPForFileWin = 4194304
%FLG: ShowEPForExeWin = 4194304
%FLG: ShowEPForEditorOnly = 4194304
%FLG: AllowIntExeOfEP = 4194304
CopyStepsOnOverriding = True
%FLG: CopyStepsOnOverriding = 4194304
Priority = 2953567917
%FLG: Priority = 4194304

[DEF, SF.Seq[16].Requirements]
Links = Strs

[SF.Seq[16].Requirements]
%FLG: Links = 71303168

[DEF, SF.FileGlobalDefaults]
VariantEditor = Obj
OperationMode = Str
StateMachineLoop = Bool
Start = Obj
SequenceFinished = Bool
NumberOfDUTs = Num
MainSequenceSkipped = Bool

[DEF, SF.FileGlobalDefaults.Start]
ST1 = Bool

[DEF, SF.Requirements]
Links = Strs

[SF.Requirements]
%FLG: Links = 71303168

[%TYPES]
Path = "Path"
StepTypeSubstepsArray = "StepTypeSubstepsArray"
Expression = "Expression"
StepTypeMenu = "StepTypeMenu"
NI_ArrayDimensions = "NI_ArrayDimensions"
NI_PropertyObjectType = "NI_PropertyObjectType"
NI_CustomResult = "NI_CustomResult"
TEInf = "TEInf"
SeqCallStepAdditions = "SeqCallStepAdditions"
StepTypeNIData = "StepTypeNIData"
Error = "Error"
CommonResults = "CommonResults"
NI_SequenceParameterResult = "NI_SequenceParameterResult"
SequenceArgument = "SequenceArgument"
NoffzUTP_TEF_UI_TestSocket_SetCaption = "NoffzUTP_TEF_UI_TestSocket_SetCaption"
NoffzUTP_TEF_UI_TestSocket_SetIcon = "NoffzUTP_TEF_UI_TestSocket_SetIcon"
NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue = "NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue"
NoffzUTP_TEF_UI_TestSocket_ShowMessage = "NoffzUTP_TEF_UI_TestSocket_ShowMessage"
NoffzUTP_TEF_UI_Station_Statistic_Update = "NoffzUTP_TEF_UI_Station_Statistic_Update"
NoffzUTP_VariantManager_ApplyVariantData = "NoffzUTP_VariantManager_ApplyVariantData"
EditSubstep = "EditSubstep"
NI_CommonCParameterResult = "NI_CommonCParameterResult"
FCParameter = "FCParameter"
FlexCStepAdditions = "FlexCStepAdditions"
NoneStepAdditions = "NoneStepAdditions"
Label = "Label"
NoffzUTP_TEF_Model_TestSocket_GetTestSocketName = "NoffzUTP_TEF_Model_TestSocket_GetTestSocketName"
NoffzUTP_TEF_Model_TestSocket_SetSerialNumber = "NoffzUTP_TEF_Model_TestSocket_SetSerialNumber"
Statement = "Statement"
NoffzUTP_TEF_UI_TestSocket_Statistic_Update = "NoffzUTP_TEF_UI_TestSocket_Statistic_Update"
SequenceCall = "SequenceCall"
NoffzUTP_TEF_Model_Station_GetOperationMode = "NoffzUTP_TEF_Model_Station_GetOperationMode"
Substep = "Substep"
NI_Flow_If = "NI_Flow_If"
NI_Flow_End = "NI_Flow_End"
Action = "Action"
NI_LabVIEWParameterResult = "NI_LabVIEWParameterResult"
VIParameter = "VIParameter"
NI_NodeProperty = "NI_NodeProperty"
FlexGStepAdditions = "FlexGStepAdditions"
VIParameterElement = "VIParameterElement"
NI_Flow_While = "NI_Flow_While"
NI_Flow_ElseIf = "NI_Flow_ElseIf"
PostSubstep = "PostSubstep"
NI_Wait = "NI_Wait"
NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant = "NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant"
NI_Flow_Else = "NI_Flow_Else"
NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog = "NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog"
NoffzUTP_IOPLCVariableBooleanRead = "NoffzUTP_IOPLCVariableBooleanRead"
Goto = "Goto"
NoffzUTP_TEF_Model_TestSocket_SkipProductSequence = "NoffzUTP_TEF_Model_TestSocket_SkipProductSequence"
NoffzUTP_IO_Code = "NoffzUTP_IO_Code"
NI_Lock = "NI_Lock"
NI_Rendezvous = "NI_Rendezvous"
NI_Flow_Select = "NI_Flow_Select"
NI_Flow_Case = "NI_Flow_Case"
NI_Flow_ForEach = "NI_Flow_ForEach"
NI_Flow_For = "NI_Flow_For"
NoffzUTP_TEF_Model_TestSocket_GetSerialNumber = "NoffzUTP_TEF_Model_TestSocket_GetSerialNumber"
NoffzUTP_TEF_UI_TestSocket_StepList_Clear = "NoffzUTP_TEF_UI_TestSocket_StepList_Clear"
NoffzUTP_TEF_UI_Station_ShowMessage = "NoffzUTP_TEF_UI_Station_ShowMessage"
NoffzUTP_IOPLCVariableStringRead = "NoffzUTP_IOPLCVariableStringRead"
AquireTesting = "AquireTesting"
NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant = "NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant"
CAN_Response = "CAN_Response"
NoffzUTP_IOPLCVariableI16Read = "NoffzUTP_IOPLCVariableI16Read"
NoffzUTP_IOSwitchSPSTSet = "NoffzUTP_IOSwitchSPSTSet"
NoffzUTP_IOPLCVariableBooleanWrite = "NoffzUTP_IOPLCVariableBooleanWrite"

[DEF, Path]
%LOCATION = "StdTypes"
%ROOT_TYPE = True

[Path]
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554436

[DEF, StepTypeSubstepsArray]
%LOCATION = "StdTypes"
%ROOT_TYPE = True

[StepTypeSubstepsArray]
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436
%INSTFLG = 4718616
%INSTOVRD = 4849688

[DEF, Expression]
%LOCATION = "StdTypes"
%ROOT_TYPE = True

[Expression]
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554436

[DEF, StepTypeMenu]
%LOCATION = "StdTypes"
CanBeSubstepType = Bool
CanOnlyBeSubstepType = Bool
Category = Str
ItemName = "TYPE, Expression"
SingularItemName = Str
SeparatorBeforeCategory = Bool
SeparatorBeforeItemName = Bool
Group = Str
%ROOT_TYPE = True

[StepTypeMenu]
Category = "\"\""
ItemName = "\"\""
SingularItemName = "\"\""
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436
%INSTFLG = 4718616
%INSTOVRD = 4718616

[DEF, NI_ArrayDimensions]
%LOCATION = "StdTypes"
LowerBounds = Nums
UpperBounds = Nums
%ROOT_TYPE = True

[NI_ArrayDimensions]
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[DEF, NI_PropertyObjectType]
%LOCATION = "StdTypes"
ValueType = Num
IsObject = Bool
TypeName = Str
ElementType = Objs
ArrayDimensions = "TYPE, NI_ArrayDimensions"
Representation = Num
ClassName = Str
%ROOT_TYPE = True

[NI_PropertyObjectType]
ValueType = 3
IsObject = True
Representation = 1
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[DEF, NI_CustomResult]
%LOCATION = "StdTypes"
Name = "TYPE, Expression"
ValueToLog = "TYPE, Expression"
Condition = "TYPE, Expression"
Flags = Num
CheckedState = Num
Type = "TYPE, NI_PropertyObjectType"
Elements = Objs
IsAnyType = Bool
%ROOT_TYPE = True

[NI_CustomResult]
Flags = 8192
CheckedState = 2
IsAnyType = True
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[NI_CustomResult.Flags]
%NUMFMT = "%#x"

[DEF, TEInf]
%LOCATION = "StdTypes"
Id = Str
Icon = Str
SData = Obj
%FLG: SData = 2097152
PreCond = "TYPE, Expression"
LoadOpt = Str
UnloadOpt = Str
Mode = Str
WindowActivation = Str
ResultOption = Num
StepFCSeqF = Bool
IgnoreRTE = Bool
UseMutex = Bool
MutexNameOrRef = "TYPE, Expression"
BatchSyncOpt = Num
SwitchEnabled = Bool
VirtualDeviceName = "TYPE, Expression"
SwitchOperation = Num
RouteGroupConnect = "TYPE, Expression"
RouteGroupDisconnect = "TYPE, Expression"
MulticonnectMode = Num
OperationOrder = Num
ConnectionLifetime = Num
WaitForDebounce = Bool
PassAct = Str
FailAct = Str
PassActTarget = "TYPE, Expression"
FailActTarget = "TYPE, Expression"
CustExpr = "TYPE, Expression"
CustTrueAct = Str
CustFalseAct = Str
CustTrueActTarget = "TYPE, Expression"
CustFalseActTarget = "TYPE, Expression"
LoopType = Str
LoopWhile = "TYPE, Expression"
LoopStatus = "TYPE, Expression"
LoopIncrement = "TYPE, Expression"
LoopInitialize = "TYPE, Expression"
LoopOpt = Num
PreExpr = "TYPE, Expression"
PostExpr = "TYPE, Expression"
StatusExpr = "TYPE, Expression"
CanSpecifyModule = Bool
CanEditCode = Bool
CanEditModulePrototype = Bool
CanEditParameterAdditionalResults = Bool
PrecondIntExe = Num
Requirements = Obj
%FLG: Requirements = 2097152
CustomResults = Objs
AdditionalResultsHints = Objs
%ROOT_TYPE = True

[TEInf]
%INSTFLG: Id = 1
%INSTOVRD: Id = 5046297
%INSTOVRD: Icon = 5046296
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7143448
%INSTOVRD: PreCond = 5046296
LoadOpt = "PreloadWhenExecuted"
%INSTOVRD: LoadOpt = 5046296
UnloadOpt = "UnloadWithFile"
%INSTOVRD: UnloadOpt = 5046296
Mode = "Normal"
%INSTOVRD: Mode = 5046296
WindowActivation = "None"
%INSTOVRD: WindowActivation = 5046296
ResultOption = 1
%INSTOVRD: ResultOption = 5046296
StepFCSeqF = True
%INSTOVRD: StepFCSeqF = 5046296
%INSTOVRD: IgnoreRTE = 5046296
%INSTOVRD: UseMutex = 5046296
%INSTOVRD: MutexNameOrRef = 5046296
%INSTOVRD: BatchSyncOpt = 5046296
%INSTOVRD: SwitchEnabled = 5046296
%INSTOVRD: VirtualDeviceName = 5046296
SwitchOperation = 1
%INSTOVRD: SwitchOperation = 5046296
%INSTOVRD: RouteGroupConnect = 5046296
%INSTOVRD: RouteGroupDisconnect = 5046296
MulticonnectMode = 1
%INSTOVRD: MulticonnectMode = 5046296
OperationOrder = 2
%INSTOVRD: OperationOrder = 5046296
ConnectionLifetime = 4
%INSTOVRD: ConnectionLifetime = 5046296
WaitForDebounce = True
%INSTOVRD: WaitForDebounce = 5046296
PassAct = "Next"
%INSTOVRD: PassAct = 5046296
FailAct = "Next"
%INSTOVRD: FailAct = 5046296
%INSTOVRD: PassActTarget = 5046296
%INSTOVRD: FailActTarget = 5046296
%INSTOVRD: CustExpr = 5046296
CustTrueAct = "Next"
%INSTOVRD: CustTrueAct = 5046296
CustFalseAct = "Next"
%INSTOVRD: CustFalseAct = 5046296
%INSTOVRD: CustTrueActTarget = 5046296
%INSTOVRD: CustFalseActTarget = 5046296
LoopType = "NoLooping"
%INSTOVRD: LoopType = 5046296
%INSTOVRD: LoopWhile = 5046296
%INSTOVRD: LoopStatus = 5046296
LoopIncrement = "RunState.LoopIndex += 1"
%INSTOVRD: LoopIncrement = 5046296
LoopInitialize = "RunState.LoopIndex = 0"
%INSTOVRD: LoopInitialize = 5046296
%INSTOVRD: LoopOpt = 5046296
%INSTOVRD: PreExpr = 5046296
%INSTOVRD: PostExpr = 5046296
%INSTOVRD: StatusExpr = 5046296
CanSpecifyModule = True
%INSTOVRD: CanSpecifyModule = 5046296
CanEditCode = True
%INSTOVRD: CanEditCode = 5046296
CanEditModulePrototype = True
%INSTOVRD: CanEditModulePrototype = 5046296
CanEditParameterAdditionalResults = True
%INSTOVRD: CanEditParameterAdditionalResults = 5046296
%INSTOVRD: PrecondIntExe = 5046296
%FLG: Requirements = 1
%INSTFLG: Requirements = 2097153
%INSTOVRD: Requirements = 7143449
%INSTOVRD: CustomResults = 5046296
%INSTOVRD: AdditionalResultsHints = 5046296
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436
%INSTFLG = 4456472
%INSTOVRD = 4456472

[DEF, TEInf.Requirements]
Links = Strs

[TEInf.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, TEInf.CustomResults]
%EPTYPE = "TYPE, NI_CustomResult"

[DEF, TEInf.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[DEF, SeqCallStepAdditions]
%LOCATION = "StdTypes"
SFPath = "TYPE, Path"
SFPathExpr = "TYPE, Expression"
SeqName = Str
SeqNameExpr = "TYPE, Expression"
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
UseCurFile = Bool
SpecifyByExpr = Bool
Prototype = Obj
%FLG: Prototype = 2097152
UsePrototype = Bool
SpecifyHostByExpr = Bool
RemoteExecution = Bool
RemoteHost = Str
RemoteHostExpr = "TYPE, Expression"
AutoWaitAsync = Bool
CreateThreadSuspended = Bool
AsyncThreadExpr = "TYPE, Expression"
AsyncApartmentThreaded = Bool
ThreadAffinityOption = Num
CustomThreadAffinity = "TYPE, Expression"
ThreadOpt = Num
ExecModelOpt = Num
ExecTypeMask = Num
ExecTypeMaskExpr = "TYPE, Expression"
ExecBreakOnEntryExpr = "TYPE, Expression"
ExecModelPath = "TYPE, Path"
ExecModelPathExpr = "TYPE, Expression"
ExecSync = Bool
Trace = Str
IgnoreTerminate = Bool
%ROOT_TYPE = True

[SeqCallStepAdditions]
%INSTFLG: ActualArgs = 2097152
%INSTFLG: Prototype = 2097152
AutoWaitAsync = True
CustomThreadAffinity = "RunState.Engine.Is64Bit? -1ui64 : -1"
ExecModelOpt = 1
ExecBreakOnEntryExpr = "False"
Trace = "Don't Change"
%TIMESTAMP = 1695834634
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[DEF, StepTypeNIData]
%LOCATION = "StdTypes"
EditPanels = Strs
%ROOT_TYPE = True

[StepTypeNIData]
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436
%INSTFLG = 4718616
%INSTOVRD = 4718616

[DEF, Error]
%LOCATION = "StdTypes"
Code = Num
Msg = Str
Occurred = Bool
%ROOT_TYPE = True

[Error]
%FLG: Code = 4194304
%INSTFLG: Code = 4194304
%FLG: Msg = 4194304
%INSTFLG: Msg = 4194304
%FLG: Occurred = 4194304
%INSTFLG: Occurred = 4194304
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554436
%EXTDATA = True

[Error.Code]
%EXTDATA = True

[EXTDATA, Error.Code, STRUCT]
DataVersion = 1
Type = 6

[EXTDATA, Error.Code, CLUST]
DataVersion = 1
ClusterMemberLabelName = "code"

[EXTDATA, Error.Code, DNSTRUCT]
DataVersion = 1
StructMemberName = "code"

[EXTDATA, Error.Code, BLVCLUSTER]
DataVersion = 1
ClusterMemberLabelName = "code"

[Error.Msg]
%EXTDATA = True

[EXTDATA, Error.Msg, STRUCT]
DataVersion = 1
Type = 2
StringBufferSize = 1024
StringStorage = 1

[EXTDATA, Error.Msg, CLUST]
DataVersion = 1
ClusterMemberLabelName = "source"

[EXTDATA, Error.Msg, DNSTRUCT]
DataVersion = 1
StructMemberName = "msg"

[EXTDATA, Error.Msg, BLVCLUSTER]
DataVersion = 1
ClusterMemberLabelName = "source"

[Error.Occurred]
%EXTDATA = True

[EXTDATA, Error.Occurred, STRUCT]
DataVersion = 1
Type = 6

[EXTDATA, Error.Occurred, CLUST]
DataVersion = 1
ClusterMemberLabelName = "status"

[EXTDATA, Error.Occurred, DNSTRUCT]
DataVersion = 1
StructMemberName = "occurred"

[EXTDATA, Error.Occurred, BLVCLUSTER]
DataVersion = 1
ClusterMemberLabelName = "status"

[EXTDATA, Error, STRUCT]
AllowStructPassing = True
DataVersion = 1
PackingOption = 8
Type = 0

[EXTDATA, Error, CLUST]
AllowClusterPassing = True
DataVersion = 1

[EXTDATA, Error, DNSTRUCT]
AllowStructPassing = True
DataVersion = 1
StructMemberName = ""

[EXTDATA, Error, BLVCLUSTER]
AllowClusterPassing = True
DataVersion = 1

[DEF, CommonResults]
%LOCATION = "StdTypes"
%ROOT_TYPE = True

[CommonResults]
%TIMESTAMP = 1465572565
%VERSION = "3.1.0.100"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "3.1.0.0"
%FLG = 4194304
%TYPE_FLG = 33554432
%INSTFLG = 4194304

[DEF, NI_SequenceParameterResult]
%LOCATION = "StdTypes"
Condition = "TYPE, Expression"
Flags = Num
CheckedState = Num
%ROOT_TYPE = True

[NI_SequenceParameterResult]
Flags = 8192
CheckedState = 1
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[NI_SequenceParameterResult.Flags]
%NUMFMT = "%#x"

[DEF, SequenceArgument]
%LOCATION = "StdTypes"
UseDef = Bool
Expr = "TYPE, Expression"
ParamType = Num
ParamRepresentation = Num
Flags = Num
AdditionalResults = Obj
UserData = Obj
%FLG: UserData = 2097152
%ROOT_TYPE = True

[SequenceArgument]
UseDef = True
Flags = 4
%INSTFLG: UserData = 2097152
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[SequenceArgument.Flags]
%NUMFMT = "%#x"

[DEF, SequenceArgument.AdditionalResults]
Input = "TYPE, NI_SequenceParameterResult"
Output = "TYPE, NI_SequenceParameterResult"

[DEF, NoffzUTP_TEF_UI_TestSocket_SetCaption]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_UI_TestSocket_SetCaption]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"UI.TestSocket.SetCaption\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127428
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_UI_TestSocket_SetCaption.Menu]
ItemName = "\"Set Test Socket Caption\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_UI_TestSocket_SetCaption.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_UI_TestSocket_SetCaption.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_UI_TestSocket_SetCaption.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_UI_TestSocket_SetCaption.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.SetCaption"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_UI_TestSocket_SetCaption.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_UI_TestSocket_SetCaption.TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Caption = "TYPE, SequenceArgument"

[NoffzUTP_TEF_UI_TestSocket_SetCaption.TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_UI_TestSocket_SetCaption.TS.SData.ActualArgs.Caption]
UseDef = False
ParamType = 2
Flags = 0

[DEF, NoffzUTP_TEF_UI_TestSocket_SetCaption.TS.SData.Prototype]
TestSocket = Num
Caption = Str

[NoffzUTP_TEF_UI_TestSocket_SetCaption.TS.SData.Prototype]
TestSocket = Nan

[NoffzUTP_TEF_UI_TestSocket_SetCaption.TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[NoffzUTP_TEF_UI_TestSocket_SetCaption.TS.SData.Prototype.Caption]
%COMMENT = "Text to display."

[DEF, NoffzUTP_TEF_UI_TestSocket_SetCaption.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_UI_TestSocket_SetCaption.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_UI_TestSocket_SetCaption.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_UI_TestSocket_SetCaption.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_TEF_UI_TestSocket_SetIcon]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_UI_TestSocket_SetIcon]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"UI.TestSocket.SetIcon\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127431
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_UI_TestSocket_SetIcon.Menu]
ItemName = "\"Set Test Socket Icon\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_UI_TestSocket_SetIcon.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_UI_TestSocket_SetIcon.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_UI_TestSocket_SetIcon.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_UI_TestSocket_SetIcon.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.SetIcon"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_UI_TestSocket_SetIcon.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_UI_TestSocket_SetIcon.TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
IconPath = "TYPE, SequenceArgument"

[NoffzUTP_TEF_UI_TestSocket_SetIcon.TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_UI_TestSocket_SetIcon.TS.SData.ActualArgs.IconPath]
UseDef = False
ParamType = 2
Flags = 0

[DEF, NoffzUTP_TEF_UI_TestSocket_SetIcon.TS.SData.Prototype]
TestSocket = Num
IconPath = Str

[NoffzUTP_TEF_UI_TestSocket_SetIcon.TS.SData.Prototype]
TestSocket = Nan

[NoffzUTP_TEF_UI_TestSocket_SetIcon.TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[NoffzUTP_TEF_UI_TestSocket_SetIcon.TS.SData.Prototype.IconPath]
%COMMENT = "Filepath or filename of the icon file. Supported formats: .ico"

[DEF, NoffzUTP_TEF_UI_TestSocket_SetIcon.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_UI_TestSocket_SetIcon.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_UI_TestSocket_SetIcon.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_UI_TestSocket_SetIcon.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"UI.TestSocket.TestStatus.SetValue\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127449
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.Menu]
ItemName = "\"Set Test Status Value\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.TestStatus.SetValue"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Text = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData.ActualArgs.Text]
UseDef = False
ParamType = 2
Flags = 0

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData.Prototype]
TestSocket = Num
Text = Str
Color = Num
FontSize = Num

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData.Prototype.Text]
%COMMENT = "Message to show."

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.Window)"
%NUMFMT = "%#x"

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.SData.Prototype.FontSize]
%COMMENT = " \tSize of the Font. (Default: Configuration parameter 'StatusTextBox' from Noffz.UTP.TEF.config)"

[DEF, NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_UI_TestSocket_TestStatus_SetValue.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_TEF_UI_TestSocket_ShowMessage]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_UI_TestSocket_ShowMessage]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"UI.TestSocket.ShowMessage\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127402
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.Menu]
ItemName = "\"Show Message\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_UI_TestSocket_ShowMessage.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.ShowMessage"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData.ActualArgs.Message]
UseDef = False
ParamType = 2
Flags = 0

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData.Prototype]
TestSocket = Num
Message = Str
Color = Num
FontSize = Num

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData.Prototype]
TestSocket = Nan
Color = Nan
FontSize = Nan

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData.Prototype.Color]
%COMMENT = "Background color of the Test Socket Message Area. (Default: StationGlobals.TEF.Colors.DialogInfo)"
%NUMFMT = "%#x"

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.SData.Prototype.FontSize]
%COMMENT = "Size of the Font. (Default: Configuration parameter 'DialogTextBox' from Noffz.UTP.TEF.config)"

[DEF, NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_UI_TestSocket_ShowMessage.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_UI_TestSocket_ShowMessage.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_TEF_UI_Station_Statistic_Update]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_UI_Station_Statistic_Update]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"UI.Station.Statistic.Update\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127382
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_UI_Station_Statistic_Update.Menu]
ItemName = "\"Update Statistic\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_UI_Station_Statistic_Update.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_UI_Station_Statistic_Update.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_UI_Station_Statistic_Update.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_UI_Station_Statistic_Update.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.Statistic.Update"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_UI_Station_Statistic_Update.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_UI_Station_Statistic_Update.TS.SData.ActualArgs]
UUTStatus = "TYPE, SequenceArgument"

[NoffzUTP_TEF_UI_Station_Statistic_Update.TS.SData.ActualArgs.UUTStatus]
UseDef = False
ParamType = 2
Flags = 0

[DEF, NoffzUTP_TEF_UI_Station_Statistic_Update.TS.SData.Prototype]
UUTStatus = Str

[DEF, NoffzUTP_TEF_UI_Station_Statistic_Update.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_UI_Station_Statistic_Update.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_UI_Station_Statistic_Update.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_UI_Station_Statistic_Update.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_VariantManager_ApplyVariantData]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_VariantManager_ApplyVariantData]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"Apply Variant Data\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1649771818
%VERSION = "5.0.0.3"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_VariantManager_ApplyVariantData.Menu]
ItemName = "\"Apply Variant Data\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_VariantManager_ApplyVariantData.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_VariantManager_ApplyVariantData.TS]
Icon = "UTP Variant Manager.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_VariantManager_ApplyVariantData.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_VariantManager_ApplyVariantData.TS.SData]
SFPath = "Noffz.UTP.VariantManager.API.seq"
SeqName = "ApplyVariantData"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_VariantManager_ApplyVariantData.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_VariantManager_ApplyVariantData.TS.SData.ActualArgs]
ProductName = "TYPE, SequenceArgument"
VariantName = "TYPE, SequenceArgument"

[NoffzUTP_VariantManager_ApplyVariantData.TS.SData.ActualArgs.ProductName]
UseDef = False
ParamType = 2
Flags = 0

[NoffzUTP_VariantManager_ApplyVariantData.TS.SData.ActualArgs.VariantName]
UseDef = False
ParamType = 2
Flags = 0

[DEF, NoffzUTP_VariantManager_ApplyVariantData.TS.SData.Prototype]
ProductName = Str
VariantName = Str

[DEF, NoffzUTP_VariantManager_ApplyVariantData.TS.Requirements]
Links = Strs

[NoffzUTP_VariantManager_ApplyVariantData.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_VariantManager_ApplyVariantData.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_VariantManager_ApplyVariantData.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, EditSubstep]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
MenuName = "TYPE, Expression"
SupportsReadOnly = Bool
HasEditPanel = Bool
%ROOT_TYPE = True

[EditSubstep]
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"NI_STEPTYPES\", \"EDIT_DEF_SUBSTEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
CodeTemplates Line0001 = "DefaultLabVIEWNXG|DefaultLabVIEW|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultH"
CodeTemplates Line0002 = "TB72_Template|DefaultHTB80_Template|Default_Template"
%FLG: CodeTemplates = 4194328
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438
%INSTFLG = 4194304
%INSTOVRD = 4194304

[EditSubstep.Menu]
CanBeSubstepType = True
CanOnlyBeSubstepType = True
ItemName = "ResStr(\"NI_STEPTYPES\", \"EDIT_SUBSTEP_MENU_ITEM_NAME\")"
Group = "EditSubsteps"

[DEF, EditSubstep.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[DEF, EditSubstep.TS]
SData = Obj
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[EditSubstep.TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, EditSubstep.TS.Requirements]
Links = Strs

[EditSubstep.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, EditSubstep.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[EditSubstep.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304

[DEF, NI_CommonCParameterResult]
%LOCATION = "StdTypes"
Condition = "TYPE, Expression"
Flags = Num
CheckedState = Num
%ROOT_TYPE = True

[NI_CommonCParameterResult]
Flags = 8192
CheckedState = 1
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[NI_CommonCParameterResult.Flags]
%NUMFMT = "%#x"

[DEF, FCParameter]
%LOCATION = "StdTypes"
Name = Str
Type = Num
NumType = Num
ObjType = Num
StructType = Str
NumPass = Num
StrPass = Num
ElemPass = Num
ArrayDimensionsSize = Objs
StrSize = "TYPE, Expression"
ResultAct = Num
ArgVal = "TYPE, Expression"
ArgDisplayVal = "TYPE, Expression"
Flags = Num
AdditionalResults = Obj
UserData = Obj
%FLG: UserData = 2097152
ArgValImag = "TYPE, Expression"
%ROOT_TYPE = True

[FCParameter]
Name = "_notNamed"
NumType = 4
StrSize = "1024"
%INSTOVRD: ResultAct = 5177368
%INSTOVRD: Flags = 5177368
%INSTFLG: UserData = 2097152
%TIMESTAMP = 1695834652
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[DEF, FCParameter.ArrayDimensionsSize]
%EPTYPE = "TYPE, Expression"
%FLG: %EPTYPE = 131072

[FCParameter.ArrayDimensionsSize]
%EPTYPE = "1024"

[DEF, FCParameter.AdditionalResults]
Input = "TYPE, NI_CommonCParameterResult"
Output = "TYPE, NI_CommonCParameterResult"

[DEF, FlexCStepAdditions]
%LOCATION = "StdTypes"
Call = ExternalCall
ModuleSrcPath = "TYPE, Path"
ModulePrjPath = "TYPE, Path"
ModuleWorkspacePath = "TYPE, Path"
CodeTemplateName = Str
ModuleCreateSrcType = Num
%ROOT_TYPE = True

[DEF, FlexCStepAdditions.Call]
LibPath = "TYPE, Path"
Func = Str
Parms = Objs

[DEF, FlexCStepAdditions.Call.Parms]
%EPTYPE = "TYPE, FCParameter"
%FLG: %EPTYPE = 131072
%[0] = "TYPE, FCParameter"

[FlexCStepAdditions.Call]
%HI: Parms = [0]

[FlexCStepAdditions.Call.Parms[0]]
Name = "Return Value"
Type = 3

[FlexCStepAdditions]
%TIMESTAMP = 1695834652
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[DEF, NoneStepAdditions]
%LOCATION = "StdTypes"
%ROOT_TYPE = True

[NoneStepAdditions]
%TIMESTAMP = 1695834687
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[DEF, Label]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
Description = Str
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[Label]
%HI: Substeps = [0]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "Step.Description"
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"NI_STEPTYPES\", \"LABEL_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1666107259
%VERSION = "23.0.0.1"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554446

[DEF, Label.Substeps]
%[0] = Step
%TYPE: %[0] = "EditSubstep"

[DEF, Label.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[Label.Substeps[0].TS.SData.Call]
LibPath = "CommonSubsteps.dll"
Func = "EditLabelStep"
%HI: Parms = [3]

[DEF, Label.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"
%[2] = "TYPE, FCParameter"
%[3] = "TYPE, FCParameter"

[Label.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[Label.Substeps[0].TS.SData.Call.Parms[1]]
Name = "object"
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[Label.Substeps[0].TS.SData.Call.Parms[2]]
Name = "reserved"
%INSTOVRD: ResultAct = 5177369
ArgVal = "0"
%INSTOVRD: Flags = 5177369

[Label.Substeps[0].TS.SData.Call.Parms[3]]
Name = "changed"
NumPass = 1
%INSTOVRD: ResultAct = 5177369
ArgVal = "RunState.InitialSelection.SelectedFile.ChangeCount"
ArgDisplayVal = "RunState.InitialSelection.SelectedFile.ChangeCount"
%INSTOVRD: Flags = 5177369

[Label.Substeps[0].TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 2097152
ConnectionLifetime = 0

[Label.Substeps[0]]
%INSTFLG: TS = 262168
%INSTOVRD: TS = 262168
MenuName = "ResStr(\"NI_SUBSTEPS\", \"LABEL_EDIT_STEP_MENU_NAME\")"
SupportsReadOnly = True
HasEditPanel = True

[Label.Substeps[0].Result]
%INSTOVRD: Error = 4194304
%INSTFLG: ReportText = 0
%INSTOVRD: Common = 4194304

[DEF, Label.Substeps[0]]
%NAME = "Edit"

[Label.Menu]
ItemName = "ResStr(\"NI_STEPTYPES\", \"LABEL_MENU_ITEM_NAME\")"
Group = "NI_Miscellaneous"

[DEF, Label.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[Label.TS]
Icon = "label.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7143448
ResultOption = 0
ConnectionLifetime = 0
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
CanSpecifyModule = False
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, Label.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, Label.TS.Requirements]
Links = Strs

[Label.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[Label.NI_Data]
%HI: EditPanels = [0]

[Label.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.LabelTabInfo"

[DEF, Label.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[Label.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_TEF_Model_TestSocket_GetTestSocketName]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_Model_TestSocket_GetTestSocketName]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"Model.TestSocket.GetTestSocketName\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127324
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.Menu]
ItemName = "\"Get Test Socket Name\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetTestSocketName"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
TestSocketName = "TYPE, SequenceArgument"

[NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS.SData.ActualArgs.TestSocketName]
UseDef = False
ParamType = 2

[DEF, NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS.SData.Prototype]
TestSocket = Num
TestSocketName = Str

[NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS.SData.Prototype]
TestSocket = Nan
%FLG: TestSocketName = 4

[NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number."

[NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS.SData.Prototype.TestSocketName]
%COMMENT = "Test Socket name."

[DEF, NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_Model_TestSocket_GetTestSocketName.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_TEF_Model_TestSocket_SetSerialNumber]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_Model_TestSocket_SetSerialNumber]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"Model.TestSocket.SetSerialNumber\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127339
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.Menu]
ItemName = "\"Set Serial Number\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.SetSerialNumber"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
SerialNumber = "TYPE, SequenceArgument"

[NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.TS.SData.ActualArgs.SerialNumber]
UseDef = False
ParamType = 2
Flags = 0

[DEF, NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.TS.SData.Prototype]
TestSocket = Num
SerialNumber = Str

[NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.TS.SData.Prototype]
TestSocket = Nan

[DEF, NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_Model_TestSocket_SetSerialNumber.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, Statement]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[Statement]
%HI: Substeps = [0]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "LocalizeExpression(Step.TS.PostExpr)"
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"NI_SUBSTEPS\", \"STATEMENT_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%HI: AdditionalResultsHints = [0]
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1666107259
%VERSION = "23.0.0.1"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554446

[DEF, Statement.Substeps]
%[0] = Step
%TYPE: %[0] = "EditSubstep"

[DEF, Statement.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[Statement.Substeps[0].TS.SData.Call]
LibPath = "CommonSubsteps.dll"
Func = "EditStatementStep"
%HI: Parms = [3]

[DEF, Statement.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"
%[2] = "TYPE, FCParameter"
%[3] = "TYPE, FCParameter"

[Statement.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
ObjType = 2
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[Statement.Substeps[0].TS.SData.Call.Parms[1]]
Name = "context"
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[Statement.Substeps[0].TS.SData.Call.Parms[2]]
Name = "reserved"
%INSTOVRD: ResultAct = 5177369
ArgVal = "0"
%INSTOVRD: Flags = 5177369

[Statement.Substeps[0].TS.SData.Call.Parms[3]]
Name = "changed"
ObjType = 2
NumPass = 1
%INSTOVRD: ResultAct = 5177369
ArgVal = "RunState.InitialSelection.SelectedFile.ChangeCount"
%INSTOVRD: Flags = 5177369

[Statement.Substeps[0].TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 2097152
ConnectionLifetime = 0

[Statement.Substeps[0]]
%INSTFLG: TS = 262168
%INSTOVRD: TS = 262168
MenuName = "ResStr(\"NI_SUBSTEPS\", \"STATEMENT_EDIT_STEP_MENU_NAME\")"
SupportsReadOnly = True
HasEditPanel = True

[Statement.Substeps[0].Result]
%INSTOVRD: Error = 4194304
%INSTFLG: ReportText = 0
%INSTOVRD: Common = 4194304

[DEF, Statement.Substeps[0]]
%NAME = "Edit"

[Statement.Menu]
ItemName = "ResStr(\"NI_SUBSTEPS\", \"STATEMENT_MENU_ITEM_NAME\")"
Group = "NI_Miscellaneous"

[DEF, Statement.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"
%[0] = "TYPE, NI_CustomResult"

[Statement.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_SUBSTEPS\", \"STATEMENT_EXPRESSION\")"
ValueToLog = "LocalizeExpression(Step.PostExpression)"

[Statement.TS]
Icon = "StatementStep.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7143448
ConnectionLifetime = 0
CanSpecifyModule = False
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, Statement.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, Statement.TS.Requirements]
Links = Strs

[Statement.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[Statement.NI_Data]
%HI: EditPanels = [0]

[Statement.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.StatementTabInfo"

[DEF, Statement.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[Statement.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_TEF_UI_TestSocket_Statistic_Update]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_UI_TestSocket_Statistic_Update]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"UI.TestSocket.Statistic.Update\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127440
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_UI_TestSocket_Statistic_Update.Menu]
ItemName = "\"Update Statistic\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_UI_TestSocket_Statistic_Update.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.Statistic.Update"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
UUTStatus = "TYPE, SequenceArgument"

[NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS.SData.ActualArgs.UUTStatus]
UseDef = False
ParamType = 2
Flags = 0

[DEF, NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS.SData.Prototype]
TestSocket = Num
UUTStatus = Str

[NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS.SData.Prototype]
TestSocket = Nan

[NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS.SData.Prototype.UUTStatus]
%COMMENT = "UUT test status: \"Passed\" or others."

[DEF, NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_UI_TestSocket_Statistic_Update.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_UI_TestSocket_Statistic_Update.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_UI_TestSocket_Statistic_Update.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, SequenceCall]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[SequenceCall]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"NI_STEPTYPES\", \"SC_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1666107259
%VERSION = "23.0.0.1"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438

[SequenceCall.Menu]
ItemName = "ResStr(\"NI_STEPTYPES\", \"SC_MENU_ITEM_NAME\")"
Group = "NI_Miscellaneous"

[DEF, SequenceCall.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[SequenceCall.TS]
Icon = "SeqAdp.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7143448
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, SequenceCall.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, SequenceCall.TS.Requirements]
Links = Strs

[SequenceCall.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, SequenceCall.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[SequenceCall.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_TEF_Model_Station_GetOperationMode]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_Model_Station_GetOperationMode]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"Model.Station.GetOperationMode\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127291
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_Model_Station_GetOperationMode.Menu]
ItemName = "\"Get Operation Mode\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_Model_Station_GetOperationMode.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_Model_Station_GetOperationMode.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_Model_Station_GetOperationMode.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_Model_Station_GetOperationMode.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.Station.GetOperationMode"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_Model_Station_GetOperationMode.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_Model_Station_GetOperationMode.TS.SData.ActualArgs]
OperationMode = "TYPE, SequenceArgument"

[NoffzUTP_TEF_Model_Station_GetOperationMode.TS.SData.ActualArgs.OperationMode]
UseDef = False
ParamType = 2

[DEF, NoffzUTP_TEF_Model_Station_GetOperationMode.TS.SData.Prototype]
OperationMode = Str

[NoffzUTP_TEF_Model_Station_GetOperationMode.TS.SData.Prototype]
%FLG: OperationMode = 4

[DEF, NoffzUTP_TEF_Model_Station_GetOperationMode.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_Model_Station_GetOperationMode.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_Model_Station_GetOperationMode.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_Model_Station_GetOperationMode.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, Substep]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[Substep]
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"NI_STEPTYPES\", \"GENERIC_DEF_SUBSTEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
CodeTemplates Line0001 = "DefaultLabVIEWNXG|DefaultLabVIEW|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultH"
CodeTemplates Line0002 = "TB72_Template|DefaultHTB80_Template|Default_Template"
%FLG: CodeTemplates = 4194328
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438
%INSTFLG = 4194304
%INSTOVRD = 4194304

[Substep.Menu]
CanBeSubstepType = True
CanOnlyBeSubstepType = True
ItemName = "ResStr(\"NI_STEPTYPES\", \"GENERIC_SUBSTEP_MENU_ITEM_NAME\")"
Group = "GenericSubsteps"

[DEF, Substep.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[DEF, Substep.TS]
SData = Obj
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[Substep.TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, Substep.TS.Requirements]
Links = Strs

[Substep.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, Substep.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[Substep.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304

[DEF, NI_Flow_If]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
ConditionExpr = "TYPE, Expression"
EvaluatedConditionExpr = Ref
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
Description = Str
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NI_Flow_If]
DescriptionFormat Line0001 = "Step.Description + Step.ConditionExpr == \"\" ? ResStr(\"FLOW_CONTROL_STEPS\", \"UNSPECIFIED\") : Str(LocalizeExpression"
DescriptionFormat Line0002 = "(Step.ConditionExpr), \"%expr\", 0x7)"
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"FLOW_CONTROL_STEPS\", \"IF_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%HI: Substeps = [1]
%FLG: CodeTemplates = 4194328
%INSTFLG: TS = 262168
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%INSTFLG: EvaluatedConditionExpr = 8
%FLG: BlockStartTypes = 4194328
BlockEndTypes = "NI_Flow_Else, NI_Flow_ElseIf, NI_Flow_End"
%FLG: BlockEndTypes = 4194328
AppliesToBlockStructure = True
%FLG: AppliesToBlockStructure = 4194328
%INSTFLG: Description = 8
%FLG: AdditionalResultsHints = 4194328
CanEncapsulate = True
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1666107248
%VERSION = "23.0.0.1"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438
%INSTFLG = 67108864

[NI_Flow_If.Menu]
ItemName = "ResStr(\"FLOW_CONTROL_STEPS\", \"IF_INSERT_MENU_ITEM_NAME\")"
Group = "NI_FlowControl_If"

[DEF, NI_Flow_If.Substeps]
%[0] = Step
%TYPE: %[0] = "Substep"
%[1] = Step
%TYPE: %[1] = "EditSubstep"

[NI_Flow_If.Substeps[0].TS]
Id = "ID#:qLl9dZOgXEmOqMatCabLiB"

[DEF, NI_Flow_If.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_If.Substeps[0].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "?OnNewStepWithEndStep@@YAXPAUIDispatch@@@Z"
%HI: Parms = [1]

[DEF, NI_Flow_If.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_If.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_If.Substeps[0].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[DEF, NI_Flow_If.Substeps[0]]
%NAME = "OnNewStep"

[NI_Flow_If.Substeps[1].TS]
Id = "ID#:ny3+UymIz0KMmddc0LFNWB"

[DEF, NI_Flow_If.Substeps[1].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_If.Substeps[1].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "?EditIfStep@@YAXPAUIDispatch@@@Z"
%HI: Parms = [1]

[DEF, NI_Flow_If.Substeps[1].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_If.Substeps[1].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_If.Substeps[1].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Flow_If.Substeps[1]]
MenuName = "ResStr(\"FLOW_CONTROL_STEPS\", \"IF_EDIT_MENU_ITEM_NAME\")"
SupportsReadOnly = True
HasEditPanel = True

[DEF, NI_Flow_If.Substeps[1]]
%NAME = "Edit"

[NI_Flow_If.TS]
Icon = "FlowControl\\NI_If.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
%INSTFLG: PreCond = 1
LoadOpt = "DynamicLoad"
%INSTFLG: LoadOpt = 1
%INSTOVRD: LoadOpt = 5046297
%INSTFLG: UnloadOpt = 1
%INSTOVRD: UnloadOpt = 5046297
%INSTFLG: WindowActivation = 1
%INSTOVRD: WindowActivation = 5046297
%INSTFLG: StepFCSeqF = 1
%INSTOVRD: StepFCSeqF = 5046297
%INSTOVRD: IgnoreRTE = 5046297
%INSTOVRD: UseMutex = 5046297
%INSTOVRD: MutexNameOrRef = 5046297
%INSTOVRD: BatchSyncOpt = 5046297
%INSTFLG: SwitchEnabled = 1
%INSTOVRD: SwitchEnabled = 5046297
%INSTFLG: VirtualDeviceName = 1
%INSTOVRD: VirtualDeviceName = 5046297
%INSTFLG: SwitchOperation = 1
%INSTOVRD: SwitchOperation = 5046297
%INSTFLG: RouteGroupConnect = 1
%INSTOVRD: RouteGroupConnect = 5046297
%INSTFLG: RouteGroupDisconnect = 1
%INSTOVRD: RouteGroupDisconnect = 5046297
%INSTFLG: MulticonnectMode = 1
%INSTOVRD: MulticonnectMode = 5046297
%INSTFLG: OperationOrder = 1
%INSTOVRD: OperationOrder = 5046297
%INSTFLG: ConnectionLifetime = 1
%INSTOVRD: ConnectionLifetime = 5046297
%INSTFLG: WaitForDebounce = 1
%INSTOVRD: WaitForDebounce = 5046297
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
%INSTFLG: CustExpr = 1
%INSTOVRD: CustExpr = 5046297
%INSTFLG: CustTrueAct = 1
%INSTOVRD: CustTrueAct = 5046297
%INSTFLG: CustFalseAct = 1
%INSTOVRD: CustFalseAct = 5046297
%INSTFLG: CustTrueActTarget = 1
%INSTOVRD: CustTrueActTarget = 5046297
%INSTFLG: CustFalseActTarget = 1
%INSTOVRD: CustFalseActTarget = 5046297
%INSTFLG: LoopType = 1
%INSTOVRD: LoopType = 5046297
%INSTFLG: LoopWhile = 1
%INSTOVRD: LoopWhile = 5046297
%INSTFLG: LoopStatus = 1
%INSTOVRD: LoopStatus = 5046297
%INSTFLG: LoopIncrement = 1
%INSTOVRD: LoopIncrement = 5046297
%INSTFLG: LoopInitialize = 1
%INSTOVRD: LoopInitialize = 5046297
%INSTFLG: LoopOpt = 1
%INSTOVRD: LoopOpt = 5046297
%INSTFLG: PreExpr = 1
%INSTFLG: PostExpr = 1
%INSTOVRD: PostExpr = 5046297
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
CanSpecifyModule = False
%FLG: CanSpecifyModule = 131072
CanEditCode = False
%FLG: CanEditCode = 131072
CanEditModulePrototype = False
%FLG: CanEditModulePrototype = 131072
%INSTFLG: PrecondIntExe = 1
%INSTOVRD: PrecondIntExe = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NI_Flow_If.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, NI_Flow_If.TS.Requirements]
Links = Strs

[NI_Flow_If.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[NI_Flow_If.NI_Data]
%HI: EditPanels = [0]

[NI_Flow_If.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.NI_Flow_IfTabInfo"

[DEF, NI_Flow_If.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NI_Flow_If.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304

[DEF, NI_Flow_If.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[DEF, NI_Flow_End]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
Active = Num
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
SuppressNextResult = Bool
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NI_Flow_End]
DescriptionFormat = "\"\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"FLOW_CONTROL_STEPS\", \"END_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%FLG: CodeTemplates = 4194328
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%INSTFLG: Active = 8
BlockStartTypes Line0001 = "NI_Flow_If, NI_Flow_Else, NI_Flow_ElseIf, NI_Flow_For, NI_Flow_While, NI_Flow_DoWhile, NI_Flow_Case, NI_Flow_Select, NI_"
BlockStartTypes Line0002 = " Flow_AutoSchedule, NI_Flow_LockResource, NI_Flow_Begin"
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
AppliesToBlockStructure = True
%FLG: AppliesToBlockStructure = 4194328
%INSTFLG: SuppressNextResult = 8
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1666107248
%VERSION = "23.0.0.1"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438
%INSTFLG = 67108864

[NI_Flow_End.Menu]
ItemName = "ResStr(\"FLOW_CONTROL_STEPS\", \"END_INSERT_MENU_ITEM_NAME\")"
Group = "NI_FlowControl"

[DEF, NI_Flow_End.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NI_Flow_End.TS]
Icon = "FlowControl\\NI_End.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
%INSTFLG: PreCond = 1
%INSTOVRD: PreCond = 5046297
LoadOpt = "DynamicLoad"
%INSTFLG: LoadOpt = 1
%INSTOVRD: LoadOpt = 5046297
%INSTFLG: UnloadOpt = 1
%INSTOVRD: UnloadOpt = 5046297
%INSTFLG: WindowActivation = 1
%INSTOVRD: WindowActivation = 5046297
%INSTFLG: StepFCSeqF = 1
%INSTOVRD: StepFCSeqF = 5046297
%INSTOVRD: IgnoreRTE = 5046297
%INSTOVRD: UseMutex = 5046297
%INSTOVRD: MutexNameOrRef = 5046297
%INSTOVRD: BatchSyncOpt = 5046297
%INSTFLG: SwitchEnabled = 1
%INSTOVRD: SwitchEnabled = 5046297
%INSTFLG: VirtualDeviceName = 1
%INSTOVRD: VirtualDeviceName = 5046297
%INSTFLG: SwitchOperation = 1
%INSTOVRD: SwitchOperation = 5046297
%INSTFLG: RouteGroupConnect = 1
%INSTOVRD: RouteGroupConnect = 5046297
%INSTFLG: RouteGroupDisconnect = 1
%INSTOVRD: RouteGroupDisconnect = 5046297
%INSTFLG: MulticonnectMode = 1
%INSTOVRD: MulticonnectMode = 5046297
%INSTFLG: OperationOrder = 1
%INSTOVRD: OperationOrder = 5046297
%INSTFLG: ConnectionLifetime = 1
%INSTOVRD: ConnectionLifetime = 5046297
%INSTFLG: WaitForDebounce = 1
%INSTOVRD: WaitForDebounce = 5046297
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
%INSTFLG: CustExpr = 1
%INSTOVRD: CustExpr = 5046297
%INSTFLG: CustTrueAct = 1
%INSTOVRD: CustTrueAct = 5046297
%INSTFLG: CustFalseAct = 1
%INSTOVRD: CustFalseAct = 5046297
%INSTFLG: CustTrueActTarget = 1
%INSTOVRD: CustTrueActTarget = 5046297
%INSTFLG: CustFalseActTarget = 1
%INSTOVRD: CustFalseActTarget = 5046297
%INSTFLG: LoopType = 1
%INSTOVRD: LoopType = 5046297
%INSTFLG: LoopWhile = 1
%INSTOVRD: LoopWhile = 5046297
%INSTFLG: LoopStatus = 1
%INSTOVRD: LoopStatus = 5046297
%INSTFLG: LoopIncrement = 1
%INSTOVRD: LoopIncrement = 5046297
%INSTFLG: LoopInitialize = 1
%INSTOVRD: LoopInitialize = 5046297
%INSTFLG: LoopOpt = 1
%INSTOVRD: LoopOpt = 5046297
%INSTFLG: PreExpr = 1
%INSTOVRD: PreExpr = 5046297
%INSTFLG: PostExpr = 1
%INSTOVRD: PostExpr = 5046297
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%INSTFLG: PrecondIntExe = 1
%INSTOVRD: PrecondIntExe = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NI_Flow_End.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, NI_Flow_End.TS.Requirements]
Links = Strs

[NI_Flow_End.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NI_Flow_End.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NI_Flow_End.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304

[DEF, Action]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
Category = Str
%FLG: Category = 524288
%ROOT_TYPE = True

[Action]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat Line0001 = "ResStr(\"NI_STEPTYPES\", \"ACTION_DESCRIPTION_NAME\") + ((\"%ModuleDescription\" == \"\") ? \"\" : \",  %ModuleDescripti"
DescriptionFormat Line0002 = "on\")"
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"NI_STEPTYPES\", \"ACTION_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
CodeTemplates Line0001 = "DefaultLabVIEW|DefaultLabVIEWNXG|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultH"
CodeTemplates Line0002 = "TB72_Template|DefaultHTB80_Template|Default_Template"
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
Category = "Action"
%FLG: Category = 24
%TIMESTAMP = 1666107258
%VERSION = "23.0.0.1"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554446

[Action.Menu]
ItemName = "ResStr(\"NI_STEPTYPES\", \"ACTION_MENU_ITEM_NAME\")"
Group = "Action"

[DEF, Action.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[DEF, Action.TS]
SData = Obj
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[Action.TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7143448
ConnectionLifetime = 0
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, Action.TS.Requirements]
Links = Strs

[Action.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, Action.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[Action.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NI_LabVIEWParameterResult]
%LOCATION = "StdTypes"
Condition = "TYPE, Expression"
Flags = Num
CheckedState = Num
%ROOT_TYPE = True

[NI_LabVIEWParameterResult]
Flags = 8192
CheckedState = 1
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[NI_LabVIEWParameterResult.Flags]
%NUMFMT = "%#x"

[DEF, VIParameter]
%LOCATION = "StdTypes"
Label = Str
Caption = Str
ArgVal = "TYPE, Expression"
ArgDisplayVal = "TYPE, Expression"
Type = Num
WireRequirement = Num
ArrayType = Num
DefaultArraySize = Str
ClusterType = Num
NumType = Num
ReferenceType = Num
StrPass = Num
DisplayType = Str
UseDefaultValues = Bool
PartiallySpecified = Bool
ComplexParts = Obj
%FLG: ComplexParts = 2097152
ArrayClusterProto = Obj
%FLG: ArrayClusterProto = 2097152
ArrayClusterEls = Objs
UserData = Obj
%FLG: UserData = 2097152
AdditionalResult = "TYPE, NI_LabVIEWParameterResult"
Direction = Num
ConnectorNumber = Num
LegacyClusterType = Num
%ROOT_TYPE = True

[VIParameter]
Label = "_notNamed"
Type = 8
WireRequirement = 2
ArrayType = 50
DefaultArraySize = "[]"
ClusterType = 20
NumType = 7
%INSTFLG: ComplexParts = 2097152
%INSTFLG: ArrayClusterProto = 2097152
%INSTFLG: UserData = 2097152
ConnectorNumber = -1
%TIMESTAMP = 1695834807
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[DEF, NI_NodeProperty]
%LOCATION = "StdTypes"
LongName = Str
DataName = Str
Direction = Num
ConnectorNumber = Num
UniqueID = Str
%ROOT_TYPE = True

[NI_NodeProperty]
%TIMESTAMP = 1695834807
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[DEF, FlexGStepAdditions]
%LOCATION = "StdTypes"
ViCall = VICall
%ROOT_TYPE = True

[DEF, FlexGStepAdditions.ViCall]
CallType = Num
ClassPath = "TYPE, Path"
ProjectPath = "TYPE, Path"
RemoteProjectPath = "TYPE, Path"
VIPath = "TYPE, Path"
Namespace = Str
RemoteVIPath = "TYPE, Path"
CallName = Str
VIType = Num
ShowFrnPnl = Bool
VIDescription = Str
TDChecksum = Num
NodeLibraryName = Str
NodeLibraryGenericTypeName = Str
NodeClassDataName = Str
NodeUsesDataValueReference = Bool
NodeIgnoresInternalErrors = Bool
NodeOperationMode = Num
AutoDetectLVRT = Bool
RemoteHost = "TYPE, Expression"
RemoteHostByExpr = Bool
PrototypeFlags = Num
VI = Str
OverrideBinaryClassPath = "TYPE, Path"
OverrideBinaryVIPath = "TYPE, Path"
OverrideBinaryProjectPath = "TYPE, Path"
OverrideBinaryNamespace = Str
OverrideModuleOptions = Num
BuildSpecificationName = Str
OverrideBinaryVIChecksum = Num
ArrayParametersMatchLVArrayDimenions = Bool
Parms = Objs
NodeProperties = Objs

[FlexGStepAdditions.ViCall]
TDChecksum = -1
OverrideBinaryVIChecksum = -1

[DEF, FlexGStepAdditions.ViCall.Parms]
%EPTYPE = "TYPE, VIParameter"
%FLG: %EPTYPE = 131072

[DEF, FlexGStepAdditions.ViCall.NodeProperties]
%EPTYPE = "TYPE, NI_NodeProperty"
%FLG: %EPTYPE = 131072

[FlexGStepAdditions]
%TIMESTAMP = 1695834807
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[DEF, VIParameterElement]
%LOCATION = "StdTypes"
Label = Str
Caption = Str
ArgVal = "TYPE, Expression"
ArgDisplayVal = "TYPE, Expression"
Type = Num
WireRequirement = Num
ArrayType = Num
DefaultArraySize = Str
ClusterType = Num
NumType = Num
ReferenceType = Num
StrPass = Num
DisplayType = Str
UseDefaultValues = Bool
PartiallySpecified = Bool
ComplexParts = Obj
%FLG: ComplexParts = 2097152
ArrayClusterProto = Obj
%FLG: ArrayClusterProto = 2097152
ArrayClusterEls = Objs
UserData = Obj
%FLG: UserData = 2097152
AdditionalResult = "TYPE, NI_LabVIEWParameterResult"
%ROOT_TYPE = True

[VIParameterElement]
Label = "_notNamed"
Type = 8
WireRequirement = 2
ArrayType = 50
DefaultArraySize = "[]"
ClusterType = 20
NumType = 7
%INSTFLG: ComplexParts = 2097152
%INSTFLG: ArrayClusterProto = 2097152
%INSTFLG: UserData = 2097152
%TIMESTAMP = 1695834807
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%FLG = 24
%TYPE_FLG = 33554436

[DEF, NI_Flow_While]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
ConditionExpr = "TYPE, Expression"
EvaluatedConditionExpr = Ref
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
Description = Str
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NI_Flow_While]
DescriptionFormat Line0001 = "Step.Description + (Step.ConditionExpr == \"\" ? ResStr(\"FLOW_CONTROL_STEPS\", \"UNSPECIFIED\") : Str(LocalizeExpressio"
DescriptionFormat Line0002 = "n(Step.ConditionExpr), \"%expr\", 0x7))"
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"FLOW_CONTROL_STEPS\", \"WHILE_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%HI: Substeps = [1]
%FLG: CodeTemplates = 4194328
%INSTFLG: TS = 262168
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%INSTFLG: EvaluatedConditionExpr = 8
%FLG: BlockStartTypes = 4194328
BlockEndTypes = "NI_Flow_End"
%FLG: BlockEndTypes = 4194328
AppliesToBlockStructure = True
%FLG: AppliesToBlockStructure = 4194328
%INSTFLG: Description = 8
%FLG: AdditionalResultsHints = 4194328
CanEncapsulate = True
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1690473017
%VERSION = "23.0.0.2"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438
%INSTFLG = 67108864

[NI_Flow_While.Menu]
ItemName = "ResStr(\"FLOW_CONTROL_STEPS\", \"WHILE_INSERT_MENU_ITEM_NAME\")"
Group = "NI_FlowControl_Loop"

[DEF, NI_Flow_While.Substeps]
%[0] = Step
%TYPE: %[0] = "Substep"
%[1] = Step
%TYPE: %[1] = "EditSubstep"

[NI_Flow_While.Substeps[0].TS]
Id = "ID#:ApOk00JkFUy4JOZwLQ+X6B"

[DEF, NI_Flow_While.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_While.Substeps[0].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "?OnNewStepWithEndStep@@YAXPAUIDispatch@@@Z"
%HI: Parms = [1]

[DEF, NI_Flow_While.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_While.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_While.Substeps[0].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[DEF, NI_Flow_While.Substeps[0]]
%NAME = "OnNewStep"

[NI_Flow_While.Substeps[1].TS]
Id = "ID#:ny3+UymIz0KMmddc0LFNWB"

[DEF, NI_Flow_While.Substeps[1].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_While.Substeps[1].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "?EditWhileStep@@YAXPAUIDispatch@@@Z"
%HI: Parms = [1]

[DEF, NI_Flow_While.Substeps[1].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_While.Substeps[1].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_While.Substeps[1].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Flow_While.Substeps[1]]
MenuName = "ResStr(\"FLOW_CONTROL_STEPS\", \"WHILE_EDIT_MENU_ITEM_NAME\")"
SupportsReadOnly = True
HasEditPanel = True

[DEF, NI_Flow_While.Substeps[1]]
%NAME = "Edit"

[NI_Flow_While.TS]
Icon = "FlowControl\\NI_While.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
%INSTFLG: PreCond = 1
%INSTOVRD: PreCond = 5046297
LoadOpt = "DynamicLoad"
%INSTFLG: LoadOpt = 1
%INSTOVRD: LoadOpt = 5046297
%INSTFLG: UnloadOpt = 1
%INSTOVRD: UnloadOpt = 5046297
%INSTFLG: WindowActivation = 1
%INSTOVRD: WindowActivation = 5046297
%INSTFLG: StepFCSeqF = 1
%INSTOVRD: StepFCSeqF = 5046297
%INSTOVRD: IgnoreRTE = 5046297
%INSTOVRD: UseMutex = 5046297
%INSTOVRD: MutexNameOrRef = 5046297
%INSTOVRD: BatchSyncOpt = 5046297
%INSTFLG: SwitchEnabled = 1
%INSTOVRD: SwitchEnabled = 5046297
%INSTFLG: VirtualDeviceName = 1
%INSTOVRD: VirtualDeviceName = 5046297
%INSTFLG: SwitchOperation = 1
%INSTOVRD: SwitchOperation = 5046297
%INSTFLG: RouteGroupConnect = 1
%INSTOVRD: RouteGroupConnect = 5046297
%INSTFLG: RouteGroupDisconnect = 1
%INSTOVRD: RouteGroupDisconnect = 5046297
%INSTFLG: MulticonnectMode = 1
%INSTOVRD: MulticonnectMode = 5046297
%INSTFLG: OperationOrder = 1
%INSTOVRD: OperationOrder = 5046297
%INSTFLG: ConnectionLifetime = 1
%INSTOVRD: ConnectionLifetime = 5046297
%INSTFLG: WaitForDebounce = 1
%INSTOVRD: WaitForDebounce = 5046297
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
%INSTFLG: CustExpr = 1
%INSTOVRD: CustExpr = 5046297
%INSTFLG: CustTrueAct = 1
%INSTOVRD: CustTrueAct = 5046297
%INSTFLG: CustFalseAct = 1
%INSTOVRD: CustFalseAct = 5046297
%INSTFLG: CustTrueActTarget = 1
%INSTOVRD: CustTrueActTarget = 5046297
%INSTFLG: CustFalseActTarget = 1
%INSTOVRD: CustFalseActTarget = 5046297
%INSTFLG: LoopType = 1
%INSTOVRD: LoopType = 5046297
%INSTFLG: LoopWhile = 1
%INSTOVRD: LoopWhile = 5046297
%INSTFLG: LoopStatus = 1
%INSTOVRD: LoopStatus = 5046297
%INSTFLG: LoopIncrement = 1
%INSTOVRD: LoopIncrement = 5046297
%INSTFLG: LoopInitialize = 1
%INSTOVRD: LoopInitialize = 5046297
%INSTFLG: LoopOpt = 1
%INSTOVRD: LoopOpt = 5046297
%INSTFLG: PreExpr = 1
%INSTOVRD: PreExpr = 5046297
%INSTFLG: PostExpr = 1
%INSTOVRD: PostExpr = 5046297
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%INSTFLG: PrecondIntExe = 1
%INSTOVRD: PrecondIntExe = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NI_Flow_While.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, NI_Flow_While.TS.Requirements]
Links = Strs

[NI_Flow_While.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[NI_Flow_While.NI_Data]
%HI: EditPanels = [0]

[NI_Flow_While.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.NI_Flow_WhileTabInfo"

[DEF, NI_Flow_While.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NI_Flow_While.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304

[DEF, NI_Flow_While.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[DEF, NI_Flow_ElseIf]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
ConditionExpr = "TYPE, Expression"
EvaluatedConditionExpr = Ref
Active = Num
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
Description = Str
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NI_Flow_ElseIf]
DescriptionFormat Line0001 = "Step.Description + Step.ConditionExpr == \"\" ? ResStr(\"FLOW_CONTROL_STEPS\", \"UNSPECIFIED\")  : Str(LocalizeExpressio"
DescriptionFormat Line0002 = "n(Step.ConditionExpr), \"%expr\", 0x7)"
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"FLOW_CONTROL_STEPS\", \"ELSEIF_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%HI: Substeps = [0]
%FLG: CodeTemplates = 4194328
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%INSTFLG: EvaluatedConditionExpr = 8
BlockStartTypes = "NI_Flow_If, NI_Flow_ElseIf"
%FLG: BlockStartTypes = 4194328
BlockEndTypes = "NI_Flow_ElseIf, NI_Flow_Else, NI_Flow_End"
%FLG: BlockEndTypes = 4194328
AppliesToBlockStructure = True
%FLG: AppliesToBlockStructure = 4194328
%INSTFLG: Description = 8
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1666107248
%VERSION = "23.0.0.1"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438
%INSTFLG = 67108864

[NI_Flow_ElseIf.Menu]
ItemName = "ResStr(\"FLOW_CONTROL_STEPS\", \"ELSEIF_INSERT_MENU_ITEM_NAME\")"
Group = "NI_FlowControl_If"

[DEF, NI_Flow_ElseIf.Substeps]
%[0] = Step
%TYPE: %[0] = "EditSubstep"

[NI_Flow_ElseIf.Substeps[0].TS]
Id = "ID#:ny3+UymIz0KMmddc0LFNWB"

[DEF, NI_Flow_ElseIf.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_ElseIf.Substeps[0].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "EditElseIfStep"
%HI: Parms = [1]

[DEF, NI_Flow_ElseIf.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_ElseIf.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_ElseIf.Substeps[0].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Flow_ElseIf.Substeps[0]]
MenuName = "ResStr(\"FLOW_CONTROL_STEPS\", \"ELSEIF_EDIT_MENU_ITEM_NAME\")"
SupportsReadOnly = True
HasEditPanel = True

[DEF, NI_Flow_ElseIf.Substeps[0]]
%NAME = "Edit"

[DEF, NI_Flow_ElseIf.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NI_Flow_ElseIf.TS]
Icon = "FlowControl\\NI_ElseIf.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
%INSTFLG: PreCond = 1
LoadOpt = "DynamicLoad"
%INSTFLG: LoadOpt = 1
%INSTOVRD: LoadOpt = 5046297
%INSTFLG: UnloadOpt = 1
%INSTOVRD: UnloadOpt = 5046297
%INSTFLG: WindowActivation = 1
%INSTOVRD: WindowActivation = 5046297
%INSTFLG: StepFCSeqF = 1
%INSTOVRD: StepFCSeqF = 5046297
%INSTOVRD: IgnoreRTE = 5046297
%INSTOVRD: UseMutex = 5046297
%INSTOVRD: MutexNameOrRef = 5046297
%INSTOVRD: BatchSyncOpt = 5046297
%INSTFLG: SwitchEnabled = 1
%INSTOVRD: SwitchEnabled = 5046297
%INSTFLG: VirtualDeviceName = 1
%INSTOVRD: VirtualDeviceName = 5046297
%INSTFLG: SwitchOperation = 1
%INSTOVRD: SwitchOperation = 5046297
%INSTFLG: RouteGroupConnect = 1
%INSTOVRD: RouteGroupConnect = 5046297
%INSTFLG: RouteGroupDisconnect = 1
%INSTOVRD: RouteGroupDisconnect = 5046297
%INSTFLG: MulticonnectMode = 1
%INSTOVRD: MulticonnectMode = 5046297
%INSTFLG: OperationOrder = 1
%INSTOVRD: OperationOrder = 5046297
%INSTFLG: ConnectionLifetime = 1
%INSTOVRD: ConnectionLifetime = 5046297
%INSTFLG: WaitForDebounce = 1
%INSTOVRD: WaitForDebounce = 5046297
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
%INSTFLG: CustExpr = 1
%INSTOVRD: CustExpr = 5046297
%INSTFLG: CustTrueAct = 1
%INSTOVRD: CustTrueAct = 5046297
%INSTFLG: CustFalseAct = 1
%INSTOVRD: CustFalseAct = 5046297
%INSTFLG: CustTrueActTarget = 1
%INSTOVRD: CustTrueActTarget = 5046297
%INSTFLG: CustFalseActTarget = 1
%INSTOVRD: CustFalseActTarget = 5046297
%INSTFLG: LoopType = 1
%INSTOVRD: LoopType = 5046297
%INSTFLG: LoopWhile = 1
%INSTOVRD: LoopWhile = 5046297
%INSTFLG: LoopStatus = 1
%INSTOVRD: LoopStatus = 5046297
%INSTFLG: LoopIncrement = 1
%INSTOVRD: LoopIncrement = 5046297
%INSTFLG: LoopInitialize = 1
%INSTOVRD: LoopInitialize = 5046297
%INSTFLG: LoopOpt = 1
%INSTOVRD: LoopOpt = 5046297
%INSTFLG: PreExpr = 1
%INSTOVRD: PreExpr = 5046297
%INSTFLG: PostExpr = 1
%INSTOVRD: PostExpr = 5046297
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%INSTFLG: PrecondIntExe = 1
%INSTOVRD: PrecondIntExe = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NI_Flow_ElseIf.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, NI_Flow_ElseIf.TS.Requirements]
Links = Strs

[NI_Flow_ElseIf.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[NI_Flow_ElseIf.NI_Data]
%HI: EditPanels = [0]

[NI_Flow_ElseIf.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.NI_Flow_ElseIfTabInfo"

[DEF, NI_Flow_ElseIf.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NI_Flow_ElseIf.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304

[DEF, PostSubstep]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[PostSubstep]
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"NI_STEPTYPES\", \"POST_DEF_SUBSTEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
CodeTemplates Line0001 = "DefaultLabVIEWNXG|DefaultLabVIEW|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultH"
CodeTemplates Line0002 = "TB72_Template|DefaultHTB80_Template|Default_Template"
%FLG: CodeTemplates = 4194328
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1695834317
%VERSION = "23.0.0.49152"
%TYPELASTMOD = "23.0.0.49152"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438
%INSTFLG = 4194304
%INSTOVRD = 4194304

[PostSubstep.Menu]
CanBeSubstepType = True
CanOnlyBeSubstepType = True
ItemName = "ResStr(\"NI_STEPTYPES\", \"POST_SUBSTEP_MENU_ITEM_NAME\")"
Group = "ExecSubsteps"

[DEF, PostSubstep.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[DEF, PostSubstep.TS]
SData = Obj
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[PostSubstep.TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, PostSubstep.TS.Requirements]
Links = Strs

[PostSubstep.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, PostSubstep.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[PostSubstep.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304

[DEF, NI_Wait]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
%FLG: Result = 2097152
TimeoutEnabled = Bool
ErrorOnTimeout = Bool
ThreadRefExpr = "TYPE, Expression"
SeqCallName = Str
SeqCallStepGroupIdx = Num
TimeoutExpr = "TYPE, Expression"
WaitForTarget = Num
TimeExpr = "TYPE, Expression"
ExecutionRefExpr = "TYPE, Expression"
SpecifyBySeqCall = Bool
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NI_Wait]
DescriptionFormat Line0001 = "ResStr(\"NI_WAIT_STEP_TYPE_TARGET_NAME\", Str(Step.WaitForTarget)) +\n\"(\" +\n((Step.WaitForTarget == 0) ? LocalizeExpr"
DescriptionFormat Line0002 = "ession(Step.TimeExpr):\n (Step.WaitForTarget == 1) ? LocalizeExpression(Step.TimeExpr):\n (Step.WaitForTarget == 2) ?\n "
DescriptionFormat Line0003 = "      (Step.SpecifyBySeqCall \n         ? ((Step.SeqCallName == \"\") \n             ? ResStr(\"NI_WAIT_STEP_TYPE\", \"U"
DescriptionFormat Line0004 = "NSPECIFIED\")\n             : TargetName(RunState.Sequence, Step.SeqCallName, false, true, Step.SeqCallStepGroupIdx, Run"
DescriptionFormat Line0005 = "State.StepGroup))\n         : LocalizeExpression(Step.ThreadRefExpr)) :\n (Step.WaitForTarget == 3) ?\n       (Step.Spec"
DescriptionFormat Line0006 = "ifyBySeqCall \n         ? ((Step.SeqCallName == \"\") \n             ? ResStr(\"NI_WAIT_STEP_TYPE\", \"UNSPECIFIED\")\n "
DescriptionFormat Line0007 = "            : TargetName(RunState.Sequence, Step.SeqCallName, false, true, Step.SeqCallStepGroupIdx, RunState.StepGroup)"
DescriptionFormat Line0008 = ")\n         : LocalizeExpression(Step.ExecutionRefExpr)) :\n \"\")\n+ \")\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"NI_WAIT_STEP_TYPE\", \"DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%HI: Substeps = [2]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
CodeTemplates = "Default_Template"
%FLG: CodeTemplates = 4194328
%HI: AdditionalResultsHints = [0]
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 6291456
ErrorOnTimeout = True
SpecifyBySeqCall = True
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1666107258
%VERSION = "23.0.0.1"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554446

[NI_Wait.Menu]
ItemName = "ResStr(\"NI_WAIT_STEP_TYPE\", \"MENU_ITEM_NAME\")"
Group = "NI_NonAdvSynchronization"

[DEF, NI_Wait.Substeps]
%[0] = Step
%TYPE: %[0] = "Substep"
%[1] = Step
%TYPE: %[1] = "PostSubstep"
%[2] = Step
%TYPE: %[2] = "EditSubstep"

[NI_Wait.Substeps[0].TS]
Id = "ID#:yr4D9fxyAUOd3qDH2OVePB"

[DEF, NI_Wait.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Wait.Substeps[0].TS.SData.Call]
LibPath = "syncsteps.dll"
Func = "?SetWaitAdditionalResultsHintsForOperation@@YAXPAUStep@TS@@@Z"
%HI: Parms = [1]

[DEF, NI_Wait.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Wait.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Wait.Substeps[0].TS.SData.Call.Parms[1]]
Type = 205
StructType = "TS::Step"
%INSTOVRD: ResultAct = 5177369
ArgVal = "Step"
%INSTOVRD: Flags = 5177369

[DEF, NI_Wait.Substeps[0]]
%NAME = "OnNewStep"

[DEF, NI_Wait.Substeps[1].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Wait.Substeps[1].TS.SData.Call]
LibPath = "SyncSteps.dll"
Func = "DoWaitStep"
%HI: Parms = [1]

[DEF, NI_Wait.Substeps[1].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Wait.Substeps[1].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Wait.Substeps[1].TS.SData.Call.Parms[1]]
Name = "seqContext"
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
ArgDisplayVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Wait.Substeps[1].TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 2097152
ConnectionLifetime = 0

[NI_Wait.Substeps[1].TS.CustomResults.%EPTYPE]
Name = "\"Foo\""
ValueToLog = "12"
IsAnyType = False

[NI_Wait.Substeps[1]]
%INSTFLG: TS = 262168
%INSTOVRD: TS = 262168

[NI_Wait.Substeps[1].Result]
%INSTOVRD: Error = 4194304
%INSTFLG: ReportText = 0
%INSTOVRD: Common = 4194304

[DEF, NI_Wait.Substeps[1]]
%NAME = "Post"

[DEF, NI_Wait.Substeps[2].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Wait.Substeps[2].TS.SData.Call]
LibPath = "SyncSteps.dll"
Func = "EditWaitStep"
%HI: Parms = [3]

[DEF, NI_Wait.Substeps[2].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"
%[2] = "TYPE, FCParameter"
%[3] = "TYPE, FCParameter"

[NI_Wait.Substeps[2].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Wait.Substeps[2].TS.SData.Call.Parms[1]]
Name = "seqContextDisp"
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Wait.Substeps[2].TS.SData.Call.Parms[2]]
Name = "reserved"
%INSTOVRD: ResultAct = 5177369
ArgVal = "0"
%INSTOVRD: Flags = 5177369

[NI_Wait.Substeps[2].TS.SData.Call.Parms[3]]
Name = "changeCount"
NumPass = 1
%INSTOVRD: ResultAct = 5177369
ArgVal = "RunState.InitialSelection.SelectedFile.ChangeCount"
ArgDisplayVal = "RunState.InitialSelection.SelectedFile.ChangeCount"
%INSTOVRD: Flags = 5177369

[NI_Wait.Substeps[2].TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 2097152
ConnectionLifetime = 0

[NI_Wait.Substeps[2].TS.CustomResults.%EPTYPE]
Name = "\"Foo\""
ValueToLog = "12"
IsAnyType = False

[NI_Wait.Substeps[2]]
%INSTFLG: TS = 262168
%INSTOVRD: TS = 262168
MenuName = "ResStr(\"NI_WAIT_STEP_TYPE\", \"EDIT_STEP_MENU_NAME\")"
SupportsReadOnly = True
HasEditPanel = True

[NI_Wait.Substeps[2].Result]
%INSTOVRD: Error = 4194304
%INSTFLG: ReportText = 0
%INSTOVRD: Common = 4194304

[DEF, NI_Wait.Substeps[2]]
%NAME = "Edit"

[DEF, NI_Wait.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"
%[0] = "TYPE, NI_CustomResult"

[NI_Wait.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_WAIT_STEP_TYPE\", \"OPERATION\")"
ValueToLog = "ResStr(\"NI_WAIT_STEP_TYPE_TARGET_NAME\", Str(Step.WaitForTarget))"

[NI_Wait.TS]
Icon = "ni_hourglass.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7143448
BatchSyncOpt = 2
ConnectionLifetime = 0
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NI_Wait.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, NI_Wait.TS.Requirements]
Links = Strs

[NI_Wait.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[NI_Wait.TS.CustomResults.%EPTYPE]
Name = "\"Foo\""
ValueToLog = "12"
IsAnyType = False

[NI_Wait.NI_Data]
%HI: EditPanels = [0]

[NI_Wait.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.WaitTabInfo"

[DEF, NI_Wait.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NI_Wait.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"Model.TestSocket.GetProductAndVariant\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127330
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.Menu]
ItemName = "\"Get Product And Variant\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetProductAndVariant"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Product = "TYPE, SequenceArgument"
Variant = "TYPE, SequenceArgument"

[NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.TS.SData.ActualArgs.Product]
UseDef = False
ParamType = 2

[NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.TS.SData.ActualArgs.Variant]
UseDef = False
ParamType = 2

[DEF, NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.TS.SData.Prototype]
TestSocket = Num
Product = Str
Variant = Str

[NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.TS.SData.Prototype]
TestSocket = Nan
%FLG: Product = 4
%FLG: Variant = 4

[DEF, NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_Model_TestSocket_GetProductAndVariant.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NI_Flow_Else]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
Active = Num
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NI_Flow_Else]
DescriptionFormat = "\"\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"FLOW_CONTROL_STEPS\", \"ELSE_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%FLG: CodeTemplates = 4194328
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
BlockStartTypes = "NI_Flow_If, NI_Flow_ElseIf"
%FLG: BlockStartTypes = 4194328
BlockEndTypes = "NI_Flow_End"
%FLG: BlockEndTypes = 4194328
AppliesToBlockStructure = True
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1666107248
%VERSION = "23.0.0.1"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438
%INSTFLG = 67108864

[NI_Flow_Else.Menu]
ItemName = "ResStr(\"FLOW_CONTROL_STEPS\", \"ELSE_INSERT_MENU_ITEM_NAME\")"
Group = "NI_FlowControl_If"

[DEF, NI_Flow_Else.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NI_Flow_Else.TS]
Icon = "FlowControl\\NI_Else.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
%INSTFLG: PreCond = 1
%INSTOVRD: PreCond = 5046297
LoadOpt = "DynamicLoad"
%INSTFLG: LoadOpt = 1
%INSTOVRD: LoadOpt = 5046297
%INSTFLG: UnloadOpt = 1
%INSTOVRD: UnloadOpt = 5046297
%INSTFLG: WindowActivation = 1
%INSTOVRD: WindowActivation = 5046297
%INSTFLG: StepFCSeqF = 1
%INSTOVRD: StepFCSeqF = 5046297
%INSTOVRD: IgnoreRTE = 5046297
%INSTOVRD: UseMutex = 5046297
%INSTOVRD: MutexNameOrRef = 5046297
%INSTOVRD: BatchSyncOpt = 5046297
%INSTFLG: SwitchEnabled = 1
%INSTOVRD: SwitchEnabled = 5046297
%INSTFLG: VirtualDeviceName = 1
%INSTOVRD: VirtualDeviceName = 5046297
%INSTFLG: SwitchOperation = 1
%INSTOVRD: SwitchOperation = 5046297
%INSTFLG: RouteGroupConnect = 1
%INSTOVRD: RouteGroupConnect = 5046297
%INSTFLG: RouteGroupDisconnect = 1
%INSTOVRD: RouteGroupDisconnect = 5046297
%INSTFLG: MulticonnectMode = 1
%INSTOVRD: MulticonnectMode = 5046297
%INSTFLG: OperationOrder = 1
%INSTOVRD: OperationOrder = 5046297
%INSTFLG: ConnectionLifetime = 1
%INSTOVRD: ConnectionLifetime = 5046297
%INSTFLG: WaitForDebounce = 1
%INSTOVRD: WaitForDebounce = 5046297
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
%INSTFLG: CustExpr = 1
%INSTOVRD: CustExpr = 5046297
%INSTFLG: CustTrueAct = 1
%INSTOVRD: CustTrueAct = 5046297
%INSTFLG: CustFalseAct = 1
%INSTOVRD: CustFalseAct = 5046297
%INSTFLG: CustTrueActTarget = 1
%INSTOVRD: CustTrueActTarget = 5046297
%INSTFLG: CustFalseActTarget = 1
%INSTOVRD: CustFalseActTarget = 5046297
%INSTFLG: LoopType = 1
%INSTOVRD: LoopType = 5046297
%INSTFLG: LoopWhile = 1
%INSTOVRD: LoopWhile = 5046297
%INSTFLG: LoopStatus = 1
%INSTOVRD: LoopStatus = 5046297
%INSTFLG: LoopIncrement = 1
%INSTOVRD: LoopIncrement = 5046297
%INSTFLG: LoopInitialize = 1
%INSTOVRD: LoopInitialize = 5046297
%INSTFLG: LoopOpt = 1
%INSTOVRD: LoopOpt = 5046297
%INSTFLG: PreExpr = 1
%INSTOVRD: PreExpr = 5046297
%INSTFLG: PostExpr = 1
%INSTOVRD: PostExpr = 5046297
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%INSTFLG: PrecondIntExe = 1
%INSTOVRD: PrecondIntExe = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NI_Flow_Else.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, NI_Flow_Else.TS.Requirements]
Links = Strs

[NI_Flow_Else.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NI_Flow_Else.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NI_Flow_Else.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304

[DEF, NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"UI.Station.ShowPopupMessageDialog\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1698324208
%VERSION = "5.0.0.10"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.Menu]
ItemName = "\"Show Popup Message Dialog\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowPopupMessageDialog"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Title = "TYPE, SequenceArgument"
CenterPosition = "TYPE, SequenceArgument"
XPosition = "TYPE, SequenceArgument"
YPosition = "TYPE, SequenceArgument"
IsModal = "TYPE, SequenceArgument"
ShowOkButton = "TYPE, SequenceArgument"
ShowCancelButton = "TYPE, SequenceArgument"
DialogTimeout = "TYPE, SequenceArgument"
OkButtonPressed = "TYPE, SequenceArgument"
CancelButtonPressed = "TYPE, SequenceArgument"

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.ActualArgs.Message]
UseDef = False
ParamType = 2
Flags = 0

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.ActualArgs.Title]
ParamType = 2
Flags = 0

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.ActualArgs.CenterPosition]
ParamType = 16
Flags = 0

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.ActualArgs.XPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.ActualArgs.YPosition]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.ActualArgs.IsModal]
ParamType = 16
Flags = 0

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.ActualArgs.ShowOkButton]
Expr = "True"
ParamType = 16
Flags = 0

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.ActualArgs.ShowCancelButton]
Expr = "False"
ParamType = 16
Flags = 0

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.ActualArgs.DialogTimeout]
Expr = "0"
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.ActualArgs.OkButtonPressed]
ParamType = 16

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.ActualArgs.CancelButtonPressed]
ParamType = 16

[DEF, NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype]
Message = Str
Title = Str
CenterPosition = Bool
XPosition = Num
YPosition = Num
IsModal = Bool
ShowOkButton = Bool
ShowCancelButton = Bool
DialogTimeout = Num
OkButtonPressed = Bool
CancelButtonPressed = Bool

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype.Message]
%COMMENT = "Message to show."

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype.Title]
%COMMENT = "Dialog title. (Default: Empty)"

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype]
CenterPosition = True
ShowOkButton = True
%FLG: OkButtonPressed = 4
%FLG: CancelButtonPressed = 4

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype.CenterPosition]
%COMMENT = "If True, the dialog is positioned in the center of the screen. (Default: True)"

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype.XPosition]
%COMMENT = "Position of the dialog, X coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype.YPosition]
%COMMENT = "Position of the dialog, Y coordinate. Parameter is ignored, if CenterPosition is True. (Default: 0)."

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype.IsModal]
%COMMENT = "If True, the dialog is modal to UTP TEF or Sequence Editor. (Default: False)"

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype.ShowOkButton]
%COMMENT = "Show OK button in the dialog. (Default: True)"

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype.ShowCancelButton]
%COMMENT = "Show Cancel button in the dialog. (Default: False)"

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype.DialogTimeout]
%COMMENT Line0001 = "Optional. Dialog timeout in seconds. If 0, the timeout is not used and the dialog is shown until operator press a button"
%COMMENT Line0002 = ". (Default: 0)"

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype.OkButtonPressed]
%COMMENT = "Returns True, if OK button was pressed."

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.SData.Prototype.CancelButtonPressed]
%COMMENT = "Returns True, if Cancel button was pressed."

[DEF, NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_UI_Station_ShowPopupMessageDialog.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_IOPLCVariableBooleanRead]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_IOPLCVariableBooleanRead]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"PLC.Variable.Boolean.Read\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1515759314
%VERSION = "14.0.0.41"
%TYPELASTMOD = "4.5.1.134"
%TYPE_FLG = 2

[NoffzUTP_IOPLCVariableBooleanRead.Menu]
ItemName = "\"PLC.Variable.Boolean.Read\""
Group = "UTP IO"

[DEF, NoffzUTP_IOPLCVariableBooleanRead.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_IOPLCVariableBooleanRead.TS]
Icon = "Noffz\\UTP IO PLC.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_IOPLCVariableBooleanRead.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_IOPLCVariableBooleanRead.TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Read"
Trace = "Off"

[DEF, NoffzUTP_IOPLCVariableBooleanRead.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_IOPLCVariableBooleanRead.TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[NoffzUTP_IOPLCVariableBooleanRead.TS.SData.ActualArgs.VariableValue]
UseDef = False
ParamType = 16

[NoffzUTP_IOPLCVariableBooleanRead.TS.SData.ActualArgs.VariableName]
UseDef = False
ParamType = 2
Flags = 0

[DEF, NoffzUTP_IOPLCVariableBooleanRead.TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[NoffzUTP_IOPLCVariableBooleanRead.TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, NoffzUTP_IOPLCVariableBooleanRead.TS.Requirements]
Links = Strs

[NoffzUTP_IOPLCVariableBooleanRead.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_IOPLCVariableBooleanRead.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_IOPLCVariableBooleanRead.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, Goto]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[Goto]
%HI: Substeps = [0]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat Line0001 = "ResStr(\"NI_SUBSTEPS\", \"GOTO_DESCR_PREFIX\", \"Goto\") + \" \" + \n  TargetName(RunState.Sequence, Step.TS.CustTrueAct"
DescriptionFormat Line0002 = "Target, true, true, -1, RunState.StepGroup)\n"
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"NI_SUBSTEPS\", \"GOTO_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1666107259
%VERSION = "23.0.0.1"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554446

[DEF, Goto.Substeps]
%[0] = Step
%TYPE: %[0] = "EditSubstep"

[DEF, Goto.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[Goto.Substeps[0].TS.SData.Call]
LibPath = "CommonSubsteps.dll"
Func = "EditGotoStep"
%HI: Parms = [3]

[DEF, Goto.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"
%[2] = "TYPE, FCParameter"
%[3] = "TYPE, FCParameter"

[Goto.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
ObjType = 2
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[Goto.Substeps[0].TS.SData.Call.Parms[1]]
Name = "object"
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[Goto.Substeps[0].TS.SData.Call.Parms[2]]
Name = "reserved"
%INSTOVRD: ResultAct = 5177369
ArgVal = "0"
%INSTOVRD: Flags = 5177369

[Goto.Substeps[0].TS.SData.Call.Parms[3]]
Name = "changed"
ObjType = 2
NumPass = 1
%INSTOVRD: ResultAct = 5177369
ArgVal = "RunState.InitialSelection.SelectedFile.ChangeCount"
ArgDisplayVal = "RunState.InitialSelection.SelectedFile.ChangeCount"
%INSTOVRD: Flags = 5177369

[Goto.Substeps[0].TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 2097152
ConnectionLifetime = 0

[Goto.Substeps[0]]
%INSTFLG: TS = 262168
%INSTOVRD: TS = 262168
MenuName = "ResStr(\"NI_SUBSTEPS\", \"GOTO_EDIT_STEP_MENU_NAME\")"
SupportsReadOnly = True
HasEditPanel = True

[Goto.Substeps[0].Result]
%INSTOVRD: Error = 4194304
%INSTFLG: ReportText = 0
%INSTOVRD: Common = 4194304

[DEF, Goto.Substeps[0]]
%NAME = "Edit"

[Goto.Menu]
ItemName = "ResStr(\"NI_SUBSTEPS\", \"GOTO_MENU_ITEM_NAME\")"
Group = "NI_Goto"

[DEF, Goto.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[Goto.TS]
Icon = "goto.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7143448
ConnectionLifetime = 0
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
CustExpr = "True"
%INSTFLG: CustExpr = 1
%INSTOVRD: CustExpr = 5046297
CustTrueAct = "Goto"
%INSTFLG: CustTrueAct = 1
%INSTOVRD: CustTrueAct = 5046297
%INSTFLG: CustFalseAct = 1
%INSTOVRD: CustFalseAct = 5046297
CustTrueActTarget = "\"<End>\""
%INSTFLG: CustTrueActTarget = 1
%INSTOVRD: CustTrueActTarget = 5046297
%INSTFLG: LoopType = 1
%INSTOVRD: LoopType = 5046297
%INSTFLG: LoopWhile = 1
%INSTOVRD: LoopWhile = 5046297
%INSTFLG: LoopStatus = 1
%INSTOVRD: LoopStatus = 5046297
%INSTFLG: LoopIncrement = 1
%INSTOVRD: LoopIncrement = 5046297
%INSTFLG: LoopInitialize = 1
%INSTOVRD: LoopInitialize = 5046297
%INSTFLG: LoopOpt = 1
%INSTOVRD: LoopOpt = 5046297
CanSpecifyModule = False
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, Goto.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, Goto.TS.Requirements]
Links = Strs

[Goto.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[Goto.NI_Data]
%HI: EditPanels = [0]

[Goto.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.GotoTabInfo"

[DEF, Goto.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[Goto.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_TEF_Model_TestSocket_SkipProductSequence]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_Model_TestSocket_SkipProductSequence]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"Model.TestSocket.SkipProductSequence\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127342
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.Menu]
ItemName = "\"Skip Product Sequence\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.SkipProductSequence"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"

[NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.TS.SData.Prototype]
TestSocket = Num

[NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.TS.SData.Prototype]
TestSocket = Nan

[NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[DEF, NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_Model_TestSocket_SkipProductSequence.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_IO_Code]
%LOCATION = "UserTypes"
Code = Str
CodeValid = Bool
RawResponse = Str
%ROOT_TYPE = True

[NoffzUTP_IO_Code]
%TIMESTAMP = 1512032005
%VERSION = "14.0.0.40"
%TYPELASTMOD = "4.5.1.134"

[DEF, NI_Lock]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
%FLG: Result = 2097152
NameOrRefExpr = "TYPE, Expression"
LifetimeRefExpr = "TYPE, Expression"
TimeoutEnabled = Bool
TimeoutExpr = "TYPE, Expression"
ErrorOnTimeout = Bool
AlreadyExistsExpr = "TYPE, Expression"
NumThreadsWaitingExpr = "TYPE, Expression"
Operation = Num
Lifetime = Num
LockLifetime = Num
CreateIfDoesNotExist = Bool
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NI_Lock]
DescriptionFormat Line0001 = "ResStr(\"NI_MUTEX_STEP_TYPE_OPER_NAME\", Str( Step.Operation ) ) + \"(\" + LocalizeExpression(Step.NameOrRefExpr) + \")\"
DescriptionFormat Line0002 = """
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"NI_MUTEX_STEP_TYPE\", \"DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%HI: Substeps = [2]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
CodeTemplates = "Default_Template"
%FLG: CodeTemplates = 4194328
%HI: AdditionalResultsHints = [1]
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 6291456
ErrorOnTimeout = True
Lifetime = 3
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1666107258
%VERSION = "23.0.0.1"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554446

[NI_Lock.Menu]
ItemName = "ResStr(\"NI_MUTEX_STEP_TYPE\", \"MENU_ITEM_NAME\")"
Group = "NI_NonAdvSynchronization"

[DEF, NI_Lock.Substeps]
%[0] = Step
%TYPE: %[0] = "Substep"
%[1] = Step
%TYPE: %[1] = "PostSubstep"
%[2] = Step
%TYPE: %[2] = "EditSubstep"

[NI_Lock.Substeps[0].TS]
Id = "ID#:/AAp+G3ORUqJ2tKFptFzVB"

[DEF, NI_Lock.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Lock.Substeps[0].TS.SData.Call]
LibPath = "syncsteps.dll"
Func = "?SetMutexAdditionalResultsHintsForOperation@@YAXPAUStep@TS@@@Z"
%HI: Parms = [1]

[DEF, NI_Lock.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Lock.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Lock.Substeps[0].TS.SData.Call.Parms[1]]
Name = "step"
Type = 205
StructType = "TS::Step"
%INSTOVRD: ResultAct = 5177369
ArgVal = "Step"
%INSTOVRD: Flags = 5177369

[DEF, NI_Lock.Substeps[0]]
%NAME = "OnNewStep"

[DEF, NI_Lock.Substeps[1].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Lock.Substeps[1].TS.SData.Call]
LibPath = "syncsteps.dll"
Func = "DoMutexOperation"
%HI: Parms = [1]

[DEF, NI_Lock.Substeps[1].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Lock.Substeps[1].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Lock.Substeps[1].TS.SData.Call.Parms[1]]
Name = "seqContext"
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
ArgDisplayVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Lock.Substeps[1].TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 2097152
ConnectionLifetime = 0

[NI_Lock.Substeps[1].TS.CustomResults.%EPTYPE]
Name = "\"Foo\""
ValueToLog = "12"
IsAnyType = False

[NI_Lock.Substeps[1]]
%INSTFLG: TS = 262168
%INSTOVRD: TS = 262168

[NI_Lock.Substeps[1].Result]
%INSTOVRD: Error = 4194304
%INSTFLG: ReportText = 0
%INSTOVRD: Common = 4194304

[DEF, NI_Lock.Substeps[1]]
%NAME = "Post"

[DEF, NI_Lock.Substeps[2].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Lock.Substeps[2].TS.SData.Call]
LibPath = "syncsteps.dll"
Func = "EditMutexStep"
%HI: Parms = [3]

[DEF, NI_Lock.Substeps[2].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"
%[2] = "TYPE, FCParameter"
%[3] = "TYPE, FCParameter"

[NI_Lock.Substeps[2].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Lock.Substeps[2].TS.SData.Call.Parms[1]]
Name = "sequenceContext"
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Lock.Substeps[2].TS.SData.Call.Parms[2]]
Name = "reserved"
%INSTOVRD: ResultAct = 5177369
ArgVal = "0"
%INSTOVRD: Flags = 5177369

[NI_Lock.Substeps[2].TS.SData.Call.Parms[3]]
Name = "changeCount"
NumPass = 1
%INSTOVRD: ResultAct = 5177369
ArgVal = "RunState.InitialSelection.SelectedFile.ChangeCount"
ArgDisplayVal = "RunState.InitialSelection.SelectedFile.ChangeCount"
%INSTOVRD: Flags = 5177369

[NI_Lock.Substeps[2].TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 2097152
ConnectionLifetime = 0

[NI_Lock.Substeps[2].TS.CustomResults.%EPTYPE]
Name = "\"Foo\""
ValueToLog = "12"
IsAnyType = False

[NI_Lock.Substeps[2]]
%INSTFLG: TS = 262168
%INSTOVRD: TS = 262168
MenuName = "ResStr(\"NI_MUTEX_STEP_TYPE\", \"EDIT_STEP_MENU_NAME\")"
SupportsReadOnly = True
HasEditPanel = True

[NI_Lock.Substeps[2].Result]
%INSTOVRD: Error = 4194304
%INSTFLG: ReportText = 0
%INSTOVRD: Common = 4194304

[DEF, NI_Lock.Substeps[2]]
%NAME = "Edit"

[DEF, NI_Lock.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"
%[0] = "TYPE, NI_CustomResult"
%[1] = "TYPE, NI_CustomResult"

[NI_Lock.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_MUTEX_STEP_TYPE\", \"LOCK_NAME\")"
ValueToLog Line0001 = "RunState.Thread.RunTimeVariables.SetValInterface(\"NationalInstruments_TestStand_SyncObj_TempNameOrRefAdditionalResult\""
ValueToLog Line0002 = ", PropOption_InsertIfMissing, &Evaluate(Step.NameOrRefExpr)),\nRunState.Thread.RunTimeVariables.SetValString(\"NationalI"
ValueToLog Line0003 = "nstruments_TestStand_SyncObj_TempNameOrRefAdditionalResultString\", PropOption_InsertIfMissing,\n#NoValidation(\nRunStat"
ValueToLog Line0004 = "e.Thread.RunTimeVariables.NationalInstruments_TestStand_SyncObj_TempNameOrRefAdditionalResult.AsPropertyObject.Type.Valu"
ValueToLog Line0005 = "eType == PropValType_String ? \n*RunState.Thread.RunTimeVariables.NationalInstruments_TestStand_SyncObj_TempNameOrRefAdd"
ValueToLog Line0006 = "itionalResult :\n(RunState.Thread.RunTimeVariables.NationalInstruments_TestStand_SyncObj_TempNameOrRefAdditionalResult.A"
ValueToLog Line0007 = "sPropertyObject.Type.ValueType == PropValType_Array && RunState.Thread.RunTimeVariables.NationalInstruments_TestStand_Sy"
ValueToLog Line0008 = "ncObj_TempNameOrRefAdditionalResult.AsPropertyObject.Type.ElementType.ValueType == PropValType_String) ?\n\" {\" + Str(*"
ValueToLog Line0009 = "RunState.Thread.RunTimeVariables.NationalInstruments_TestStand_SyncObj_TempNameOrRefAdditionalResult, \"\", 1, False, \""
ValueToLog Line0010 = ", \") + \"}\" :\nStep.NameOrRefExpr\n)),\nRunState.Thread.RunTimeVariables.DeleteSubProperty(\"NationalInstruments_TestS"
ValueToLog Line0011 = "tand_SyncObj_TempNameOrRefAdditionalResult\", 0), // Make sure we don't extend lifetime if result was a reference or arr"
ValueToLog Line0012 = "ay of references\n#NoValidation(RunState.Thread.RunTimeVariables.NationalInstruments_TestStand_SyncObj_TempNameOrRefAddi"
ValueToLog Line0013 = "tionalResultString)"

[NI_Lock.AdditionalResultsHints[1]]
Name = "ResStr(\"NI_MUTEX_STEP_TYPE\", \"OPERATION\")"
ValueToLog = "ResStr(\"NI_MUTEX_STEP_TYPE_OPER_NAME\", Str(Step.Operation))"

[NI_Lock.TS]
Icon = "ni_mutex.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7143448
BatchSyncOpt = 2
ConnectionLifetime = 0
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NI_Lock.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, NI_Lock.TS.Requirements]
Links = Strs

[NI_Lock.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[NI_Lock.TS.CustomResults.%EPTYPE]
Name = "\"Foo\""
ValueToLog = "12"
IsAnyType = False

[NI_Lock.NI_Data]
%HI: EditPanels = [0]

[NI_Lock.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.LockTabInfo"

[DEF, NI_Lock.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NI_Lock.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NI_Rendezvous]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
%FLG: Result = 2097152
NameOrRefExpr = "TYPE, Expression"
LifetimeRefExpr = "TYPE, Expression"
TimeoutEnabled = Bool
TimeoutExpr = "TYPE, Expression"
ErrorOnTimeout = Bool
AlreadyExistsExpr = "TYPE, Expression"
RendezvousCountExpr = "TYPE, Expression"
NumThreadsWaitingExpr = "TYPE, Expression"
Operation = Num
Lifetime = Num
RendezvousCountOutExpr = "TYPE, Expression"
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NI_Rendezvous]
DescriptionFormat Line0001 = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE_OPER_NAME\", Str( Step.Operation ) ) + \"(\" + LocalizeExpression(Step.NameOrRefExpr) +"
DescriptionFormat Line0002 = " \")\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%HI: Substeps = [2]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
CodeTemplates = "Default_Template"
%FLG: CodeTemplates = 4194328
%HI: AdditionalResultsHints = [1]
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 6291456
ErrorOnTimeout = True
RendezvousCountExpr = "2"
Lifetime = 3
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1666107258
%VERSION = "23.0.0.1"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554446

[NI_Rendezvous.Menu]
ItemName = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"MENU_ITEM_NAME\")"
Group = "NI_NonAdvSynchronization"

[DEF, NI_Rendezvous.Substeps]
%[0] = Step
%TYPE: %[0] = "Substep"
%[1] = Step
%TYPE: %[1] = "PostSubstep"
%[2] = Step
%TYPE: %[2] = "EditSubstep"

[NI_Rendezvous.Substeps[0].TS]
Id = "ID#:S6BkhKMUU0+ZyOMeHf/9cA"

[DEF, NI_Rendezvous.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Rendezvous.Substeps[0].TS.SData.Call]
LibPath = "syncsteps.dll"
Func = "?SetRendezvousAdditionalResultsHintsForOperation@@YAXPAUStep@TS@@@Z"
%HI: Parms = [1]

[DEF, NI_Rendezvous.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Rendezvous.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Rendezvous.Substeps[0].TS.SData.Call.Parms[1]]
Type = 205
StructType = "TS::Step"
%INSTOVRD: ResultAct = 5177369
ArgVal = "Step"
%INSTOVRD: Flags = 5177369

[DEF, NI_Rendezvous.Substeps[0]]
%NAME = "OnNewStep"

[DEF, NI_Rendezvous.Substeps[1].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Rendezvous.Substeps[1].TS.SData.Call]
LibPath = "syncsteps.dll"
Func = "DoRendezvousOperation"
%HI: Parms = [1]

[DEF, NI_Rendezvous.Substeps[1].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Rendezvous.Substeps[1].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Rendezvous.Substeps[1].TS.SData.Call.Parms[1]]
Name = "seqContext"
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
ArgDisplayVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Rendezvous.Substeps[1].TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 2097152
ConnectionLifetime = 0

[NI_Rendezvous.Substeps[1].TS.CustomResults.%EPTYPE]
Name = "\"Foo\""
ValueToLog = "12"
IsAnyType = False

[NI_Rendezvous.Substeps[1]]
%INSTFLG: TS = 262168
%INSTOVRD: TS = 262168

[NI_Rendezvous.Substeps[1].Result]
%INSTOVRD: Error = 4194304
%INSTFLG: ReportText = 0
%INSTOVRD: Common = 4194304

[DEF, NI_Rendezvous.Substeps[1]]
%NAME = "Post"

[DEF, NI_Rendezvous.Substeps[2].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Rendezvous.Substeps[2].TS.SData.Call]
LibPath = "syncsteps.dll"
Func = "EditRendezvousStep"
%HI: Parms = [3]

[DEF, NI_Rendezvous.Substeps[2].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"
%[2] = "TYPE, FCParameter"
%[3] = "TYPE, FCParameter"

[NI_Rendezvous.Substeps[2].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Rendezvous.Substeps[2].TS.SData.Call.Parms[1]]
Name = "sequenceContext"
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Rendezvous.Substeps[2].TS.SData.Call.Parms[2]]
Name = "reserved"
%INSTOVRD: ResultAct = 5177369
ArgVal = "0"
%INSTOVRD: Flags = 5177369

[NI_Rendezvous.Substeps[2].TS.SData.Call.Parms[3]]
Name = "changeCount"
NumPass = 1
%INSTOVRD: ResultAct = 5177369
ArgVal = "RunState.InitialSelection.SelectedFile.ChangeCount"
ArgDisplayVal = "RunState.InitialSelection.SelectedFile.ChangeCount"
%INSTOVRD: Flags = 5177369

[NI_Rendezvous.Substeps[2].TS]
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 2097152
ConnectionLifetime = 0

[NI_Rendezvous.Substeps[2].TS.CustomResults.%EPTYPE]
Name = "\"Foo\""
ValueToLog = "12"
IsAnyType = False

[NI_Rendezvous.Substeps[2]]
%INSTFLG: TS = 262168
%INSTOVRD: TS = 262168
MenuName = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"EDIT_STEP_MENU_NAME\")"
SupportsReadOnly = True
HasEditPanel = True

[NI_Rendezvous.Substeps[2].Result]
%INSTOVRD: Error = 4194304
%INSTFLG: ReportText = 0
%INSTOVRD: Common = 4194304

[DEF, NI_Rendezvous.Substeps[2]]
%NAME = "Edit"

[DEF, NI_Rendezvous.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"
%[0] = "TYPE, NI_CustomResult"
%[1] = "TYPE, NI_CustomResult"

[NI_Rendezvous.AdditionalResultsHints[0]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"RENDEZVOUS_NAME\")"
ValueToLog Line0001 = "RunState.Thread.RunTimeVariables.SetValInterface(\"NationalInstruments_TestStand_SyncObj_TempNameOrRefAdditionalResult\""
ValueToLog Line0002 = ", PropOption_InsertIfMissing, &Evaluate(Step.NameOrRefExpr)),\nRunState.Thread.RunTimeVariables.SetValString(\"NationalI"
ValueToLog Line0003 = "nstruments_TestStand_SyncObj_TempNameOrRefAdditionalResultString\", PropOption_InsertIfMissing,\n#NoValidation(\nRunStat"
ValueToLog Line0004 = "e.Thread.RunTimeVariables.NationalInstruments_TestStand_SyncObj_TempNameOrRefAdditionalResult.AsPropertyObject.Type.Valu"
ValueToLog Line0005 = "eType == PropValType_String ? \n*RunState.Thread.RunTimeVariables.NationalInstruments_TestStand_SyncObj_TempNameOrRefAdd"
ValueToLog Line0006 = "itionalResult :\n(RunState.Thread.RunTimeVariables.NationalInstruments_TestStand_SyncObj_TempNameOrRefAdditionalResult.A"
ValueToLog Line0007 = "sPropertyObject.Type.ValueType == PropValType_Array && RunState.Thread.RunTimeVariables.NationalInstruments_TestStand_Sy"
ValueToLog Line0008 = "ncObj_TempNameOrRefAdditionalResult.AsPropertyObject.Type.ElementType.ValueType == PropValType_String) ?\n\" {\" + Str(*"
ValueToLog Line0009 = "RunState.Thread.RunTimeVariables.NationalInstruments_TestStand_SyncObj_TempNameOrRefAdditionalResult, \"\", 1, False, \""
ValueToLog Line0010 = ", \") + \"}\" :\nStep.NameOrRefExpr\n)),\nRunState.Thread.RunTimeVariables.DeleteSubProperty(\"NationalInstruments_TestS"
ValueToLog Line0011 = "tand_SyncObj_TempNameOrRefAdditionalResult\", 0), // Make sure we don't extend lifetime if result was a reference or arr"
ValueToLog Line0012 = "ay of references\n#NoValidation(RunState.Thread.RunTimeVariables.NationalInstruments_TestStand_SyncObj_TempNameOrRefAddi"
ValueToLog Line0013 = "tionalResultString)"

[NI_Rendezvous.AdditionalResultsHints[1]]
Name = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE\", \"OPERATION\")"
ValueToLog = "ResStr(\"NI_RENDEZVOUS_STEP_TYPE_OPER_NAME\", Str(Step.Operation))"

[NI_Rendezvous.TS]
Icon = "ni_rendezvous.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7143448
BatchSyncOpt = 2
ConnectionLifetime = 0
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NI_Rendezvous.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, NI_Rendezvous.TS.Requirements]
Links = Strs

[NI_Rendezvous.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[NI_Rendezvous.TS.CustomResults.%EPTYPE]
Name = "\"Foo\""
ValueToLog = "12"
IsAnyType = False

[NI_Rendezvous.NI_Data]
%HI: EditPanels = [0]

[NI_Rendezvous.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.RendezvousTabInfo"

[DEF, NI_Rendezvous.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NI_Rendezvous.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NI_Flow_Select]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
ItemExpr = "TYPE, Expression"
EvaluatedItemExpr = Ref
CompareCase = Bool
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
Description = Str
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NI_Flow_Select]
DescriptionFormat Line0001 = "Step.ItemExpr == \"\" ? ResStr(\"FLOW_CONTROL_STEPS\", \"UNSPECIFIED\"): (Step.Description + Str(LocalizeExpression(Step"
DescriptionFormat Line0002 = ".ItemExpr), \"%expr\", 0x7))"
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"FLOW_CONTROL_STEPS\", \"SELECT_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%HI: Substeps = [1]
%FLG: CodeTemplates = 4194328
%INSTFLG: TS = 262168
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%INSTFLG: EvaluatedItemExpr = 8
%FLG: BlockStartTypes = 4194328
BlockEndTypes = "NI_Flow_End"
%FLG: BlockEndTypes = 4194328
AppliesToBlockStructure = True
%FLG: AppliesToBlockStructure = 4194328
%INSTFLG: Description = 8
%FLG: AdditionalResultsHints = 4194328
CanEncapsulate = True
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1690473346
%VERSION = "23.0.0.2"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438
%INSTFLG = 67108864

[NI_Flow_Select.Menu]
ItemName = "ResStr(\"FLOW_CONTROL_STEPS\", \"SELECT_INSERT_MENU_ITEM_NAME\")"
Group = "NI_FlowControl_Select"

[DEF, NI_Flow_Select.Substeps]
%[0] = Step
%TYPE: %[0] = "Substep"
%[1] = Step
%TYPE: %[1] = "EditSubstep"

[NI_Flow_Select.Substeps[0].TS]
Id = "ID#:uYQLDOQgCESmwGJXxnAWXB"

[DEF, NI_Flow_Select.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_Select.Substeps[0].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "OnNewSelectStep"
%HI: Parms = [1]

[DEF, NI_Flow_Select.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_Select.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_Select.Substeps[0].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[DEF, NI_Flow_Select.Substeps[0]]
%NAME = "OnNewStep"

[NI_Flow_Select.Substeps[1].TS]
Id = "ID#:ny3+UymIz0KMmddc0LFNWB"

[DEF, NI_Flow_Select.Substeps[1].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_Select.Substeps[1].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "EditSelectStep"
%HI: Parms = [1]

[DEF, NI_Flow_Select.Substeps[1].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_Select.Substeps[1].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_Select.Substeps[1].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Flow_Select.Substeps[1]]
MenuName = "ResStr(\"FLOW_CONTROL_STEPS\", \"SELECT_EDIT_MENU_ITEM_NAME\")"
SupportsReadOnly = True
HasEditPanel = True

[DEF, NI_Flow_Select.Substeps[1]]
%NAME = "Edit"

[NI_Flow_Select.TS]
Icon = "FlowControl\\NI_Select.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
%INSTFLG: PreCond = 1
%INSTOVRD: PreCond = 5046297
LoadOpt = "DynamicLoad"
%INSTFLG: LoadOpt = 1
%INSTOVRD: LoadOpt = 5046297
%INSTFLG: UnloadOpt = 1
%INSTOVRD: UnloadOpt = 5046297
%INSTFLG: WindowActivation = 1
%INSTOVRD: WindowActivation = 5046297
%INSTFLG: StepFCSeqF = 1
%INSTOVRD: StepFCSeqF = 5046297
%INSTOVRD: IgnoreRTE = 5046297
%INSTOVRD: UseMutex = 5046297
%INSTOVRD: MutexNameOrRef = 5046297
%INSTOVRD: BatchSyncOpt = 5046297
%INSTFLG: SwitchEnabled = 1
%INSTOVRD: SwitchEnabled = 5046297
%INSTFLG: VirtualDeviceName = 1
%INSTOVRD: VirtualDeviceName = 5046297
%INSTFLG: SwitchOperation = 1
%INSTOVRD: SwitchOperation = 5046297
%INSTFLG: RouteGroupConnect = 1
%INSTOVRD: RouteGroupConnect = 5046297
%INSTFLG: RouteGroupDisconnect = 1
%INSTOVRD: RouteGroupDisconnect = 5046297
%INSTFLG: MulticonnectMode = 1
%INSTOVRD: MulticonnectMode = 5046297
%INSTFLG: OperationOrder = 1
%INSTOVRD: OperationOrder = 5046297
%INSTFLG: ConnectionLifetime = 1
%INSTOVRD: ConnectionLifetime = 5046297
%INSTFLG: WaitForDebounce = 1
%INSTOVRD: WaitForDebounce = 5046297
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
%INSTFLG: CustExpr = 1
%INSTOVRD: CustExpr = 5046297
%INSTFLG: CustTrueAct = 1
%INSTOVRD: CustTrueAct = 5046297
%INSTFLG: CustFalseAct = 1
%INSTOVRD: CustFalseAct = 5046297
%INSTFLG: CustTrueActTarget = 1
%INSTOVRD: CustTrueActTarget = 5046297
%INSTFLG: CustFalseActTarget = 1
%INSTOVRD: CustFalseActTarget = 5046297
%INSTFLG: LoopType = 1
%INSTOVRD: LoopType = 5046297
%INSTFLG: LoopWhile = 1
%INSTOVRD: LoopWhile = 5046297
%INSTFLG: LoopStatus = 1
%INSTOVRD: LoopStatus = 5046297
%INSTFLG: LoopIncrement = 1
%INSTOVRD: LoopIncrement = 5046297
%INSTFLG: LoopInitialize = 1
%INSTOVRD: LoopInitialize = 5046297
%INSTFLG: LoopOpt = 1
%INSTOVRD: LoopOpt = 5046297
%INSTFLG: PreExpr = 1
%INSTOVRD: PreExpr = 5046297
%INSTFLG: PostExpr = 1
%INSTOVRD: PostExpr = 5046297
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%INSTFLG: PrecondIntExe = 1
%INSTOVRD: PrecondIntExe = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NI_Flow_Select.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, NI_Flow_Select.TS.Requirements]
Links = Strs

[NI_Flow_Select.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[NI_Flow_Select.NI_Data]
%HI: EditPanels = [0]

[NI_Flow_Select.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.NI_Flow_SelectTabInfo"

[DEF, NI_Flow_Select.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NI_Flow_Select.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304

[DEF, NI_Flow_Select.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[DEF, NI_Flow_Case]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
ItemExpr = "TYPE, Expression"
EvaluatedItemExpr = Ref
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
IsDefault = Bool
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NI_Flow_Case]
DescriptionFormat Line0001 = "Step.IsDefault ? ResStr(\"FLOW_CONTROL_STEPS\" ,\"DEFAULT_CASE_STEP_DESC\") : (Step.ItemExpr == \"\" ? ResStr(\"FLOW_CON"
DescriptionFormat Line0002 = "TROL_STEPS\" ,\"UNSPECIFIED\") : Str(LocalizeExpression(Step.ItemExpr), \"%expr\", 0x7))"
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"FLOW_CONTROL_STEPS\", \"CASE_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%HI: Substeps = [1]
%FLG: CodeTemplates = 4194328
%INSTFLG: TS = 262168
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%INSTFLG: EvaluatedItemExpr = 8
%FLG: BlockStartTypes = 4194328
BlockEndTypes = "NI_Flow_End"
%FLG: BlockEndTypes = 4194328
AppliesToBlockStructure = True
%FLG: AppliesToBlockStructure = 4194328
%FLG: AdditionalResultsHints = 4194328
CanEncapsulate = True
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1690473346
%VERSION = "23.0.0.2"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438
%INSTFLG = 67108864

[NI_Flow_Case.Menu]
ItemName = "ResStr(\"FLOW_CONTROL_STEPS\", \"CASE_INSERT_MENU_ITEM_NAME\")"
Group = "NI_FlowControl_Select"

[DEF, NI_Flow_Case.Substeps]
%[0] = Step
%TYPE: %[0] = "EditSubstep"
%[1] = Step
%TYPE: %[1] = "Substep"

[NI_Flow_Case.Substeps[0].TS]
Id = "ID#:sNb3RAMq4EaA7XOPMuETPB"

[DEF, NI_Flow_Case.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_Case.Substeps[0].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "?EditCaseStep@@YAXPAUIDispatch@@@Z"
%HI: Parms = [1]

[DEF, NI_Flow_Case.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_Case.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_Case.Substeps[0].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Flow_Case.Substeps[0]]
MenuName = "ResStr(\"FLOW_CONTROL_STEPS\", \"CASE_EDIT_MENU_ITEM_NAME\")"
HasEditPanel = True

[DEF, NI_Flow_Case.Substeps[0]]
%NAME = "Edit"

[NI_Flow_Case.Substeps[1].TS]
Id = "ID#:v1tSb0aNwUW9iKNYEztupB"

[DEF, NI_Flow_Case.Substeps[1].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_Case.Substeps[1].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "?OnNewStepWithEndStep@@YAXPAUIDispatch@@@Z"
%HI: Parms = [1]

[DEF, NI_Flow_Case.Substeps[1].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_Case.Substeps[1].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_Case.Substeps[1].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[DEF, NI_Flow_Case.Substeps[1]]
%NAME = "OnNewStep"

[NI_Flow_Case.TS]
Icon = "FlowControl\\NI_Case.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
%INSTFLG: PreCond = 1
%INSTOVRD: PreCond = 5046297
LoadOpt = "DynamicLoad"
%INSTFLG: LoadOpt = 1
%INSTOVRD: LoadOpt = 5046297
%INSTFLG: UnloadOpt = 1
%INSTOVRD: UnloadOpt = 5046297
%INSTFLG: WindowActivation = 1
%INSTOVRD: WindowActivation = 5046297
%INSTFLG: StepFCSeqF = 1
%INSTOVRD: StepFCSeqF = 5046297
%INSTOVRD: IgnoreRTE = 5046297
%INSTOVRD: UseMutex = 5046297
%INSTOVRD: MutexNameOrRef = 5046297
%INSTOVRD: BatchSyncOpt = 5046297
%INSTFLG: SwitchEnabled = 1
%INSTOVRD: SwitchEnabled = 5046297
%INSTFLG: VirtualDeviceName = 1
%INSTOVRD: VirtualDeviceName = 5046297
%INSTFLG: SwitchOperation = 1
%INSTOVRD: SwitchOperation = 5046297
%INSTFLG: RouteGroupConnect = 1
%INSTOVRD: RouteGroupConnect = 5046297
%INSTFLG: RouteGroupDisconnect = 1
%INSTOVRD: RouteGroupDisconnect = 5046297
%INSTFLG: MulticonnectMode = 1
%INSTOVRD: MulticonnectMode = 5046297
%INSTFLG: OperationOrder = 1
%INSTOVRD: OperationOrder = 5046297
%INSTFLG: ConnectionLifetime = 1
%INSTOVRD: ConnectionLifetime = 5046297
%INSTFLG: WaitForDebounce = 1
%INSTOVRD: WaitForDebounce = 5046297
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
%INSTFLG: CustExpr = 1
%INSTOVRD: CustExpr = 5046297
%INSTFLG: CustTrueAct = 1
%INSTOVRD: CustTrueAct = 5046297
%INSTFLG: CustFalseAct = 1
%INSTOVRD: CustFalseAct = 5046297
%INSTFLG: CustTrueActTarget = 1
%INSTOVRD: CustTrueActTarget = 5046297
%INSTFLG: CustFalseActTarget = 1
%INSTOVRD: CustFalseActTarget = 5046297
%INSTFLG: LoopType = 1
%INSTOVRD: LoopType = 5046297
%INSTFLG: LoopWhile = 1
%INSTOVRD: LoopWhile = 5046297
%INSTFLG: LoopStatus = 1
%INSTOVRD: LoopStatus = 5046297
%INSTFLG: LoopIncrement = 1
%INSTOVRD: LoopIncrement = 5046297
%INSTFLG: LoopInitialize = 1
%INSTOVRD: LoopInitialize = 5046297
%INSTFLG: LoopOpt = 1
%INSTOVRD: LoopOpt = 5046297
%INSTFLG: PreExpr = 1
%INSTOVRD: PreExpr = 5046297
%INSTFLG: PostExpr = 1
%INSTOVRD: PostExpr = 5046297
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%INSTFLG: PrecondIntExe = 1
%INSTOVRD: PrecondIntExe = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NI_Flow_Case.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, NI_Flow_Case.TS.Requirements]
Links = Strs

[NI_Flow_Case.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[NI_Flow_Case.NI_Data]
%HI: EditPanels = [0]

[NI_Flow_Case.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.NI_Flow_CaseTabInfo"

[DEF, NI_Flow_Case.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NI_Flow_Case.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304

[DEF, NI_Flow_Case.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[DEF, NI_Flow_ForEach]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
Description = Str
ArrayExpr = "TYPE, Expression"
EvaluatedArrayExpr = Ref
ArrayElementExpr = "TYPE, Expression"
EvaluatedArrayElementExpr = Ref
OffsetExpr = "TYPE, Expression"
EvaluatedOffsetExpr = Ref
SubscriptExpr = "TYPE, Expression"
EvaluatedSubscriptExpr = Ref
Offset = Num
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
ElementRestorerLocal = Str
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
IterationType = Num
FieldMappingExpr = "TYPE, Expression"
EvaluatedFieldMappingExpr = Ref
AutoCloseAtEndofFile = Bool
%ROOT_TYPE = True

[NI_Flow_ForEach]
DescriptionFormat Line0001 = "Step.ArrayExpr == \"\" ? ResStr(\"FLOW_CONTROL_STEPS\", \"UNSPECIFIED\") :  \n(Step.Description !=\"\" ? Step.Descriptio"
DescriptionFormat Line0002 = "n : \n((Step.ArrayElementExpr != \"\" ? Str(LocalizeExpression(Step.ArrayElementExpr), \"%expr\", 0x7) : ResStr(\"FLOW_C"
DescriptionFormat Line0003 = "ONTROL_STEPS\", \"ARRAYELEMENT\")) + ResStr(\"FLOW_CONTROL_STEPS\", \"IN\") + Str(LocalizeExpression(Step.ArrayExpr), \""
DescriptionFormat Line0004 = "%expr\", 0x7)))\n\n\n"
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"FLOW_CONTROL_STEPS\", \"FOREACH_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%HI: Substeps = [1]
%FLG: CodeTemplates = 4194328
%INSTFLG: TS = 262168
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%INSTFLG: Description = 8
%INSTFLG: EvaluatedArrayExpr = 8
%INSTFLG: EvaluatedArrayElementExpr = 8
%INSTFLG: EvaluatedOffsetExpr = 8
%INSTFLG: EvaluatedSubscriptExpr = 8
%INSTFLG: Offset = 8
%FLG: BlockStartTypes = 4194328
BlockEndTypes = "NI_Flow_End"
%FLG: BlockEndTypes = 4194328
AppliesToBlockStructure = True
%FLG: AppliesToBlockStructure = 4194328
%INSTFLG: ElementRestorerLocal = 8
%FLG: AdditionalResultsHints = 4194328
CanEncapsulate = True
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1690473017
%VERSION = "23.0.0.2"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438
%INSTFLG = 67108864

[NI_Flow_ForEach.Menu]
ItemName = "ResStr(\"FLOW_CONTROL_STEPS\", \"FOREACH_INSERT_MENU_ITEM_NAME\")"
Group = "NI_FlowControl_Loop"

[DEF, NI_Flow_ForEach.Substeps]
%[0] = Step
%TYPE: %[0] = "Substep"
%[1] = Step
%TYPE: %[1] = "EditSubstep"

[NI_Flow_ForEach.Substeps[0].TS]
Id = "ID#:0fUZg4IOtkenNvECPWGh4A"

[DEF, NI_Flow_ForEach.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_ForEach.Substeps[0].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "?OnNewStepWithEndStep@@YAXPAUIDispatch@@@Z"
%HI: Parms = [1]

[DEF, NI_Flow_ForEach.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_ForEach.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_ForEach.Substeps[0].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[DEF, NI_Flow_ForEach.Substeps[0]]
%NAME = "OnNewStep"

[NI_Flow_ForEach.Substeps[1].TS]
Id = "ID#:ny3+UymIz0KMmddc0LFNWB"

[DEF, NI_Flow_ForEach.Substeps[1].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_ForEach.Substeps[1].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "?EditForEachStep@@YAXPAUIDispatch@@@Z"
%HI: Parms = [1]

[DEF, NI_Flow_ForEach.Substeps[1].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_ForEach.Substeps[1].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_ForEach.Substeps[1].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Flow_ForEach.Substeps[1]]
MenuName = "ResStr(\"FLOW_CONTROL_STEPS\", \"FOREACH_EDIT_MENU_ITEM_NAME\")"
SupportsReadOnly = True
HasEditPanel = True

[DEF, NI_Flow_ForEach.Substeps[1]]
%NAME = "Edit"

[NI_Flow_ForEach.TS]
Icon = "FlowControl\\NI_ForEach.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
%INSTFLG: PreCond = 1
%INSTOVRD: PreCond = 5046297
LoadOpt = "DynamicLoad"
%INSTFLG: LoadOpt = 1
%INSTOVRD: LoadOpt = 5046297
%INSTFLG: UnloadOpt = 1
%INSTOVRD: UnloadOpt = 5046297
%INSTFLG: WindowActivation = 1
%INSTOVRD: WindowActivation = 5046297
%INSTFLG: StepFCSeqF = 1
%INSTOVRD: StepFCSeqF = 5046297
%INSTOVRD: IgnoreRTE = 5046297
%INSTOVRD: UseMutex = 5046297
%INSTOVRD: MutexNameOrRef = 5046297
%INSTOVRD: BatchSyncOpt = 5046297
%INSTFLG: SwitchEnabled = 1
%INSTOVRD: SwitchEnabled = 5046297
%INSTFLG: VirtualDeviceName = 1
%INSTOVRD: VirtualDeviceName = 5046297
%INSTFLG: SwitchOperation = 1
%INSTOVRD: SwitchOperation = 5046297
%INSTFLG: RouteGroupConnect = 1
%INSTOVRD: RouteGroupConnect = 5046297
%INSTFLG: RouteGroupDisconnect = 1
%INSTOVRD: RouteGroupDisconnect = 5046297
%INSTFLG: MulticonnectMode = 1
%INSTOVRD: MulticonnectMode = 5046297
%INSTFLG: OperationOrder = 1
%INSTOVRD: OperationOrder = 5046297
%INSTFLG: ConnectionLifetime = 1
%INSTOVRD: ConnectionLifetime = 5046297
%INSTFLG: WaitForDebounce = 1
%INSTOVRD: WaitForDebounce = 5046297
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
%INSTFLG: CustExpr = 1
%INSTOVRD: CustExpr = 5046297
%INSTFLG: CustTrueAct = 1
%INSTOVRD: CustTrueAct = 5046297
%INSTFLG: CustFalseAct = 1
%INSTOVRD: CustFalseAct = 5046297
%INSTFLG: CustTrueActTarget = 1
%INSTOVRD: CustTrueActTarget = 5046297
%INSTFLG: CustFalseActTarget = 1
%INSTOVRD: CustFalseActTarget = 5046297
%INSTFLG: LoopType = 1
%INSTOVRD: LoopType = 5046297
%INSTFLG: LoopWhile = 1
%INSTOVRD: LoopWhile = 5046297
%INSTFLG: LoopStatus = 1
%INSTOVRD: LoopStatus = 5046297
%INSTFLG: LoopIncrement = 1
%INSTOVRD: LoopIncrement = 5046297
%INSTFLG: LoopInitialize = 1
%INSTOVRD: LoopInitialize = 5046297
%INSTFLG: LoopOpt = 1
%INSTOVRD: LoopOpt = 5046297
%INSTFLG: PreExpr = 1
%INSTOVRD: PreExpr = 5046297
%INSTFLG: PostExpr = 1
%INSTOVRD: PostExpr = 5046297
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%INSTFLG: PrecondIntExe = 1
%INSTOVRD: PrecondIntExe = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NI_Flow_ForEach.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, NI_Flow_ForEach.TS.Requirements]
Links = Strs

[NI_Flow_ForEach.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[NI_Flow_ForEach.NI_Data]
%HI: EditPanels = [0]

[NI_Flow_ForEach.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.NI_Flow_ForEachTabInfo"

[DEF, NI_Flow_ForEach.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NI_Flow_ForEach.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304

[DEF, NI_Flow_ForEach.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[DEF, NI_Flow_For]
%LOCATION = "StepTypes"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
Substeps = "TYPE, StepTypeSubstepsArray"
CodeTemplates = Str
%FLG: CodeTemplates = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
Description = Str
InitializationExpr = "TYPE, Expression"
EvaluatedInitializationExpr = Ref
ConditionExpr = "TYPE, Expression"
EvaluatedConditionExpr = Ref
IncrementExpr = "TYPE, Expression"
EvaluatedIncrementExpr = Ref
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CustomLoop = Bool
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NI_Flow_For]
DescriptionFormat Line0001 = "Step.Description + ((Step.InitializationExpr + Step.ConditionExpr + Step.IncrementExpr == \"\") ? ResStr(\"FLOW_CONTROL_"
DescriptionFormat Line0002 = "STEPS\", \"UNSPECIFIED\") :\n(Str(LocalizeExpression(Step.InitializationExpr), \"%expr\", 0x7) + \"; \" + Str(LocalizeEx"
DescriptionFormat Line0003 = "pression(Step.ConditionExpr), \"%expr\", 0x7) + \"; \" + Str(LocalizeExpression(Step.IncrementExpr), \"%expr\", 0x7)))"
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "ResStr(\"FLOW_CONTROL_STEPS\", \"FOR_DEF_STEP_NAME\")"
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%HI: Substeps = [1]
%FLG: CodeTemplates = 4194328
%INSTFLG: TS = 262168
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%INSTFLG: Description = 8
%INSTFLG: EvaluatedInitializationExpr = 8
%INSTFLG: EvaluatedConditionExpr = 8
%INSTFLG: EvaluatedIncrementExpr = 8
%FLG: BlockStartTypes = 4194328
BlockEndTypes = "NI_Flow_End"
%FLG: BlockEndTypes = 4194328
AppliesToBlockStructure = True
%FLG: AppliesToBlockStructure = 4194328
%FLG: AdditionalResultsHints = 4194328
CanEncapsulate = True
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1690472809
%VERSION = "23.0.0.2"
%TYPELASTMOD = "23.0.0.0"
%MINPRODVER = "23.0.0.0"
%TYPE_FLG = 33554438
%INSTFLG = 67108864

[NI_Flow_For.Menu]
ItemName = "ResStr(\"FLOW_CONTROL_STEPS\", \"FOR_INSERT_MENU_ITEM_NAME\")"
Group = "NI_FlowControl_Loop"

[DEF, NI_Flow_For.Substeps]
%[0] = Step
%TYPE: %[0] = "Substep"
%[1] = Step
%TYPE: %[1] = "EditSubstep"

[NI_Flow_For.Substeps[0].TS]
Id = "ID#:0fUZg4IOtkenNvECPWGh4A"

[DEF, NI_Flow_For.Substeps[0].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_For.Substeps[0].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "?OnNewStepWithEndStep@@YAXPAUIDispatch@@@Z"
%HI: Parms = [1]

[DEF, NI_Flow_For.Substeps[0].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_For.Substeps[0].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_For.Substeps[0].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[DEF, NI_Flow_For.Substeps[0]]
%NAME = "OnNewStep"

[NI_Flow_For.Substeps[1].TS]
Id = "ID#:ny3+UymIz0KMmddc0LFNWB"

[DEF, NI_Flow_For.Substeps[1].TS]
SData = "TYPE, FlexCStepAdditions"
%FLG: SData = 2097152

[NI_Flow_For.Substeps[1].TS.SData.Call]
LibPath = "NIFlowControl.dll"
Func = "?EditForStep@@YAXPAUIDispatch@@@Z"
%HI: Parms = [1]

[DEF, NI_Flow_For.Substeps[1].TS.SData.Call.Parms]
%[0] = "TYPE, FCParameter"
%[1] = "TYPE, FCParameter"

[NI_Flow_For.Substeps[1].TS.SData.Call.Parms[0]]
Name = "Return Value"
Type = 3
%INSTOVRD: ResultAct = 5177369
%INSTOVRD: Flags = 5177369

[NI_Flow_For.Substeps[1].TS.SData.Call.Parms[1]]
Type = 4
%INSTOVRD: ResultAct = 5177369
ArgVal = "ThisContext"
%INSTOVRD: Flags = 5177369

[NI_Flow_For.Substeps[1]]
MenuName = "ResStr(\"FLOW_CONTROL_STEPS\", \"FOR_EDIT_MENU_ITEM_NAME\")"
SupportsReadOnly = True
HasEditPanel = True

[DEF, NI_Flow_For.Substeps[1]]
%NAME = "Edit"

[NI_Flow_For.TS]
Icon = "FlowControl\\NI_For.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
%INSTFLG: PreCond = 1
%INSTOVRD: PreCond = 5046297
LoadOpt = "DynamicLoad"
%INSTFLG: LoadOpt = 1
%INSTOVRD: LoadOpt = 5046297
%INSTFLG: UnloadOpt = 1
%INSTOVRD: UnloadOpt = 5046297
%INSTFLG: WindowActivation = 1
%INSTOVRD: WindowActivation = 5046297
%INSTFLG: StepFCSeqF = 1
%INSTOVRD: StepFCSeqF = 5046297
%INSTOVRD: IgnoreRTE = 5046297
%INSTOVRD: UseMutex = 5046297
%INSTOVRD: MutexNameOrRef = 5046297
%INSTOVRD: BatchSyncOpt = 5046297
%INSTFLG: SwitchEnabled = 1
%INSTOVRD: SwitchEnabled = 5046297
%INSTFLG: VirtualDeviceName = 1
%INSTOVRD: VirtualDeviceName = 5046297
%INSTFLG: SwitchOperation = 1
%INSTOVRD: SwitchOperation = 5046297
%INSTFLG: RouteGroupConnect = 1
%INSTOVRD: RouteGroupConnect = 5046297
%INSTFLG: RouteGroupDisconnect = 1
%INSTOVRD: RouteGroupDisconnect = 5046297
%INSTFLG: MulticonnectMode = 1
%INSTOVRD: MulticonnectMode = 5046297
%INSTFLG: OperationOrder = 1
%INSTOVRD: OperationOrder = 5046297
%INSTFLG: ConnectionLifetime = 1
%INSTOVRD: ConnectionLifetime = 5046297
%INSTFLG: WaitForDebounce = 1
%INSTOVRD: WaitForDebounce = 5046297
%INSTFLG: PassAct = 1
%INSTOVRD: PassAct = 5046297
%INSTFLG: FailAct = 1
%INSTOVRD: FailAct = 5046297
%INSTFLG: PassActTarget = 1
%INSTOVRD: PassActTarget = 5046297
%INSTFLG: FailActTarget = 1
%INSTOVRD: FailActTarget = 5046297
%INSTFLG: CustExpr = 1
%INSTOVRD: CustExpr = 5046297
%INSTFLG: CustTrueAct = 1
%INSTOVRD: CustTrueAct = 5046297
%INSTFLG: CustFalseAct = 1
%INSTOVRD: CustFalseAct = 5046297
%INSTFLG: CustTrueActTarget = 1
%INSTOVRD: CustTrueActTarget = 5046297
%INSTFLG: CustFalseActTarget = 1
%INSTOVRD: CustFalseActTarget = 5046297
%INSTFLG: LoopType = 1
%INSTOVRD: LoopType = 5046297
%INSTFLG: LoopWhile = 1
%INSTOVRD: LoopWhile = 5046297
%INSTFLG: LoopStatus = 1
%INSTOVRD: LoopStatus = 5046297
%INSTFLG: LoopIncrement = 1
%INSTOVRD: LoopIncrement = 5046297
%INSTFLG: LoopInitialize = 1
%INSTOVRD: LoopInitialize = 5046297
%INSTFLG: LoopOpt = 1
%INSTOVRD: LoopOpt = 5046297
%INSTFLG: PreExpr = 1
%INSTOVRD: PreExpr = 5046297
%INSTFLG: PostExpr = 1
%INSTOVRD: PostExpr = 5046297
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%INSTFLG: PrecondIntExe = 1
%INSTOVRD: PrecondIntExe = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NI_Flow_For.TS]
SData = "TYPE, NoneStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[DEF, NI_Flow_For.TS.Requirements]
Links = Strs

[NI_Flow_For.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[NI_Flow_For.NI_Data]
%HI: EditPanels = [0]

[NI_Flow_For.NI_Data.EditPanels]
%[0] = "NIStepTypeControls.dll|NationalInstruments.TestStand.StepTypeControls.NI_Flow_ForTabInfo"

[DEF, NI_Flow_For.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NI_Flow_For.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304

[DEF, NI_Flow_For.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[DEF, NoffzUTP_TEF_Model_TestSocket_GetSerialNumber]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_Model_TestSocket_GetSerialNumber]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"Model.TestSocket.GetSerialNumber\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127336
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.Menu]
ItemName = "\"Get Serial Number\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.GetSerialNumber"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
SerialNumber = "TYPE, SequenceArgument"

[NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS.SData.ActualArgs.SerialNumber]
UseDef = False
ParamType = 2

[DEF, NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS.SData.Prototype]
TestSocket = Num
SerialNumber = Str

[NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS.SData.Prototype]
TestSocket = Nan
%FLG: SerialNumber = 4

[NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS.SData.Prototype.SerialNumber]
%COMMENT = "Serial number of the UUT on the Test Socket."

[DEF, NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_Model_TestSocket_GetSerialNumber.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_TEF_UI_TestSocket_StepList_Clear]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_UI_TestSocket_StepList_Clear]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"UI.TestSocket.StepList.Clear\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127446
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_UI_TestSocket_StepList_Clear.Menu]
ItemName = "\"Clear Step List\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_UI_TestSocket_StepList_Clear.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_UI_TestSocket_StepList_Clear.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_UI_TestSocket_StepList_Clear.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_UI_TestSocket_StepList_Clear.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.TestSocket.StepList.Clear"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_UI_TestSocket_StepList_Clear.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_UI_TestSocket_StepList_Clear.TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"

[NoffzUTP_TEF_UI_TestSocket_StepList_Clear.TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, NoffzUTP_TEF_UI_TestSocket_StepList_Clear.TS.SData.Prototype]
TestSocket = Num

[NoffzUTP_TEF_UI_TestSocket_StepList_Clear.TS.SData.Prototype]
TestSocket = Nan

[NoffzUTP_TEF_UI_TestSocket_StepList_Clear.TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[DEF, NoffzUTP_TEF_UI_TestSocket_StepList_Clear.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_UI_TestSocket_StepList_Clear.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_UI_TestSocket_StepList_Clear.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_UI_TestSocket_StepList_Clear.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_TEF_UI_Station_ShowMessage]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_UI_Station_ShowMessage]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"UI.Station.ShowMessage\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127349
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_UI_Station_ShowMessage.Menu]
ItemName = "\"Show Message\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_UI_Station_ShowMessage.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_UI_Station_ShowMessage.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_UI_Station_ShowMessage.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_UI_Station_ShowMessage.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "UI.Station.ShowMessage"
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_UI_Station_ShowMessage.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_UI_Station_ShowMessage.TS.SData.ActualArgs]
Message = "TYPE, SequenceArgument"
Color = "TYPE, SequenceArgument"
FontSize = "TYPE, SequenceArgument"

[NoffzUTP_TEF_UI_Station_ShowMessage.TS.SData.ActualArgs.Message]
UseDef = False
ParamType = 2
Flags = 0

[NoffzUTP_TEF_UI_Station_ShowMessage.TS.SData.ActualArgs.Color]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_UI_Station_ShowMessage.TS.SData.ActualArgs.FontSize]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, NoffzUTP_TEF_UI_Station_ShowMessage.TS.SData.Prototype]
Message = Str
Color = Num
FontSize = Num

[NoffzUTP_TEF_UI_Station_ShowMessage.TS.SData.Prototype]
Color = Nan
FontSize = Nan

[NoffzUTP_TEF_UI_Station_ShowMessage.TS.SData.Prototype.Color]
%NUMFMT = "%#x"

[DEF, NoffzUTP_TEF_UI_Station_ShowMessage.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_UI_Station_ShowMessage.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_UI_Station_ShowMessage.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_UI_Station_ShowMessage.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_IOPLCVariableStringRead]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_IOPLCVariableStringRead]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"PLC.Variable.String.Read\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1515759344
%VERSION = "14.0.0.41"
%TYPELASTMOD = "4.5.1.134"
%TYPE_FLG = 2

[NoffzUTP_IOPLCVariableStringRead.Menu]
ItemName = "\"PLC.Variable.String.Read\""
Group = "UTP IO"

[DEF, NoffzUTP_IOPLCVariableStringRead.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_IOPLCVariableStringRead.TS]
Icon = "Noffz\\UTP IO PLC.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_IOPLCVariableStringRead.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_IOPLCVariableStringRead.TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.String.Read"
Trace = "Off"

[DEF, NoffzUTP_IOPLCVariableStringRead.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_IOPLCVariableStringRead.TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[NoffzUTP_IOPLCVariableStringRead.TS.SData.ActualArgs.VariableValue]
UseDef = False
ParamType = 2

[NoffzUTP_IOPLCVariableStringRead.TS.SData.ActualArgs.VariableName]
UseDef = False
ParamType = 2
Flags = 0

[DEF, NoffzUTP_IOPLCVariableStringRead.TS.SData.Prototype]
VariableValue = Str
VariableName = Str

[NoffzUTP_IOPLCVariableStringRead.TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, NoffzUTP_IOPLCVariableStringRead.TS.Requirements]
Links = Strs

[NoffzUTP_IOPLCVariableStringRead.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_IOPLCVariableStringRead.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_IOPLCVariableStringRead.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, AquireTesting]
%LOCATION = "UserTypes"
IdentNo = Str
Mode = Num
CycleTime = Num
AttributeSet = Strs
TSNumber = Strs
TSDescription = Strs
TSNominalValueSet = Nums
TSLowerToleranceSet = Nums
TSUpperToleranceSet = Nums
TSUnitSet = Strs
TSValueSet = Nums
FailureSet = Strs
FileAttachmentSet = Strs
%ROOT_TYPE = True

[AquireTesting.IdentNo]
%EXTDATA = True

[EXTDATA, AquireTesting.IdentNo, CLUST]
DataVersion = 1
ClusterMemberLabelName = "IdentNo"

[AquireTesting.Mode]
%EXTDATA = True

[EXTDATA, AquireTesting.Mode, CLUST]
DataVersion = 1
ClusterMemberLabelName = "Mode"

[AquireTesting.CycleTime]
%EXTDATA = True

[EXTDATA, AquireTesting.CycleTime, CLUST]
DataVersion = 1
ClusterMemberLabelName = "CycleTime"

[AquireTesting.AttributeSet]
%EXTDATA = True

[EXTDATA, AquireTesting.AttributeSet, CLUST]
DataVersion = 1
ClusterMemberLabelName = "AttributeSet"

[AquireTesting.TSNumber]
%EXTDATA = True

[EXTDATA, AquireTesting.TSNumber, CLUST]
DataVersion = 1
ClusterMemberLabelName = "TSNumber"

[AquireTesting.TSDescription]
%EXTDATA = True

[EXTDATA, AquireTesting.TSDescription, CLUST]
DataVersion = 1
ClusterMemberLabelName = "TSDescription"

[AquireTesting.TSNominalValueSet]
%EXTDATA = True

[EXTDATA, AquireTesting.TSNominalValueSet, CLUST]
DataVersion = 1
ClusterMemberLabelName = "TSNominalValueSet"

[AquireTesting.TSLowerToleranceSet]
%EXTDATA = True

[EXTDATA, AquireTesting.TSLowerToleranceSet, CLUST]
DataVersion = 1
ClusterMemberLabelName = "TSLowerToleranceSet"

[AquireTesting.TSUpperToleranceSet]
%EXTDATA = True

[EXTDATA, AquireTesting.TSUpperToleranceSet, CLUST]
DataVersion = 1
ClusterMemberLabelName = "TSUpperToleranceSet"

[AquireTesting.TSUnitSet]
%EXTDATA = True

[EXTDATA, AquireTesting.TSUnitSet, CLUST]
DataVersion = 1
ClusterMemberLabelName = "TSUnitSet"

[AquireTesting.TSValueSet]
%EXTDATA = True

[EXTDATA, AquireTesting.TSValueSet, CLUST]
DataVersion = 1
ClusterMemberLabelName = "TSValueSet"

[AquireTesting.FailureSet]
%EXTDATA = True

[EXTDATA, AquireTesting.FailureSet, CLUST]
DataVersion = 1
ClusterMemberLabelName = "FailureSet"

[AquireTesting.FileAttachmentSet]
%EXTDATA = True

[EXTDATA, AquireTesting.FileAttachmentSet, CLUST]
DataVersion = 1
ClusterMemberLabelName = "FileAttachmentSet"

[AquireTesting]
%TIMESTAMP = 1670840050
%TYPELASTMOD = "17.1.0.130"
%EXTDATA = True

[EXTDATA, AquireTesting, CLUST]
AllowClusterPassing = True
DataVersion = 1

[DEF, NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"Model.TestSocket.SetProductAndVariant\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1686127333
%VERSION = "5.0.0.8"
%TYPELASTMOD = "5.0.1.66"
%TYPE_FLG = 2

[NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.Menu]
ItemName = "\"Set Product And Variant\""
Group = "NI_Miscellaneous"

[DEF, NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS]
Icon = "UTP TEF.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
ConnectionLifetime = 0
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS.SData]
SFPath = "Noffz.UTP.TEF.API.seq"
SeqName = "Model.TestSocket.SetProductAndVariant"
%FLG: Prototype = 262144
CustomThreadAffinity = "-1"
Trace = "Off"

[DEF, NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS.SData.ActualArgs]
TestSocket = "TYPE, SequenceArgument"
Product = "TYPE, SequenceArgument"
Variant = "TYPE, SequenceArgument"

[NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS.SData.ActualArgs.TestSocket]
ParamType = 4
ParamRepresentation = 1
Flags = 0

[NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS.SData.ActualArgs.Product]
UseDef = False
ParamType = 2
Flags = 0

[NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS.SData.ActualArgs.Variant]
UseDef = False
ParamType = 2
Flags = 0

[DEF, NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS.SData.Prototype]
TestSocket = Num
Product = Str
Variant = Str

[NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS.SData.Prototype]
TestSocket = Nan

[NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS.SData.Prototype.TestSocket]
%COMMENT = "Test Socket number. (Default: Current Test Socket Index)"

[DEF, NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS.Requirements]
Links = Strs

[NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_TEF_Model_TestSocket_SetProductAndVariant.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, CAN_Response]
%LOCATION = "UserTypes"
ID = Num
MSGTYPE = Num
LEN = Num
DATA_0_ = Num
DATA_1_ = Num
DATA_2_ = Num
DATA_3_ = Num
DATA_4_ = Num
DATA_5_ = Num
DATA_6_ = Num
DATA_7_ = Num
%ROOT_TYPE = True

[CAN_Response.ID]
%EXTDATA = True

[EXTDATA, CAN_Response.ID, CLUST]
DataVersion = 1
ClusterMemberLabelName = "ID"

[CAN_Response.MSGTYPE]
%EXTDATA = True

[EXTDATA, CAN_Response.MSGTYPE, CLUST]
DataVersion = 1
ClusterMemberLabelName = "MSGTYPE"

[CAN_Response.LEN]
%EXTDATA = True

[EXTDATA, CAN_Response.LEN, CLUST]
DataVersion = 1
ClusterMemberLabelName = "LEN"

[CAN_Response.DATA_0_]
%EXTDATA = True

[EXTDATA, CAN_Response.DATA_0_, CLUST]
DataVersion = 1
ClusterMemberLabelName = "DATA[0]"

[CAN_Response.DATA_1_]
%EXTDATA = True

[EXTDATA, CAN_Response.DATA_1_, CLUST]
DataVersion = 1
ClusterMemberLabelName = "DATA[1]"

[CAN_Response.DATA_2_]
%EXTDATA = True

[EXTDATA, CAN_Response.DATA_2_, CLUST]
DataVersion = 1
ClusterMemberLabelName = "DATA[2]"

[CAN_Response.DATA_3_]
%EXTDATA = True

[EXTDATA, CAN_Response.DATA_3_, CLUST]
DataVersion = 1
ClusterMemberLabelName = "DATA[3]"

[CAN_Response.DATA_4_]
%EXTDATA = True

[EXTDATA, CAN_Response.DATA_4_, CLUST]
DataVersion = 1
ClusterMemberLabelName = "DATA[4]"

[CAN_Response.DATA_5_]
%EXTDATA = True

[EXTDATA, CAN_Response.DATA_5_, CLUST]
DataVersion = 1
ClusterMemberLabelName = "DATA[5]"

[CAN_Response.DATA_6_]
%EXTDATA = True

[EXTDATA, CAN_Response.DATA_6_, CLUST]
DataVersion = 1
ClusterMemberLabelName = "DATA[6]"

[CAN_Response.DATA_7_]
%EXTDATA = True

[EXTDATA, CAN_Response.DATA_7_, CLUST]
DataVersion = 1
ClusterMemberLabelName = "DATA[7]"

[CAN_Response]
%TIMESTAMP = 1741602642
%TYPELASTMOD = "23.0.0.49152"
%EXTDATA = True

[EXTDATA, CAN_Response, CLUST]
AllowClusterPassing = True
DataVersion = 1

[DEF, NoffzUTP_IOPLCVariableI16Read]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_IOPLCVariableI16Read]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"PLC.Variable.I16.Read\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1515759322
%VERSION = "14.0.0.41"
%TYPELASTMOD = "4.5.1.134"
%TYPE_FLG = 2

[NoffzUTP_IOPLCVariableI16Read.Menu]
ItemName = "\"PLC.Variable.I16.Read\""
Group = "UTP IO"

[DEF, NoffzUTP_IOPLCVariableI16Read.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_IOPLCVariableI16Read.TS]
Icon = "Noffz\\UTP IO PLC.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_IOPLCVariableI16Read.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_IOPLCVariableI16Read.TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.I16.Read"
Trace = "Off"

[DEF, NoffzUTP_IOPLCVariableI16Read.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_IOPLCVariableI16Read.TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[NoffzUTP_IOPLCVariableI16Read.TS.SData.ActualArgs.VariableValue]
UseDef = False
ParamType = 4
ParamRepresentation = 1

[NoffzUTP_IOPLCVariableI16Read.TS.SData.ActualArgs.VariableName]
UseDef = False
ParamType = 2
Flags = 0

[DEF, NoffzUTP_IOPLCVariableI16Read.TS.SData.Prototype]
VariableValue = Num
VariableName = Str

[NoffzUTP_IOPLCVariableI16Read.TS.SData.Prototype]
%FLG: VariableValue = 4

[DEF, NoffzUTP_IOPLCVariableI16Read.TS.Requirements]
Links = Strs

[NoffzUTP_IOPLCVariableI16Read.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_IOPLCVariableI16Read.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_IOPLCVariableI16Read.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_IOSwitchSPSTSet]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_IOSwitchSPSTSet]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"Switch.SPST.Set\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1515759066
%VERSION = "14.0.0.41"
%TYPELASTMOD = "4.5.1.134"
%TYPE_FLG = 2

[NoffzUTP_IOSwitchSPSTSet.Menu]
ItemName = "\"Switch.SPST.Set\""
Group = "UTP IO"

[DEF, NoffzUTP_IOSwitchSPSTSet.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_IOSwitchSPSTSet.TS]
Icon = "Noffz\\UTP IO Switch.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: CanSpecifyModule = 131072
%FLG: CanEditCode = 131072
%FLG: CanEditModulePrototype = 131072
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_IOSwitchSPSTSet.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_IOSwitchSPSTSet.TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.Switch.SPST.Position.Set"
Trace = "Off"

[DEF, NoffzUTP_IOSwitchSPSTSet.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_IOSwitchSPSTSet.TS.SData.ActualArgs]
ChannelName = "TYPE, SequenceArgument"
SwitchPosition = "TYPE, SequenceArgument"

[NoffzUTP_IOSwitchSPSTSet.TS.SData.ActualArgs.ChannelName]
UseDef = False
ParamType = 2
Flags = 0

[NoffzUTP_IOSwitchSPSTSet.TS.SData.ActualArgs.SwitchPosition]
UseDef = False
ParamType = 4
ParamRepresentation = 1
Flags = 0

[DEF, NoffzUTP_IOSwitchSPSTSet.TS.SData.Prototype]
ChannelName = Str
SwitchPosition = Num

[NoffzUTP_IOSwitchSPSTSet.TS.SData.Prototype.SwitchPosition]
%COMMENT = "0:Open; 1:Closed"

[DEF, NoffzUTP_IOSwitchSPSTSet.TS.Requirements]
Links = Strs

[NoffzUTP_IOSwitchSPSTSet.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_IOSwitchSPSTSet.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_IOSwitchSPSTSet.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

[DEF, NoffzUTP_IOPLCVariableBooleanWrite]
%LOCATION = "StepTypes"
Substeps = "TYPE, StepTypeSubstepsArray"
DescriptionFormat = "TYPE, Expression"
%FLG: DescriptionFormat = 524288
DefaultNameFormat = "TYPE, Expression"
%FLG: DefaultNameFormat = 524288
Menu = "TYPE, StepTypeMenu"
AdditionalResultsHints = Objs
%FLG: AdditionalResultsHints = 524288
TS = "TYPE, TEInf"
NI_Data = "TYPE, StepTypeNIData"
Result = Obj
CodeTemplates = Str
%FLG: CodeTemplates = 524288
BlockStartTypes = Str
%FLG: BlockStartTypes = 524288
BlockEndTypes = Str
%FLG: BlockEndTypes = 524288
AppliesToBlockStructure = Bool
%FLG: AppliesToBlockStructure = 524288
CanEncapsulate = Bool
%FLG: CanEncapsulate = 524288
%ROOT_TYPE = True

[NoffzUTP_IOPLCVariableBooleanWrite]
%INSTFLG: Substeps = 524312
%INSTOVRD: Substeps = 655384
DescriptionFormat = "\"%ModuleDescription\""
%FLG: DescriptionFormat = 4194328
%INSTFLG: DescriptionFormat = 4718616
%INSTOVRD: DescriptionFormat = 4718616
DefaultNameFormat = "\"PLC.Variable.Boolean.Write\""
%FLG: DefaultNameFormat = 4194328
%INSTFLG: DefaultNameFormat = 4718616
%INSTOVRD: DefaultNameFormat = 4718616
%INSTFLG: Menu = 524312
%INSTOVRD: Menu = 524312
%FLG: AdditionalResultsHints = 4194328
%INSTFLG: TS = 262168
%INSTOVRD: TS = 4456472
%FLG: Result = 4194304
%INSTFLG: Result = 4194304
%FLG: CodeTemplates = 4194328
%FLG: BlockStartTypes = 4194328
%FLG: BlockEndTypes = 4194328
%FLG: AppliesToBlockStructure = 4194328
%FLG: CanEncapsulate = 4194328
%TIMESTAMP = 1515759319
%VERSION = "14.0.0.41"
%TYPELASTMOD = "4.5.1.134"
%TYPE_FLG = 2

[NoffzUTP_IOPLCVariableBooleanWrite.Menu]
ItemName = "\"PLC.Variable.Boolean.Write\""
Group = "UTP IO"

[DEF, NoffzUTP_IOPLCVariableBooleanWrite.AdditionalResultsHints]
%EPTYPE = "TYPE, NI_CustomResult"

[NoffzUTP_IOPLCVariableBooleanWrite.TS]
Icon = "Noffz\\UTP IO PLC.ico"
%INSTFLG: SData = 2097152
%INSTOVRD: SData = 7274521
StatusExpr Line0001 = "(Step.Result.Status == \"Done\" && (Step.TS.SData.ThreadOpt == 0 || Step.TS.SData.ThreadOpt == 3)) ? \"Passed\" : Step.R"
StatusExpr Line0002 = "esult.Status"
%INSTFLG: StatusExpr = 1
%INSTOVRD: StatusExpr = 5046297
%FLG: Requirements = 1
%INSTFLG: Requirements = 1

[DEF, NoffzUTP_IOPLCVariableBooleanWrite.TS]
SData = "TYPE, SeqCallStepAdditions"
%FLG: SData = 2097152
Requirements = Obj
%FLG: Requirements = 2097152

[NoffzUTP_IOPLCVariableBooleanWrite.TS.SData]
SFPath = "Noffz.UTP.IO.seq"
SeqName = "UTP.IO.PLC.Variable.Boolean.Write"
Trace = "Off"

[DEF, NoffzUTP_IOPLCVariableBooleanWrite.TS.SData]
ActualArgs = Arguments
%FLG: ActualArgs = 2097152
Prototype = Obj
%FLG: Prototype = 2097152

[DEF, NoffzUTP_IOPLCVariableBooleanWrite.TS.SData.ActualArgs]
VariableValue = "TYPE, SequenceArgument"
VariableName = "TYPE, SequenceArgument"

[NoffzUTP_IOPLCVariableBooleanWrite.TS.SData.ActualArgs.VariableValue]
UseDef = False
ParamType = 16
Flags = 0

[NoffzUTP_IOPLCVariableBooleanWrite.TS.SData.ActualArgs.VariableName]
UseDef = False
ParamType = 2
Flags = 0

[DEF, NoffzUTP_IOPLCVariableBooleanWrite.TS.SData.Prototype]
VariableValue = Bool
VariableName = Str

[DEF, NoffzUTP_IOPLCVariableBooleanWrite.TS.Requirements]
Links = Strs

[NoffzUTP_IOPLCVariableBooleanWrite.TS.Requirements]
%FLG: Links = 71303168
%INSTFLG: Links = 71303168
%INSTOVRD: Links = 72286233

[DEF, NoffzUTP_IOPLCVariableBooleanWrite.Result]
Error = "TYPE, Error"
Status = Str
ReportText = Str
Common = "TYPE, CommonResults"

[NoffzUTP_IOPLCVariableBooleanWrite.Result]
%FLG: Error = 4194304
%INSTFLG: Error = 4194304
%INSTOVRD: Error = 4194304
%FLG: Status = 4194304
%INSTFLG: Status = 4194304
%FLG: ReportText = 4194304
%INSTFLG: ReportText = 4194304
%INSTOVRD: Common = 4194304

